-- Made By Matthew Voss
local ScreenGui = Instance.new("ScreenGui")
local main = Instance.new("Frame")
local byxXgamer1v1Xxx = Instance.new("TextLabel")
local hax = Instance.new("TextLabel")
local prisonlife15 = Instance.new("TextButton")
local CLOSE = Instance.new("TextButton")
local REVIZ = Instance.new("TextButton")
local GRABKNIFE = Instance.new("TextButton")
local FLEESP = Instance.new("TextButton")
local FleTp = Instance.new("TextButton")
local JailbreakAutoRob = Instance.new("TextButton")
local Openmain = Instance.new("Frame")
local Open = Instance.new("TextButton")

--Properties:

ScreenGui.Parent = game.CoreGui
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

main.Name = "main"
main.Parent = ScreenGui
main.BackgroundColor3 = Color3.fromRGB(85, 85, 255)
main.Position = UDim2.new(0.0784218982, 0, 0.4741036, 0)
main.Size = UDim2.new(0, 478, 0, 250)
main.Visible = false
main.Active = true
main.Draggable = true

byxXgamer1v1Xxx.Name = "by xXgamer1v1Xxx"
byxXgamer1v1Xxx.Parent = main
byxXgamer1v1Xxx.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
byxXgamer1v1Xxx.Position = UDim2.new(0, 0, 0.940508544, 0)
byxXgamer1v1Xxx.Size = UDim2.new(0, 476, 0, 14)
byxXgamer1v1Xxx.Font = Enum.Font.SciFi
byxXgamer1v1Xxx.Text = "BY xXgamer1v1Xxx"
byxXgamer1v1Xxx.TextColor3 = Color3.fromRGB(255, 255, 255)
byxXgamer1v1Xxx.TextSize = 14.000

hax.Name = "hax"
hax.Parent = main
hax.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
hax.Position = UDim2.new(0.00209205016, 0, 0, 0)
hax.Size = UDim2.new(0, 477, 0, 14)
hax.Font = Enum.Font.SciFi
hax.Text = "Hax"
hax.TextColor3 = Color3.fromRGB(255, 255, 255)
hax.TextSize = 14.000

prisonlife15.Name = "prisonlife15"
prisonlife15.Parent = main
prisonlife15.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
prisonlife15.BorderColor3 = Color3.fromRGB(255, 0, 255)
prisonlife15.Position = UDim2.new(0.0621151812, 0, 0.148305088, 0)
prisonlife15.Size = UDim2.new(0, 200, 0, 50)
prisonlife15.Font = Enum.Font.SciFi
prisonlife15.Text = "Prison Life"
prisonlife15.TextColor3 = Color3.fromRGB(255, 255, 255)
prisonlife15.TextSize = 14.000
prisonlife15.MouseButton1Down:connect(function()
--[[
    Synapse Xen v1.1.2 by Synapse GP
    VM Hash: d50147731b0ca1503cd71062277fb3b730c8634bace035bf458d5e9da70f7cc6
]]

local SynapseXen_iIllliIiIiiII=select;local SynapseXen_lllIIiIiIIiiiIIIiI=string.byte;local SynapseXen_IIiiiIililIl=string.sub;local SynapseXen_lIiIilIiliil=string.char;local SynapseXen_liIIIilllIlI=type;local SynapseXen_lliIll=table.concat;local unpack=unpack;local setmetatable=setmetatable;local pcall=pcall;local SynapseXen_ilIiIl,SynapseXen_IiiIlllIiIlll,SynapseXen_iIllIIIIIlIIiIlIliI,SynapseXen_lIIliiiiIIlIil;if bit and bit.bxor then SynapseXen_ilIiIl=bit.bxor;SynapseXen_IiiIlllIiIlll=function(SynapseXen_IiIIilIlliI,SynapseXen_lIlilil)local SynapseXen_iiliIlIlliii=SynapseXen_ilIiIl(SynapseXen_IiIIilIlliI,SynapseXen_lIlilil)if SynapseXen_iiliIlIlliii<0 then SynapseXen_iiliIlIlliii=4294967296+SynapseXen_iiliIlIlliii end;return SynapseXen_iiliIlIlliii end else SynapseXen_ilIiIl=function(SynapseXen_IiIIilIlliI,SynapseXen_lIlilil)local SynapseXen_IiilliillIiliiilIl=function(SynapseXen_liliIiIilIiIiIliIIi,SynapseXen_iIiIiiIilIiIIllIIl)return SynapseXen_liliIiIilIiIiIliIIi%(SynapseXen_iIiIiiIilIiIIllIIl*2)>=SynapseXen_iIiIiiIilIiIIllIIl end;local SynapseXen_lllIiilIiiliiiiiii=0;for SynapseXen_iiIllliIlIiI=0,31 do SynapseXen_lllIiilIiiliiiiiii=SynapseXen_lllIiilIiiliiiiiii+(SynapseXen_IiilliillIiliiilIl(SynapseXen_IiIIilIlliI,2^SynapseXen_iiIllliIlIiI)~=SynapseXen_IiilliillIiliiilIl(SynapseXen_lIlilil,2^SynapseXen_iiIllliIlIiI)and 2^SynapseXen_iiIllliIlIiI or 0)end;return SynapseXen_lllIiilIiiliiiiiii end;SynapseXen_IiiIlllIiIlll=SynapseXen_ilIiIl end;SynapseXen_iIllIIIIIlIIiIlIliI=function(SynapseXen_IllliiiIi,SynapseXen_lIiIlIlIIlIllill,SynapseXen_lIlIIil)return(SynapseXen_IllliiiIi+SynapseXen_lIiIlIlIIlIllill)%SynapseXen_lIlIIil end;SynapseXen_lIIliiiiIIlIil=function(SynapseXen_IllliiiIi,SynapseXen_lIiIlIlIIlIllill,SynapseXen_lIlIIil)return(SynapseXen_IllliiiIi-SynapseXen_lIiIlIlIIlIllill)%SynapseXen_lIlIIil end;local function SynapseXen_IliillIill(SynapseXen_iiliIlIlliii)if SynapseXen_iiliIlIlliii<0 then SynapseXen_iiliIlIlliii=4294967296+SynapseXen_iiliIlIlliii end;return SynapseXen_iiliIlIlliii end;local getfenv=getfenv;if not getfenv then getfenv=function()return _ENV end end;local SynapseXen_lIiIliilIliiIlIIli={}local SynapseXen_iliIIlIiiIlIiil={}local SynapseXen_lIillIIlilliiliiiiII;local SynapseXen_iiill;local SynapseXen_lilIIIIi={}local SynapseXen_iiIiIi={}for SynapseXen_iiIllliIlIiI=0,255 do local SynapseXen_lIiiIllIlI,SynapseXen_iIlIlilII=SynapseXen_lIiIilIiliil(SynapseXen_iiIllliIlIiI),SynapseXen_lIiIilIiliil(SynapseXen_iiIllliIlIiI,0)SynapseXen_lilIIIIi[SynapseXen_lIiiIllIlI]=SynapseXen_iIlIlilII;SynapseXen_iiIiIi[SynapseXen_iIlIlilII]=SynapseXen_lIiiIllIlI end;local function SynapseXen_iiiiIIilIll(SynapseXen_IliIlilillli,SynapseXen_iliIlIliiIliIliI,SynapseXen_ilIIIliI,SynapseXen_IiiIIl)if SynapseXen_ilIIIliI>=256 then SynapseXen_ilIIIliI,SynapseXen_IiiIIl=0,SynapseXen_IiiIIl+1;if SynapseXen_IiiIIl>=256 then SynapseXen_iliIlIliiIliIliI={}SynapseXen_IiiIIl=1 end end;SynapseXen_iliIlIliiIliIliI[SynapseXen_lIiIilIiliil(SynapseXen_ilIIIliI,SynapseXen_IiiIIl)]=SynapseXen_IliIlilillli;SynapseXen_ilIIIliI=SynapseXen_ilIIIliI+1;return SynapseXen_iliIlIliiIliIliI,SynapseXen_ilIIIliI,SynapseXen_IiiIIl end;local function SynapseXen_ilIllliliIIliIiliII(SynapseXen_liIIiiI)local function SynapseXen_llIlIlI(SynapseXen_iiIIlI)local SynapseXen_IiiIIl='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'SynapseXen_iiIIlI=string.gsub(SynapseXen_iiIIlI,'[^'..SynapseXen_IiiIIl..'=]','')return SynapseXen_iiIIlI:gsub('.',function(SynapseXen_IllliiiIi)if SynapseXen_IllliiiIi=='='then return''end;local SynapseXen_illilili,SynapseXen_iiIllllIiiIllIillilI='',SynapseXen_IiiIIl:find(SynapseXen_IllliiiIi)-1;for SynapseXen_iiIllliIlIiI=6,1,-1 do SynapseXen_illilili=SynapseXen_illilili..(SynapseXen_iiIllllIiiIllIillilI%2^SynapseXen_iiIllliIlIiI-SynapseXen_iiIllllIiiIllIillilI%2^(SynapseXen_iiIllliIlIiI-1)>0 and'1'or'0')end;return SynapseXen_illilili end):gsub('%d%d%d?%d?%d?%d?%d?%d?',function(SynapseXen_IllliiiIi)if#SynapseXen_IllliiiIi~=8 then return''end;local SynapseXen_IiilIiilll=0;for SynapseXen_iiIllliIlIiI=1,8 do SynapseXen_IiilIiilll=SynapseXen_IiilIiilll+(SynapseXen_IllliiiIi:sub(SynapseXen_iiIllliIlIiI,SynapseXen_iiIllliIlIiI)=='1'and 2^(8-SynapseXen_iiIllliIlIiI)or 0)end;return string.char(SynapseXen_IiilIiilll)end)end;SynapseXen_liIIiiI=SynapseXen_llIlIlI(SynapseXen_liIIiiI)local SynapseXen_IiiIIiiIIlliIliii=SynapseXen_IIiiiIililIl(SynapseXen_liIIiiI,1,1)if SynapseXen_IiiIIiiIIlliIliii=="u"then return SynapseXen_IIiiiIililIl(SynapseXen_liIIiiI,2)elseif SynapseXen_IiiIIiiIIlliIliii~="c"then error("Synapse Xen - Failed to verify bytecode. Please make sure your Lua implementation supports non-null terminated strings.")end;SynapseXen_liIIiiI=SynapseXen_IIiiiIililIl(SynapseXen_liIIiiI,2)local SynapseXen_IiIlIiiiIlIIlIiliiIl=#SynapseXen_liIIiiI;local SynapseXen_iliIlIliiIliIliI={}local SynapseXen_ilIIIliI,SynapseXen_IiiIIl=0,1;local SynapseXen_iIIiiiIll={}local SynapseXen_iiliIlIlliii=1;local SynapseXen_IIlIliIIii=SynapseXen_IIiiiIililIl(SynapseXen_liIIiiI,1,2)SynapseXen_iIIiiiIll[SynapseXen_iiliIlIlliii]=SynapseXen_iiIiIi[SynapseXen_IIlIliIIii]or SynapseXen_iliIlIliiIliIliI[SynapseXen_IIlIliIIii]SynapseXen_iiliIlIlliii=SynapseXen_iiliIlIlliii+1;for SynapseXen_iiIllliIlIiI=3,SynapseXen_IiIlIiiiIlIIlIiliiIl,2 do local SynapseXen_IIlIlllIIIlliill=SynapseXen_IIiiiIililIl(SynapseXen_liIIiiI,SynapseXen_iiIllliIlIiI,SynapseXen_iiIllliIlIiI+1)local SynapseXen_iIiilIlIIlllii=SynapseXen_iiIiIi[SynapseXen_IIlIliIIii]or SynapseXen_iliIlIliiIliIliI[SynapseXen_IIlIliIIii]if not SynapseXen_iIiilIlIIlllii then error("Synapse Xen - Failed to verify bytecode. Please make sure your Lua implementation supports non-null terminated strings.")end;local SynapseXen_iiiIIIIIiIliiilI=SynapseXen_iiIiIi[SynapseXen_IIlIlllIIIlliill]or SynapseXen_iliIlIliiIliIliI[SynapseXen_IIlIlllIIIlliill]if SynapseXen_iiiIIIIIiIliiilI then SynapseXen_iIIiiiIll[SynapseXen_iiliIlIlliii]=SynapseXen_iiiIIIIIiIliiilI;SynapseXen_iiliIlIlliii=SynapseXen_iiliIlIlliii+1;SynapseXen_iliIlIliiIliIliI,SynapseXen_ilIIIliI,SynapseXen_IiiIIl=SynapseXen_iiiiIIilIll(SynapseXen_iIiilIlIIlllii..SynapseXen_IIiiiIililIl(SynapseXen_iiiIIIIIiIliiilI,1,1),SynapseXen_iliIlIliiIliIliI,SynapseXen_ilIIIliI,SynapseXen_IiiIIl)else local SynapseXen_illilIiiIiIIl=SynapseXen_iIiilIlIIlllii..SynapseXen_IIiiiIililIl(SynapseXen_iIiilIlIIlllii,1,1)SynapseXen_iIIiiiIll[SynapseXen_iiliIlIlliii]=SynapseXen_illilIiiIiIIl;SynapseXen_iiliIlIlliii=SynapseXen_iiliIlIlliii+1;SynapseXen_iliIlIliiIliIliI,SynapseXen_ilIIIliI,SynapseXen_IiiIIl=SynapseXen_iiiiIIilIll(SynapseXen_illilIiiIiIIl,SynapseXen_iliIlIliiIliIliI,SynapseXen_ilIIIliI,SynapseXen_IiiIIl)end;SynapseXen_IIlIliIIii=SynapseXen_IIlIlllIIIlliill end;return SynapseXen_lliIll(SynapseXen_iIIiiiIll)end;local function SynapseXen_IllIIIIlilIIllIIl(SynapseXen_lIIlliilill,SynapseXen_IlIIIilI,SynapseXen_iiilIIilIIliiIiiii)if SynapseXen_iiilIIilIIliiIiiii then local SynapseXen_IliiiIIIl=SynapseXen_lIIlliilill/2^(SynapseXen_IlIIIilI-1)%2^(SynapseXen_iiilIIilIIliiIiiii-1-(SynapseXen_IlIIIilI-1)+1)return SynapseXen_IliiiIIIl-SynapseXen_IliiiIIIl%1 else local SynapseXen_IiiiillIIii=2^(SynapseXen_IlIIIilI-1)if SynapseXen_lIIlliilill%(SynapseXen_IiiiillIIii+SynapseXen_IiiiillIIii)>=SynapseXen_IiiiillIIii then return 1 else return 0 end end end;local function SynapseXen_Iiiill()local SynapseXen_lilIIIilIiIiilili=SynapseXen_ilIiIl(4021494697,SynapseXen_iiill)while true do if SynapseXen_lilIIIilIiIiilili==SynapseXen_ilIiIl(3012387678,SynapseXen_iliIIlIiiIlIiil[14])then SynapseXen_lIillIIlilliiliiiiII=function(SynapseXen_illiiiiiIlli,SynapseXen_IiIli)return SynapseXen_ilIiIl(SynapseXen_illiiiiiIlli-267,SynapseXen_IiIli+48121)-SynapseXen_ilIiIl(2300808449,SynapseXen_iiill)end;SynapseXen_lilIIIilIiIiilili=SynapseXen_ilIiIl(SynapseXen_lilIIIilIiIiilili,SynapseXen_ilIiIl(885947987,SynapseXen_iliIIlIiiIlIiil[12]))elseif SynapseXen_lilIIIilIiIiilili==SynapseXen_ilIiIl(4021494697,SynapseXen_iiill)then SynapseXen_lIillIIlilliiliiiiII=function(SynapseXen_illiiiiiIlli,SynapseXen_IiIli)return SynapseXen_ilIiIl(SynapseXen_illiiiiiIlli-49437,SynapseXen_IiIli+7224)+SynapseXen_ilIiIl(1031782531,SynapseXen_iliIIlIiiIlIiil[1])end;SynapseXen_lilIIIilIiIiilili=SynapseXen_lilIIIilIiIiilili+SynapseXen_ilIiIl(2300831994,SynapseXen_iiill)elseif SynapseXen_lilIIIilIiIiilili==SynapseXen_ilIiIl(2209290862,SynapseXen_iliIIlIiiIlIiil[9])then SynapseXen_lIillIIlilliiliiiiII=function(SynapseXen_illiiiiiIlli,SynapseXen_IiIli)return SynapseXen_ilIiIl(SynapseXen_illiiiiiIlli-49970,SynapseXen_IiIli-27452)-SynapseXen_ilIiIl(316025864,SynapseXen_iliIIlIiiIlIiil[7])end;SynapseXen_lilIIIilIiIiilili=SynapseXen_ilIiIl(SynapseXen_lilIIIilIiIiilili,SynapseXen_ilIiIl(3964357726,SynapseXen_iiill))elseif SynapseXen_lilIIIilIiIiilili==SynapseXen_ilIiIl(1461197654,SynapseXen_iliIIlIiiIlIiil[13])then SynapseXen_lIillIIlilliiliiiiII=function(SynapseXen_illiiiiiIlli,SynapseXen_IiIli)return SynapseXen_ilIiIl(SynapseXen_illiiiiiIlli-32351,SynapseXen_IiIli-46470)+SynapseXen_ilIiIl(3416238719,SynapseXen_iliIIlIiiIlIiil[6])end;SynapseXen_lilIIIilIiIiilili=SynapseXen_lilIIIilIiIiilili+SynapseXen_ilIiIl(316025035,SynapseXen_iliIIlIiiIlIiil[7])elseif SynapseXen_lilIIIilIiIiilili==SynapseXen_ilIiIl(2329647812,SynapseXen_iiill)then SynapseXen_lIillIIlilliiliiiiII=function(SynapseXen_illiiiiiIlli,SynapseXen_IiIli)return SynapseXen_ilIiIl(SynapseXen_illiiiiiIlli+354,SynapseXen_IiIli+36264)+SynapseXen_ilIiIl(2300834694,SynapseXen_iiill)end;SynapseXen_lilIIIilIiIiilili=SynapseXen_ilIiIl(SynapseXen_lilIIIilIiIiilili,SynapseXen_ilIiIl(4134780041,SynapseXen_iliIIlIiiIlIiil[12]))elseif SynapseXen_lilIIIilIiIiilili==SynapseXen_ilIiIl(1188280052,SynapseXen_iiill)then return elseif SynapseXen_lilIIIilIiIiilili==SynapseXen_ilIiIl(1187776833,SynapseXen_iiill)then SynapseXen_lIillIIlilliiliiiiII=function(SynapseXen_illiiiiiIlli,SynapseXen_IiIli)return SynapseXen_ilIiIl(SynapseXen_illiiiiiIlli-25779,SynapseXen_IiIli+26623)+SynapseXen_ilIiIl(2300778181,SynapseXen_iiill)end;SynapseXen_lilIIIilIiIiilili=SynapseXen_lilIIIilIiIiilili+SynapseXen_ilIiIl(2300836480,SynapseXen_iiill)elseif SynapseXen_lilIIIilIiIiilili==SynapseXen_ilIiIl(516355424,SynapseXen_iiill)then SynapseXen_lIillIIlilliiliiiiII=function(SynapseXen_illiiiiiIlli,SynapseXen_IiIli)return SynapseXen_ilIiIl(SynapseXen_illiiiiiIlli-4843,SynapseXen_IiIli-1154)-SynapseXen_ilIiIl(3256282109,SynapseXen_iliIIlIiiIlIiil[2])end;SynapseXen_lilIIIilIiIiilili=SynapseXen_ilIiIl(SynapseXen_lilIIIilIiIiilili,SynapseXen_ilIiIl(3434887545,SynapseXen_iliIIlIiiIlIiil[2]))elseif SynapseXen_lilIIIilIiIiilili==SynapseXen_ilIiIl(4294544302,SynapseXen_iliIIlIiiIlIiil[5])then SynapseXen_lIillIIlilliiliiiiII=function(SynapseXen_illiiiiiIlli,SynapseXen_IiIli)return SynapseXen_ilIiIl(SynapseXen_illiiiiiIlli+30777,SynapseXen_IiIli+20528)-SynapseXen_ilIiIl(2300830227,SynapseXen_iiill)end;SynapseXen_lilIIIilIiIiilili=SynapseXen_lilIIIilIiIiilili-SynapseXen_ilIiIl(2300811453,SynapseXen_iiill)elseif SynapseXen_lilIIIilIiIiilili==SynapseXen_ilIiIl(4021508534,SynapseXen_iiill)then SynapseXen_lIillIIlilliiliiiiII=function(SynapseXen_illiiiiiIlli,SynapseXen_IiIli)return SynapseXen_ilIiIl(SynapseXen_illiiiiiIlli+13311,SynapseXen_IiIli+18340)+SynapseXen_ilIiIl(316026491,SynapseXen_iliIIlIiiIlIiil[7])end;SynapseXen_lilIIIilIiIiilili=SynapseXen_lilIIIilIiIiilili-SynapseXen_ilIiIl(4090001522,SynapseXen_iliIIlIiiIlIiil[8])end end end;local function SynapseXen_IilIIIIIIlliiIIIlI(SynapseXen_IlIiiIlilIlili)local SynapseXen_iiIIiIIIiIIiIiIiiI=1;local SynapseXen_ililIiIIlllIIiii;local SynapseXen_IlIIIiIIIiIi;local function SynapseXen_iiiiilllli()local SynapseXen_iIiIi=SynapseXen_lllIIiIiIIiiiIIIiI(SynapseXen_IlIiiIlilIlili,SynapseXen_iiIIiIIIiIIiIiIiiI,SynapseXen_iiIIiIIIiIIiIiIiiI)SynapseXen_iiIIiIIIiIIiIiIiiI=SynapseXen_iiIIiIIIiIIiIiIiiI+1;return SynapseXen_iIiIi end;local function SynapseXen_liIiillIlIllIiill()local SynapseXen_IlllIllIliI,SynapseXen_illiiiiiIlli,SynapseXen_IiIli,SynapseXen_IliliilliilIliIIli=SynapseXen_lllIIiIiIIiiiIIIiI(SynapseXen_IlIiiIlilIlili,SynapseXen_iiIIiIIIiIIiIiIiiI,SynapseXen_iiIIiIIIiIIiIiIiiI+3)SynapseXen_iiIIiIIIiIIiIiIiiI=SynapseXen_iiIIiIIIiIIiIiIiiI+4;return SynapseXen_IliliilliilIliIIli*16777216+SynapseXen_IiIli*65536+SynapseXen_illiiiiiIlli*256+SynapseXen_IlllIllIliI end;local function SynapseXen_illIiIIIlllliil()return SynapseXen_liIiillIlIllIiill()*4294967296+SynapseXen_liIiillIlIllIiill()end;local function SynapseXen_IlIlllIiIIliIll()local SynapseXen_iiiilIli=SynapseXen_IiiIlllIiIlll(SynapseXen_liIiillIlIllIiill(),SynapseXen_lIiIliilIliiIlIIli[3056567244]or(function()local SynapseXen_IllliiiIi="print(bytecode)"SynapseXen_lIiIliilIliiIlIIli[3056567244]=SynapseXen_ilIiIl(SynapseXen_lIillIIlilliiliiiiII(162774496,80217306),SynapseXen_ilIiIl(189198288,SynapseXen_iliIIlIiiIlIiil[13]))-string.len(SynapseXen_IllliiiIi)-#{3207383502,3334861649,3029304885,2792852362}return SynapseXen_lIiIliilIliiIlIIli[3056567244]end)())local SynapseXen_lIiIllllilli=SynapseXen_IiiIlllIiIlll(SynapseXen_liIiillIlIllIiill(),SynapseXen_lIiIliilIliiIlIIli[3822568417]or(function()local SynapseXen_IllliiiIi="level 1 crook = luraph, level 100 boss = xen"SynapseXen_lIiIliilIliiIlIIli[3822568417]=SynapseXen_ilIiIl(SynapseXen_lIillIIlilliiliiiiII(2267179255,582711182),SynapseXen_ilIiIl(348046535,SynapseXen_iliIIlIiiIlIiil[2]))-string.len(SynapseXen_IllliiiIi)-#{3480647701,123953745,2111457234,969671174,2163897882,14758063}return SynapseXen_lIiIliilIliiIlIIli[3822568417]end)())local SynapseXen_IiiIIlIlilIIlli=1;local SynapseXen_IliIiiIlillil=SynapseXen_IllIIIIlilIIllIIl(SynapseXen_lIiIllllilli,1,20)*2^32+SynapseXen_iiiilIli;local SynapseXen_llIlIIiliIiIillI=SynapseXen_IllIIIIlilIIllIIl(SynapseXen_lIiIllllilli,21,31)local SynapseXen_IiiiIlIiI=(-1)^SynapseXen_IllIIIIlilIIllIIl(SynapseXen_lIiIllllilli,32)if SynapseXen_llIlIIiliIiIillI==0 then if SynapseXen_IliIiiIlillil==0 then return SynapseXen_IiiiIlIiI*0 else SynapseXen_llIlIIiliIiIillI=1;SynapseXen_IiiIIlIlilIIlli=0 end elseif SynapseXen_llIlIIiliIiIillI==2047 then if SynapseXen_IliIiiIlillil==0 then return SynapseXen_IiiiIlIiI*1/0 else return SynapseXen_IiiiIlIiI*0/0 end end;return math.ldexp(SynapseXen_IiiiIlIiI,SynapseXen_llIlIIiliIiIillI-1023)*(SynapseXen_IiiIIlIlilIIlli+SynapseXen_IliIiiIlillil/2^52)end;local function SynapseXen_IIIiiiiilIiilIlliIil(SynapseXen_iIIliiIllliiIiIil)local SynapseXen_lIIIilIlIIi;if SynapseXen_iIIliiIllliiIiIil then SynapseXen_lIIIilIlIIi=SynapseXen_IIiiiIililIl(SynapseXen_IlIiiIlilIlili,SynapseXen_iiIIiIIIiIIiIiIiiI,SynapseXen_iiIIiIIIiIIiIiIiiI+SynapseXen_iIIliiIllliiIiIil-1)SynapseXen_iiIIiIIIiIIiIiIiiI=SynapseXen_iiIIiIIIiIIiIiIiiI+SynapseXen_iIIliiIllliiIiIil else SynapseXen_iIIliiIllliiIiIil=SynapseXen_ililIiIIlllIIiii()if SynapseXen_iIIliiIllliiIiIil==0 then return""end;SynapseXen_lIIIilIlIIi=SynapseXen_IIiiiIililIl(SynapseXen_IlIiiIlilIlili,SynapseXen_iiIIiIIIiIIiIiIiiI,SynapseXen_iiIIiIIIiIIiIiIiiI+SynapseXen_iIIliiIllliiIiIil-1)SynapseXen_iiIIiIIIiIIiIiIiiI=SynapseXen_iiIIiIIIiIIiIiIiiI+SynapseXen_iIIliiIllliiIiIil end;return SynapseXen_lIIIilIlIIi end;local function SynapseXen_iilIi(SynapseXen_lIIIilIlIIi)local SynapseXen_IliiiIIIl={}for SynapseXen_iiIllliIlIiI=1,#SynapseXen_lIIIilIlIIi do local SynapseXen_iIIII=SynapseXen_lIIIilIlIIi:sub(SynapseXen_iiIllliIlIiI,SynapseXen_iiIllliIlIiI)SynapseXen_IliiiIIIl[#SynapseXen_IliiiIIIl+1]=string.char(SynapseXen_ilIiIl(string.byte(SynapseXen_iIIII),SynapseXen_lIiIliilIliiIlIIli[2169165174]or(function(...)local SynapseXen_IllliiiIi="my way to go against expwoiting is to have safety measuwes. i 1 wocawscwipt and onwy moduwes. hewe's how it wowks: this scwipt bewow stowes the moduwes in a tabwe fow each moduwe we send the wist with the moduwes and moduwe infowmation and use inyit a function in my moduwe that wiww stowe the info and aftew it has send to aww the moduwes it wiww dewete them. so whenyevew the cwient twies to hack they cant get the moduwes. onwy this peace of wocawscwipt."local SynapseXen_liilIiIilllIlIIli=SynapseXen_lIillIIlilliiliiiiII(3549835387,705612054)local SynapseXen_IIlliIIIlIllIl={...}for SynapseXen_iiIllliIlIiI,SynapseXen_liiIl in pairs(SynapseXen_IIlliIIIlIllIl)do local SynapseXen_Illllliii;local SynapseXen_IIilIiililiilII=type(SynapseXen_liiIl)if SynapseXen_IIilIiililiilII=="number"then SynapseXen_Illllliii=SynapseXen_liiIl elseif SynapseXen_IIilIiililiilII=="string"then SynapseXen_Illllliii=SynapseXen_liiIl:len()elseif SynapseXen_IIilIiililiilII=="table"then SynapseXen_Illllliii=SynapseXen_lIillIIlilliiliiiiII(2826572549,1468383211)end;SynapseXen_liilIiIilllIlIIli=SynapseXen_liilIiIilllIlIIli-SynapseXen_Illllliii end;SynapseXen_lIiIliilIliiIlIIli[2169165174]=SynapseXen_ilIiIl(SynapseXen_ilIiIl(2652668095,SynapseXen_liilIiIilllIlIIli),SynapseXen_ilIiIl(1080357754,SynapseXen_iliIIlIiiIlIiil[3]))-string.len(SynapseXen_IllliiiIi)-#{1691076134,1118609765,715995793}return SynapseXen_lIiIliilIliiIlIIli[2169165174]end)("Ili",14235,{},"ilIIIllillIiiilIl","iIllllilIlIlilII","IlIililI",{},11312,"lIIIilIl")))end;return table.concat(SynapseXen_IliiiIIIl)end;local function SynapseXen_IlilIIIlIilII()local SynapseXen_iIIlIIliiIiillIlllI={}local SynapseXen_llIIllii={}local SynapseXen_lIillliiilili={}local SynapseXen_IIlliIIilIiilIi={[SynapseXen_lIiIliilIliiIlIIli[4252834407]or(function()local SynapseXen_IllliiiIi="wally bad bird"SynapseXen_lIiIliilIliiIlIIli[4252834407]=SynapseXen_ilIiIl(SynapseXen_lIillIIlilliiliiiiII(3055348086,1982017609),SynapseXen_ilIiIl(1022895510,SynapseXen_iiill))-string.len(SynapseXen_IllliiiIi)-#{1817453537,440707720,431756062,165568608}return SynapseXen_lIiIliilIliiIlIIli[4252834407]end)()]=SynapseXen_iIIlIIliiIiillIlllI,[SynapseXen_lIiIliilIliiIlIIli[231255342]or(function()local SynapseXen_IllliiiIi="SYNAPSE XEN [FE BYPASS] [BETTER THEN LURAPH] [AMAZING] OMG OMG OMG !!!!!!"SynapseXen_lIiIliilIliiIlIIli[231255342]=SynapseXen_ilIiIl(SynapseXen_lIillIIlilliiliiiiII(394543706,3227522774),SynapseXen_ilIiIl(1930840718,SynapseXen_iiill))-string.len(SynapseXen_IllliiiIi)-#{1533876847,3373224847,3416236181,1843292048,1349352662}return SynapseXen_lIiIliilIliiIlIIli[231255342]end)()]=SynapseXen_llIIllii,[SynapseXen_lIiIliilIliiIlIIli[1979891360]or(function(...)local SynapseXen_IllliiiIi="pain is gonna use the backspace method on xen"local SynapseXen_liilIiIilllIlIIli=SynapseXen_lIillIIlilliiliiiiII(3180314500,2012108175)local SynapseXen_IIlliIIIlIllIl={...}for SynapseXen_iiIllliIlIiI,SynapseXen_liiIl in pairs(SynapseXen_IIlliIIIlIllIl)do local SynapseXen_Illllliii;local SynapseXen_IIilIiililiilII=type(SynapseXen_liiIl)if SynapseXen_IIilIiililiilII=="number"then SynapseXen_Illllliii=SynapseXen_liiIl elseif SynapseXen_IIilIiililiilII=="string"then SynapseXen_Illllliii=SynapseXen_liiIl:len()elseif SynapseXen_IIilIiililiilII=="table"then SynapseXen_Illllliii=SynapseXen_lIillIIlilliiliiiiII(3208891189,1086050389)end;SynapseXen_liilIiIilllIlIIli=SynapseXen_liilIiIilllIlIIli-SynapseXen_Illllliii end;SynapseXen_lIiIliilIliiIlIIli[1979891360]=SynapseXen_ilIiIl(SynapseXen_ilIiIl(4055771139,SynapseXen_liilIiIilllIlIIli),SynapseXen_ilIiIl(4227271209,SynapseXen_iiill))-string.len(SynapseXen_IllliiiIi)-#{2762157697,3269147214,3516505315,2143532328}return SynapseXen_lIiIliilIliiIlIIli[1979891360]end)({})]=SynapseXen_lIillliiilili}SynapseXen_iiiiilllli()SynapseXen_IIlliIIilIiilIi[604100885]=SynapseXen_ilIiIl(SynapseXen_iiiiilllli(),SynapseXen_lIiIliilIliiIlIIli[2337631552]or(function(...)local SynapseXen_IllliiiIi="i'm intercommunication about the most nonecclesiastical dll exploits for esp. they only characterization objects with a antepatriarchal in the geistesgeschichte for the esp."local SynapseXen_liilIiIilllIlIIli=SynapseXen_lIillIIlilliiliiiiII(1397061080,1344902554)local SynapseXen_IIlliIIIlIllIl={...}for SynapseXen_iiIllliIlIiI,SynapseXen_liiIl in pairs(SynapseXen_IIlliIIIlIllIl)do local SynapseXen_Illllliii;local SynapseXen_IIilIiililiilII=type(SynapseXen_liiIl)if SynapseXen_IIilIiililiilII=="number"then SynapseXen_Illllliii=SynapseXen_liiIl elseif SynapseXen_IIilIiililiilII=="string"then SynapseXen_Illllliii=SynapseXen_liiIl:len()elseif SynapseXen_IIilIiililiilII=="table"then SynapseXen_Illllliii=SynapseXen_lIillIIlilliiliiiiII(2631312474,1663625584)end;SynapseXen_liilIiIilllIlIIli=SynapseXen_liilIiIilllIlIIli-SynapseXen_Illllliii end;SynapseXen_lIiIliilIliiIlIIli[2337631552]=SynapseXen_ilIiIl(SynapseXen_ilIiIl(1422025505,SynapseXen_liilIiIilllIlIIli),SynapseXen_ilIiIl(2880366154,SynapseXen_iliIIlIiiIlIiil[5]))-string.len(SynapseXen_IllliiiIi)-#{4290007358,1456086850,3139247400,3205320745,2019004802,1836390651}return SynapseXen_lIiIliilIliiIlIIli[2337631552]end)("Illiii",{},8227,"iiiIiii","IIlilliiiliIiiIi"))SynapseXen_liIiillIlIllIiill()SynapseXen_liIiillIlIllIiill()SynapseXen_IIlliIIilIiilIi[1646345233]=SynapseXen_ilIiIl(SynapseXen_iiiiilllli(),SynapseXen_lIiIliilIliiIlIIli[2246305531]or(function()local SynapseXen_IllliiiIi="now with shitty xor string obfuscation"SynapseXen_lIiIliilIliiIlIIli[2246305531]=SynapseXen_ilIiIl(SynapseXen_lIillIIlilliiliiiiII(1967188256,2246917668),SynapseXen_ilIiIl(2039379149,SynapseXen_iiill))-string.len(SynapseXen_IllliiiIi)-#{1937925709,515936525,2614871545,991242797,3616505694,886293037,3890672201,163368693}return SynapseXen_lIiIliilIliiIlIIli[2246305531]end)())SynapseXen_liIiillIlIllIiill()SynapseXen_iiiiilllli()SynapseXen_iiiiilllli()for SynapseXen_iiliIilillIi=1,SynapseXen_ilIiIl(SynapseXen_IlIIIiIIIiIi(),SynapseXen_lIiIliilIliiIlIIli[3542246567]or(function(...)local SynapseXen_IllliiiIi="thats how mafia works"local SynapseXen_liilIiIilllIlIIli=SynapseXen_lIillIIlilliiliiiiII(3202075615,1754762360)local SynapseXen_IIlliIIIlIllIl={...}for SynapseXen_iiIllliIlIiI,SynapseXen_liiIl in pairs(SynapseXen_IIlliIIIlIllIl)do local SynapseXen_Illllliii;local SynapseXen_IIilIiililiilII=type(SynapseXen_liiIl)if SynapseXen_IIilIiililiilII=="number"then SynapseXen_Illllliii=SynapseXen_liiIl elseif SynapseXen_IIilIiililiilII=="string"then SynapseXen_Illllliii=SynapseXen_liiIl:len()elseif SynapseXen_IIilIiililiilII=="table"then SynapseXen_Illllliii=SynapseXen_lIillIIlilliiliiiiII(2344215838,1950718250)end;SynapseXen_liilIiIilllIlIIli=SynapseXen_liilIiIilllIlIIli+SynapseXen_Illllliii end;SynapseXen_lIiIliilIliiIlIIli[3542246567]=SynapseXen_ilIiIl(SynapseXen_ilIiIl(4007562334,SynapseXen_liilIiIilllIlIIli),SynapseXen_ilIiIl(3335125048,SynapseXen_iliIIlIiiIlIiil[2]))-string.len(SynapseXen_IllliiiIi)-#{765895490,1895777779,3748354861,2802146486,1473192326,741935454,777640009}return SynapseXen_lIiIliilIliiIlIIli[3542246567]end)({},{}))do local SynapseXen_liIIIilllIlI=SynapseXen_iiiiilllli()local SynapseXen_liiIIlliIIii;if SynapseXen_liIIIilllIlI==(SynapseXen_lIiIliilIliiIlIIli[3667250339]or(function()local SynapseXen_IllliiiIi="luraph better then xen bros :pensive:"SynapseXen_lIiIliilIliiIlIIli[3667250339]=SynapseXen_ilIiIl(SynapseXen_lIillIIlilliiliiiiII(491775031,2051922991),SynapseXen_ilIiIl(3995233743,SynapseXen_iiill))-string.len(SynapseXen_IllliiiIi)-#{4160449938,2944789982,3279687845,2878598367}return SynapseXen_lIiIliilIliiIlIIli[3667250339]end)())then SynapseXen_liiIIlliIIii=SynapseXen_iiiiilllli()~=0 elseif SynapseXen_liIIIilllIlI==(SynapseXen_lIiIliilIliiIlIIli[2870500600]or(function(...)local SynapseXen_IllliiiIi="epic gamer vision"local SynapseXen_liilIiIilllIlIIli=SynapseXen_lIillIIlilliiliiiiII(3676491479,2733591163)local SynapseXen_IIlliIIIlIllIl={...}for SynapseXen_iiIllliIlIiI,SynapseXen_liiIl in pairs(SynapseXen_IIlliIIIlIllIl)do local SynapseXen_Illllliii;local SynapseXen_IIilIiililiilII=type(SynapseXen_liiIl)if SynapseXen_IIilIiililiilII=="number"then SynapseXen_Illllliii=SynapseXen_liiIl elseif SynapseXen_IIilIiililiilII=="string"then SynapseXen_Illllliii=SynapseXen_liiIl:len()elseif SynapseXen_IIilIiililiilII=="table"then SynapseXen_Illllliii=SynapseXen_lIillIIlilliiliiiiII(2024142674,2270802339)end;SynapseXen_liilIiIilllIlIIli=SynapseXen_liilIiIilllIlIIli+SynapseXen_Illllliii end;SynapseXen_lIiIliilIliiIlIIli[2870500600]=SynapseXen_ilIiIl(SynapseXen_ilIiIl(3539902446,SynapseXen_liilIiIilllIlIIli),SynapseXen_ilIiIl(571709425,SynapseXen_iiill))-string.len(SynapseXen_IllliiiIi)-#{1772097859,3272970484,3047102545,1565062119,3990929506,2104420427,2223052085,825972445,851692687}return SynapseXen_lIiIliilIliiIlIIli[2870500600]end)("lIIiliiliii",2308,{},"IIiIlliIlIiIii",1783))then SynapseXen_liiIIlliIIii=SynapseXen_IlIlllIiIIliIll()elseif SynapseXen_liIIIilllIlI==(SynapseXen_lIiIliilIliiIlIIli[2985906396]or(function()local SynapseXen_IllliiiIi="hi xen crashes on my axon paste plz help"SynapseXen_lIiIliilIliiIlIIli[2985906396]=SynapseXen_ilIiIl(SynapseXen_lIillIIlilliiliiiiII(2265560327,1101118396),SynapseXen_ilIiIl(1334815425,SynapseXen_iiill))-string.len(SynapseXen_IllliiiIi)-#{1786547174,4224034729,1062737867,4042748983,2692808121,3915728451,2870551275,2961094414,976423674,4002907743}return SynapseXen_lIiIliilIliiIlIIli[2985906396]end)())then SynapseXen_liiIIlliIIii=SynapseXen_IIiiiIililIl(SynapseXen_iilIi(SynapseXen_IIIiiiiilIiilIlliIil()),1,-2)end;SynapseXen_lIillliiilili[SynapseXen_iiliIilillIi-1]=SynapseXen_liiIIlliIIii end;for SynapseXen_iiliIilillIi=1,SynapseXen_ilIiIl(SynapseXen_IlIIIiIIIiIi(),SynapseXen_lIiIliilIliiIlIIli[1047792315]or(function()local SynapseXen_IllliiiIi="HELP ME PEOPLE ARE CRASHING MY GAME PLZ HELP"SynapseXen_lIiIliilIliiIlIIli[1047792315]=SynapseXen_ilIiIl(SynapseXen_lIillIIlilliiliiiiII(2460279087,1087336504),SynapseXen_ilIiIl(152266525,SynapseXen_iliIIlIiiIlIiil[7]))-string.len(SynapseXen_IllliiiIi)-#{3539328569,3304022983,76279497}return SynapseXen_lIiIliilIliiIlIIli[1047792315]end)())do SynapseXen_iiiiilllli()local SynapseXen_iiilIlii=SynapseXen_ilIiIl(SynapseXen_liIiillIlIllIiill(),SynapseXen_lIiIliilIliiIlIIli[2359271432]or(function()local SynapseXen_IllliiiIi="yed"SynapseXen_lIiIliilIliiIlIIli[2359271432]=SynapseXen_ilIiIl(SynapseXen_lIillIIlilliiliiiiII(1492321445,2358857369),SynapseXen_ilIiIl(1982581791,SynapseXen_iiill))-string.len(SynapseXen_IllliiiIi)-#{3680181794,294302329,929618817}return SynapseXen_lIiIliilIliiIlIIli[2359271432]end)())local SynapseXen_IiiiiIIIIiIi=SynapseXen_iiiiilllli()SynapseXen_iiiiilllli()local SynapseXen_liIIIilllIlI=SynapseXen_iiiiilllli()SynapseXen_liIiillIlIllIiill()local SynapseXen_liIIiIIi={[283033142]=SynapseXen_iiilIlii,[1619755574]=SynapseXen_IiiiiIIIIiIi,[877649694]=SynapseXen_IllIIIIlilIIllIIl(SynapseXen_iiilIlii,1,6),[1158609693]=SynapseXen_IllIIIIlilIIllIIl(SynapseXen_iiilIlii,7,14)}if SynapseXen_liIIIilllIlI==(SynapseXen_lIiIliilIliiIlIIli[2226109279]or(function()local SynapseXen_IllliiiIi="so if you'we nyot awawe of expwoiting by this point, you've pwobabwy been wiving undew a wock that the pionyeews used to wide fow miwes. wobwox is often seen as an expwoit-infested gwound by most fwom the suwface, awthough this isn't the case."SynapseXen_lIiIliilIliiIlIIli[2226109279]=SynapseXen_ilIiIl(SynapseXen_lIillIIlilliiliiiiII(612415197,2981473878),SynapseXen_ilIiIl(471161639,SynapseXen_iiill))-string.len(SynapseXen_IllliiiIi)-#{1231070020,2439803673,908670713,1527612217,4652469,3849229768,1465532258,3231115083,3442202714}return SynapseXen_lIiIliilIliiIlIIli[2226109279]end)())then SynapseXen_liIIiIIi[507457194]=SynapseXen_IllIIIIlilIIllIIl(SynapseXen_iiilIlii,24,32)SynapseXen_liIIiIIi[432912724]=SynapseXen_IllIIIIlilIIllIIl(SynapseXen_iiilIlii,15,23)elseif SynapseXen_liIIIilllIlI==(SynapseXen_lIiIliilIliiIlIIli[3150639388]or(function()local SynapseXen_IllliiiIi="https://twitter.com/Ripull_RBLX/status/1059334518581145603"SynapseXen_lIiIliilIliiIlIIli[3150639388]=SynapseXen_ilIiIl(SynapseXen_lIillIIlilliiliiiiII(1897919593,105511820),SynapseXen_ilIiIl(4269089527,SynapseXen_iiill))-string.len(SynapseXen_IllliiiIi)-#{150059336,3536024887,1269983527,727457265,1299472938,1636839471,1096324557,799055031,1218899868}return SynapseXen_lIiIliilIliiIlIIli[3150639388]end)())then SynapseXen_liIIiIIi[1285932406]=SynapseXen_IllIIIIlilIIllIIl(SynapseXen_iiilIlii,15,32)elseif SynapseXen_liIIIilllIlI==(SynapseXen_lIiIliilIliiIlIIli[494841751]or(function()local SynapseXen_IllliiiIi="baby i just fell for uwu,,,,,, i wanna be with uwu!11!!"SynapseXen_lIiIliilIliiIlIIli[494841751]=SynapseXen_ilIiIl(SynapseXen_lIillIIlilliiliiiiII(4074923154,2899192152),SynapseXen_ilIiIl(1012843122,SynapseXen_iliIIlIiiIlIiil[12]))-string.len(SynapseXen_IllliiiIi)-#{50059348}return SynapseXen_lIiIliilIliiIlIIli[494841751]end)())then SynapseXen_liIIiIIi[540369749]=SynapseXen_IllIIIIlilIIllIIl(SynapseXen_iiilIlii,15,32)-131071 end;SynapseXen_iIIlIIliiIiillIlllI[SynapseXen_iiliIilillIi]=SynapseXen_liIIiIIi end;SynapseXen_liIiillIlIllIiill()for SynapseXen_iiliIilillIi=1,SynapseXen_ilIiIl(SynapseXen_IlIIIiIIIiIi(),SynapseXen_lIiIliilIliiIlIIli[3879348843]or(function()local SynapseXen_IllliiiIi="wait for someone on devforum to say they are gonna deobfuscate this"SynapseXen_lIiIliilIliiIlIIli[3879348843]=SynapseXen_ilIiIl(SynapseXen_lIillIIlilliiliiiiII(2320928358,3630968557),SynapseXen_ilIiIl(2395515122,SynapseXen_iiill))-string.len(SynapseXen_IllliiiIi)-#{3486990342,927308752}return SynapseXen_lIiIliilIliiIlIIli[3879348843]end)())do SynapseXen_llIIllii[SynapseXen_iiliIilillIi-1]=SynapseXen_IlilIIIlIilII()end;return SynapseXen_IIlliIIilIiilIi end;do assert(SynapseXen_IIIiiiiilIiilIlliIil(4)=="\27Xen","Synapse Xen - Failed to verify bytecode. Please make sure your Lua implementation supports non-null terminated strings.")SynapseXen_IlIIIiIIIiIi=SynapseXen_liIiillIlIllIiill;SynapseXen_ililIiIIlllIIiii=SynapseXen_liIiillIlIllIiill;local SynapseXen_liIiiiilIiIIiiiIli=SynapseXen_IIIiiiiilIiilIlliIil()SynapseXen_iiill=SynapseXen_IliillIill(SynapseXen_IlIIIiIIIiIi())SynapseXen_iiiiilllli()local SynapseXen_ilIIlilIlIliii=0;for SynapseXen_iiIllliIlIiI=1,#SynapseXen_liIiiiilIiIIiiiIli do local SynapseXen_iIIII=SynapseXen_liIiiiilIiIIiiiIli:sub(SynapseXen_iiIllliIlIiI,SynapseXen_iiIllliIlIiI)SynapseXen_ilIIlilIlIliii=SynapseXen_ilIIlilIlIliii+string.byte(SynapseXen_iIIII)end;SynapseXen_ilIIlilIlIliii=SynapseXen_ilIiIl(SynapseXen_ilIIlilIlIliii,SynapseXen_iiill)for SynapseXen_iiliIilillIi=1,SynapseXen_iiiiilllli()do SynapseXen_iliIIlIiiIlIiil[SynapseXen_iiliIilillIi]=SynapseXen_IiiIlllIiIlll(SynapseXen_IlIIIiIIIiIi(),SynapseXen_ilIIlilIlIliii)end;SynapseXen_Iiiill()end;return SynapseXen_IlilIIIlIilII()end;local function SynapseXen_IIIiiIi(...)return SynapseXen_iIllliIiIiiII('#',...),{...}end;local function SynapseXen_iIiIllilIiIII(SynapseXen_IIlliIIilIiilIi,SynapseXen_lIIiIi,SynapseXen_lIlIiIi)local SynapseXen_lIillliiilili=SynapseXen_IIlliIIilIiilIi[SynapseXen_lIiIliilIliiIlIIli[1979891360]or(function(...)local SynapseXen_IllliiiIi="pain is gonna use the backspace method on xen"local SynapseXen_liilIiIilllIlIIli=SynapseXen_lIillIIlilliiliiiiII(3180314500,2012108175)local SynapseXen_IIlliIIIlIllIl={...}for SynapseXen_iiIllliIlIiI,SynapseXen_liiIl in pairs(SynapseXen_IIlliIIIlIllIl)do local SynapseXen_Illllliii;local SynapseXen_IIilIiililiilII=type(SynapseXen_liiIl)if SynapseXen_IIilIiililiilII=="number"then SynapseXen_Illllliii=SynapseXen_liiIl elseif SynapseXen_IIilIiililiilII=="string"then SynapseXen_Illllliii=SynapseXen_liiIl:len()elseif SynapseXen_IIilIiililiilII=="table"then SynapseXen_Illllliii=SynapseXen_lIillIIlilliiliiiiII(3208891189,1086050389)end;SynapseXen_liilIiIilllIlIIli=SynapseXen_liilIiIilllIlIIli-SynapseXen_Illllliii end;SynapseXen_lIiIliilIliiIlIIli[1979891360]=SynapseXen_ilIiIl(SynapseXen_ilIiIl(4055771139,SynapseXen_liilIiIilllIlIIli),SynapseXen_ilIiIl(4227271209,SynapseXen_iiill))-string.len(SynapseXen_IllliiiIi)-#{2762157697,3269147214,3516505315,2143532328}return SynapseXen_lIiIliilIliiIlIIli[1979891360]end)({})]local SynapseXen_iIIlIIliiIiillIlllI=SynapseXen_IIlliIIilIiilIi[SynapseXen_lIiIliilIliiIlIIli[4252834407]or(function()local SynapseXen_IllliiiIi="wally bad bird"SynapseXen_lIiIliilIliiIlIIli[4252834407]=SynapseXen_ilIiIl(SynapseXen_lIillIIlilliiliiiiII(3055348086,1982017609),SynapseXen_ilIiIl(1022895510,SynapseXen_iiill))-string.len(SynapseXen_IllliiiIi)-#{1817453537,440707720,431756062,165568608}return SynapseXen_lIiIliilIliiIlIIli[4252834407]end)()]local SynapseXen_llIIllii=SynapseXen_IIlliIIilIiilIi[SynapseXen_lIiIliilIliiIlIIli[231255342]or(function()local SynapseXen_IllliiiIi="SYNAPSE XEN [FE BYPASS] [BETTER THEN LURAPH] [AMAZING] OMG OMG OMG !!!!!!"SynapseXen_lIiIliilIliiIlIIli[231255342]=SynapseXen_ilIiIl(SynapseXen_lIillIIlilliiliiiiII(394543706,3227522774),SynapseXen_ilIiIl(1930840718,SynapseXen_iiill))-string.len(SynapseXen_IllliiiIi)-#{1533876847,3373224847,3416236181,1843292048,1349352662}return SynapseXen_lIiIliilIliiIlIIli[231255342]end)()]return function(...)local SynapseXen_IIillilIilIliIilii,SynapseXen_IiIIlililiIllii=1,-1;local SynapseXen_Ilillii,SynapseXen_IIiiIllIli={},SynapseXen_iIllliIiIiiII('#',...)-1;local SynapseXen_llIIliIIlI=0;local SynapseXen_IIillili={}local SynapseXen_IIlilIlliiiiiilIlIi={}local SynapseXen_IilIIIIilIliliIilI=setmetatable({},{__index=SynapseXen_IIillili,__newindex=function(SynapseXen_iiIIIilIIII,SynapseXen_iiiiii,SynapseXen_iilIiiiiiiIlillilii)if SynapseXen_iiiiii>SynapseXen_IiIIlililiIllii then SynapseXen_IiIIlililiIllii=SynapseXen_iiiiii end;SynapseXen_IIillili[SynapseXen_iiiiii]=SynapseXen_iilIiiiiiiIlillilii end})local function SynapseXen_IilIliilil()local SynapseXen_liIIiIIi,SynapseXen_iiIlIllIlillllliII;while true do SynapseXen_liIIiIIi=SynapseXen_iIIlIIliiIiillIlllI[SynapseXen_IIillilIilIliIilii]SynapseXen_iiIlIllIlillllliII=SynapseXen_liIIiIIi[1619755574]SynapseXen_IIillilIilIliIilii=SynapseXen_IIillilIilIliIilii+1;if SynapseXen_iiIlIllIlillllliII==172 then local SynapseXen_iIIlilllIllIIIill=SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[507457194],49,512)local SynapseXen_iIIII=SynapseXen_ilIiIl(SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[432912724],37,512),SynapseXen_llIIliIIlI)local SynapseXen_IiiIIllliiIIiiillI=SynapseXen_IilIIIIilIliliIilI;if SynapseXen_iIIlilllIllIIIill>255 then SynapseXen_iIIlilllIllIIIill=SynapseXen_lIillliiilili[SynapseXen_iIIlilllIllIIIill-256]else SynapseXen_iIIlilllIllIIIill=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iIIlilllIllIIIill]end;if SynapseXen_iIIII>255 then SynapseXen_iIIII=SynapseXen_lIillliiilili[SynapseXen_iIIII-256]else SynapseXen_iIIII=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iIIII]end;SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIIliiiiIIlIil(SynapseXen_liIIiIIi[1158609693],45,256)]=SynapseXen_iIIlilllIllIIIill+SynapseXen_iIIII elseif SynapseXen_iiIlIllIlillllliII==115 then SynapseXen_llIIliIIlI=SynapseXen_IilIIIIilIliliIilI[SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[1158609693],65,256)]elseif SynapseXen_iiIlIllIlillllliII==191 then local SynapseXen_lIiiIllliillII=SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[1158609693],100,256)local SynapseXen_IiiIIllliiIIiiillI=SynapseXen_IilIIIIilIliliIilI;local SynapseXen_ilIlIlI=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIiiIllliillII+2]local SynapseXen_llIliliIiiiiliIIli=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIiiIllliillII]+SynapseXen_ilIlIlI;SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIiiIllliillII]=SynapseXen_llIliliIiiiiliIIli;if SynapseXen_ilIlIlI>0 then if SynapseXen_llIliliIiiiiliIIli<=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIiiIllliillII+1]then SynapseXen_IIillilIilIliIilii=SynapseXen_IIillilIilIliIilii+SynapseXen_liIIiIIi[540369749]SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIiiIllliillII+3]=SynapseXen_llIliliIiiiiliIIli end else if SynapseXen_llIliliIiiiiliIIli>=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIiiIllliillII+1]then SynapseXen_IIillilIilIliIilii=SynapseXen_IIillilIilIliIilii+SynapseXen_liIIiIIi[540369749]SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIiiIllliillII+3]=SynapseXen_llIliliIiiiiliIIli end end elseif SynapseXen_iiIlIllIlillllliII==40 then local SynapseXen_lIiiIllliillII=SynapseXen_lIIliiiiIIlIil(SynapseXen_liIIiIIi[1158609693],92,256)local SynapseXen_iIIlilllIllIIIill=SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_lIIliiiiIIlIil(SynapseXen_liIIiIIi[507457194],15,512),SynapseXen_llIIliIIlI,512)local SynapseXen_IiiIIllliiIIiiillI,SynapseXen_IiliIIllIlIliil=SynapseXen_IilIIIIilIliliIilI,SynapseXen_Ilillii;SynapseXen_IiIIlililiIllii=SynapseXen_lIiiIllliillII-1;for SynapseXen_iiliIilillIi=SynapseXen_lIiiIllliillII,SynapseXen_lIiiIllliillII+(SynapseXen_iIIlilllIllIIIill>0 and SynapseXen_iIIlilllIllIIIill-1 or SynapseXen_IIiiIllIli)do SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iiliIilillIi]=SynapseXen_IiliIIllIlIliil[SynapseXen_iiliIilillIi-SynapseXen_lIiiIllliillII]end elseif SynapseXen_iiIlIllIlillllliII==179 then SynapseXen_lIlIiIi[SynapseXen_lIIliiiiIIlIil(SynapseXen_ilIiIl(SynapseXen_liIIiIIi[507457194],46),SynapseXen_llIIliIIlI,512)]=SynapseXen_IilIIIIilIliliIilI[SynapseXen_ilIiIl(SynapseXen_liIIiIIi[1158609693],23)]elseif SynapseXen_iiIlIllIlillllliII==207 then local SynapseXen_iIIlilllIllIIIill,SynapseXen_iIIII=SynapseXen_lIIliiiiIIlIil(SynapseXen_liIIiIIi[507457194],81,512),SynapseXen_lIIliiiiIIlIil(SynapseXen_liIIiIIi[432912724],97,512)local SynapseXen_IiiIIllliiIIiiillI=SynapseXen_IilIIIIilIliliIilI;if SynapseXen_iIIlilllIllIIIill>255 then SynapseXen_iIIlilllIllIIIill=SynapseXen_lIillliiilili[SynapseXen_iIIlilllIllIIIill-256]else SynapseXen_iIIlilllIllIIIill=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iIIlilllIllIIIill]end;if SynapseXen_iIIII>255 then SynapseXen_iIIII=SynapseXen_lIillliiilili[SynapseXen_iIIII-256]else SynapseXen_iIIII=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iIIII]end;SynapseXen_IiiIIllliiIIiiillI[SynapseXen_ilIiIl(SynapseXen_liIIiIIi[1158609693],14)][SynapseXen_iIIlilllIllIIIill]=SynapseXen_iIIII elseif SynapseXen_iiIlIllIlillllliII==33 then SynapseXen_IilIIIIilIliliIilI[SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_lIIliiiiIIlIil(SynapseXen_liIIiIIi[1158609693],68,256),SynapseXen_llIIliIIlI,256)]=#SynapseXen_IilIIIIilIliliIilI[SynapseXen_lIIliiiiIIlIil(SynapseXen_liIIiIIi[507457194],84,512)]elseif SynapseXen_iiIlIllIlillllliII==233 then SynapseXen_IilIIIIilIliliIilI[SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[1158609693],6,256)]=SynapseXen_lIillliiilili[SynapseXen_ilIiIl(SynapseXen_liIIiIIi[1285932406],63629)]elseif SynapseXen_iiIlIllIlillllliII==0 then local SynapseXen_illll=SynapseXen_llIIllii[SynapseXen_lIIliiiiIIlIil(SynapseXen_liIIiIIi[1285932406],174316,262144)]local SynapseXen_IiiIIllliiIIiiillI=SynapseXen_IilIIIIilIliliIilI;local SynapseXen_lilliIiilI;local SynapseXen_IilllIllIIlllli;if SynapseXen_illll[604100885]~=0 then SynapseXen_lilliIiilI={}SynapseXen_IilllIllIIlllli=setmetatable({},{__index=function(SynapseXen_iiIIIilIIII,SynapseXen_iiiiii)local SynapseXen_iIiIilllli=SynapseXen_lilliIiilI[SynapseXen_iiiiii]return SynapseXen_iIiIilllli[1][SynapseXen_iIiIilllli[2]]end,__newindex=function(SynapseXen_iiIIIilIIII,SynapseXen_iiiiii,SynapseXen_iilIiiiiiiIlillilii)local SynapseXen_iIiIilllli=SynapseXen_lilliIiilI[SynapseXen_iiiiii]SynapseXen_iIiIilllli[1][SynapseXen_iIiIilllli[2]]=SynapseXen_iilIiiiiiiIlillilii end})for SynapseXen_iiliIilillIi=1,SynapseXen_illll[604100885]do local SynapseXen_liiilII=SynapseXen_iIIlIIliiIiillIlllI[SynapseXen_IIillilIilIliIilii]if SynapseXen_liiilII[1619755574]==254 then SynapseXen_lilliIiilI[SynapseXen_iiliIilillIi-1]={SynapseXen_IiiIIllliiIIiiillI,SynapseXen_ilIiIl(SynapseXen_liiilII[507457194],111)}elseif SynapseXen_liiilII[1619755574]==68 then SynapseXen_lilliIiilI[SynapseXen_iiliIilillIi-1]={SynapseXen_lIlIiIi,SynapseXen_ilIiIl(SynapseXen_liiilII[507457194],91)}end;SynapseXen_IIillilIilIliIilii=SynapseXen_IIillilIilIliIilii+1 end;SynapseXen_IIlilIlliiiiiilIlIi[#SynapseXen_IIlilIlliiiiiilIlIi+1]=SynapseXen_lilliIiilI end;SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[1158609693],97,256)]=SynapseXen_iIiIllilIiIII(SynapseXen_illll,SynapseXen_lIIiIi,SynapseXen_IilllIllIIlllli)elseif SynapseXen_iiIlIllIlillllliII==12 then local SynapseXen_IiiIIllliiIIiiillI=SynapseXen_IilIIIIilIliliIilI;for SynapseXen_iiliIilillIi=SynapseXen_ilIiIl(SynapseXen_liIIiIIi[1158609693],59),SynapseXen_lIIliiiiIIlIil(SynapseXen_liIIiIIi[507457194],125,512)do SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iiliIilillIi]=nil end elseif SynapseXen_iiIlIllIlillllliII==71 then local SynapseXen_lIiiIllliillII=SynapseXen_ilIiIl(SynapseXen_liIIiIIi[1158609693],13)local SynapseXen_IIIIIIIiliIIlililI={}for SynapseXen_iiliIilillIi=1,#SynapseXen_IIlilIlliiiiiilIlIi do local SynapseXen_iiIliIiiIiiIili=SynapseXen_IIlilIlliiiiiilIlIi[SynapseXen_iiliIilillIi]for SynapseXen_IlliiIiliiiil=0,#SynapseXen_iiIliIiiIiiIili do local SynapseXen_IlIliIllliiillIllIIi=SynapseXen_iiIliIiiIiiIili[SynapseXen_IlliiIiliiiil]local SynapseXen_IiiIIllliiIIiiillI=SynapseXen_IlIliIllliiillIllIIi[1]local SynapseXen_iiIIiIIIiIIiIiIiiI=SynapseXen_IlIliIllliiillIllIIi[2]if SynapseXen_IiiIIllliiIIiiillI==SynapseXen_IilIIIIilIliliIilI and SynapseXen_iiIIiIIIiIIiIiIiiI>=SynapseXen_lIiiIllliillII then SynapseXen_IIIIIIIiliIIlililI[SynapseXen_iiIIiIIIiIIiIiIiiI]=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iiIIiIIIiIIiIiIiiI]SynapseXen_IlIliIllliiillIllIIi[1]=SynapseXen_IIIIIIIiliIIlililI end end end elseif SynapseXen_iiIlIllIlillllliII==5 then SynapseXen_IilIIIIilIliliIilI[SynapseXen_ilIiIl(SynapseXen_liIIiIIi[1158609693],31)]=-SynapseXen_IilIIIIilIliliIilI[SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[507457194],86,512)]elseif SynapseXen_iiIlIllIlillllliII==56 then SynapseXen_IilIIIIilIliliIilI[SynapseXen_lIIliiiiIIlIil(SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[1158609693],94,256),SynapseXen_llIIliIIlI,256)]=SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[507457194],16,512)~=0;if SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_lIIliiiiIIlIil(SynapseXen_liIIiIIi[432912724],22,512),SynapseXen_llIIliIIlI,512)~=0 then SynapseXen_IIillilIilIliIilii=SynapseXen_IIillilIilIliIilii+1 end elseif SynapseXen_iiIlIllIlillllliII==68 then SynapseXen_IilIIIIilIliliIilI[SynapseXen_ilIiIl(SynapseXen_liIIiIIi[1158609693],107)]=SynapseXen_lIlIiIi[SynapseXen_ilIiIl(SynapseXen_liIIiIIi[507457194],91)]elseif SynapseXen_iiIlIllIlillllliII==81 then local SynapseXen_lIiiIllliillII=SynapseXen_lIIliiiiIIlIil(SynapseXen_lIIliiiiIIlIil(SynapseXen_liIIiIIi[1158609693],30,256),SynapseXen_llIIliIIlI,256)local SynapseXen_iIIlilllIllIIIill=SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[507457194],20,512)local SynapseXen_IiiIIllliiIIiiillI=SynapseXen_IilIIIIilIliliIilI;local SynapseXen_lllIllililiiiil,SynapseXen_iililiiIiIlIillIilil;local SynapseXen_IIIIIliIIilIiiIIIiil;if SynapseXen_iIIlilllIllIIIill==1 then return elseif SynapseXen_iIIlilllIllIIIill==0 then SynapseXen_IIIIIliIIilIiiIIIiil=SynapseXen_IiIIlililiIllii else SynapseXen_IIIIIliIIilIiiIIIiil=SynapseXen_lIiiIllliillII+SynapseXen_iIIlilllIllIIIill-2 end;SynapseXen_iililiiIiIlIillIilil={}SynapseXen_lllIllililiiiil=0;for SynapseXen_iiliIilillIi=SynapseXen_lIiiIllliillII,SynapseXen_IIIIIliIIilIiiIIIiil do SynapseXen_lllIllililiiiil=SynapseXen_lllIllililiiiil+1;SynapseXen_iililiiIiIlIillIilil[SynapseXen_lllIllililiiiil]=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iiliIilillIi]end;return SynapseXen_iililiiIiIlIillIilil,SynapseXen_lllIllililiiiil elseif SynapseXen_iiIlIllIlillllliII==177 then local SynapseXen_lIiiIllliillII=SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[1158609693],85,256)~=0;local SynapseXen_iIIlilllIllIIIill=SynapseXen_lIIliiiiIIlIil(SynapseXen_ilIiIl(SynapseXen_liIIiIIi[507457194],88),SynapseXen_llIIliIIlI,512)local SynapseXen_iIIII=SynapseXen_ilIiIl(SynapseXen_liIIiIIi[432912724],15)local SynapseXen_IiiIIllliiIIiiillI=SynapseXen_IilIIIIilIliliIilI;if SynapseXen_iIIlilllIllIIIill>255 then SynapseXen_iIIlilllIllIIIill=SynapseXen_lIillliiilili[SynapseXen_iIIlilllIllIIIill-256]else SynapseXen_iIIlilllIllIIIill=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iIIlilllIllIIIill]end;if SynapseXen_iIIII>255 then SynapseXen_iIIII=SynapseXen_lIillliiilili[SynapseXen_iIIII-256]else SynapseXen_iIIII=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iIIII]end;if SynapseXen_iIIlilllIllIIIill<SynapseXen_iIIII~=SynapseXen_lIiiIllliillII then SynapseXen_IIillilIilIliIilii=SynapseXen_IIillilIilIliIilii+1 end elseif SynapseXen_iiIlIllIlillllliII==176 then local SynapseXen_iIIlilllIllIIIill=SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_ilIiIl(SynapseXen_liIIiIIi[507457194],3),SynapseXen_llIIliIIlI,512)local SynapseXen_iIIII=SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[432912724],41,512)local SynapseXen_IiiIIllliiIIiiillI=SynapseXen_IilIIIIilIliliIilI;if SynapseXen_iIIlilllIllIIIill>255 then SynapseXen_iIIlilllIllIIIill=SynapseXen_lIillliiilili[SynapseXen_iIIlilllIllIIIill-256]else SynapseXen_iIIlilllIllIIIill=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iIIlilllIllIIIill]end;if SynapseXen_iIIII>255 then SynapseXen_iIIII=SynapseXen_lIillliiilili[SynapseXen_iIIII-256]else SynapseXen_iIIII=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iIIII]end;SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[1158609693],60,256)]=SynapseXen_iIIlilllIllIIIill%SynapseXen_iIIII elseif SynapseXen_iiIlIllIlillllliII==8 then if not not SynapseXen_IilIIIIilIliliIilI[SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[1158609693],25,256)]==(SynapseXen_ilIiIl(SynapseXen_liIIiIIi[432912724],26)==0)then SynapseXen_IIillilIilIliIilii=SynapseXen_IIillilIilIliIilii+1 end elseif SynapseXen_iiIlIllIlillllliII==152 then local SynapseXen_lIiiIllliillII=SynapseXen_ilIiIl(SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[1158609693],21,256),SynapseXen_llIIliIIlI)local SynapseXen_IiiIIllliiIIiiillI=SynapseXen_IilIIIIilIliliIilI;SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIiiIllliillII]=assert(tonumber(SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIiiIllliillII]),'`for` initial value must be a number')SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIiiIllliillII+1]=assert(tonumber(SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIiiIllliillII+1]),'`for` limit must be a number')SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIiiIllliillII+2]=assert(tonumber(SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIiiIllliillII+2]),'`for` step must be a number')SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIiiIllliillII]=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIiiIllliillII]-SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIiiIllliillII+2]SynapseXen_IIillilIilIliIilii=SynapseXen_IIillilIilIliIilii+SynapseXen_liIIiIIi[540369749]elseif SynapseXen_iiIlIllIlillllliII==206 then local SynapseXen_iIIlilllIllIIIill=SynapseXen_ilIiIl(SynapseXen_liIIiIIi[507457194],85)local SynapseXen_iIIII=SynapseXen_lIIliiiiIIlIil(SynapseXen_lIIliiiiIIlIil(SynapseXen_liIIiIIi[432912724],12,512),SynapseXen_llIIliIIlI,512)local SynapseXen_IiiIIllliiIIiiillI=SynapseXen_IilIIIIilIliliIilI;if SynapseXen_iIIlilllIllIIIill>255 then SynapseXen_iIIlilllIllIIIill=SynapseXen_lIillliiilili[SynapseXen_iIIlilllIllIIIill-256]else SynapseXen_iIIlilllIllIIIill=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iIIlilllIllIIIill]end;if SynapseXen_iIIII>255 then SynapseXen_iIIII=SynapseXen_lIillliiilili[SynapseXen_iIIII-256]else SynapseXen_iIIII=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iIIII]end;SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[1158609693],73,256)]=SynapseXen_iIIlilllIllIIIill/SynapseXen_iIIII elseif SynapseXen_iiIlIllIlillllliII==254 then SynapseXen_IilIIIIilIliliIilI[SynapseXen_ilIiIl(SynapseXen_liIIiIIi[1158609693],72)]=SynapseXen_IilIIIIilIliliIilI[SynapseXen_ilIiIl(SynapseXen_liIIiIIi[507457194],111)]elseif SynapseXen_iiIlIllIlillllliII==18 then if SynapseXen_lIIliiiiIIlIil(SynapseXen_liIIiIIi[1285932406],3838,262144)==7081 then SynapseXen_IilIIIIilIliliIilI[SynapseXen_lIIliiiiIIlIil(SynapseXen_lIIliiiiIIlIil(SynapseXen_liIIiIIi[1158609693],2,256),SynapseXen_llIIliIIlI,256)]=SynapseXen_iiill else SynapseXen_IilIIIIilIliliIilI[SynapseXen_lIIliiiiIIlIil(SynapseXen_lIIliiiiIIlIil(SynapseXen_liIIiIIi[1158609693],2,256),SynapseXen_llIIliIIlI,256)]=SynapseXen_iliIIlIiiIlIiil[SynapseXen_lIIliiiiIIlIil(SynapseXen_liIIiIIi[1285932406],3838,262144)]end elseif SynapseXen_iiIlIllIlillllliII==239 then local SynapseXen_lIiiIllliillII=SynapseXen_lIIliiiiIIlIil(SynapseXen_ilIiIl(SynapseXen_liIIiIIi[1158609693],59),SynapseXen_llIIliIIlI,256)local SynapseXen_iIIlilllIllIIIill=SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[507457194],8,512)local SynapseXen_iIIII=SynapseXen_lIIliiiiIIlIil(SynapseXen_liIIiIIi[432912724],99,512)local SynapseXen_IiiIIllliiIIiiillI=SynapseXen_IilIIIIilIliliIilI;if SynapseXen_iIIII==0 then SynapseXen_IIillilIilIliIilii=SynapseXen_IIillilIilIliIilii+1;SynapseXen_iIIII=SynapseXen_iIIlIIliiIiillIlllI[SynapseXen_IIillilIilIliIilii][283033142]end;local SynapseXen_IIIIliiIliIlil=(SynapseXen_iIIII-1)*50;local SynapseXen_liiIIiilIlIiIIl=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIiiIllliillII]if SynapseXen_iIIlilllIllIIIill==0 then SynapseXen_iIIlilllIllIIIill=SynapseXen_IiIIlililiIllii-SynapseXen_lIiiIllliillII end;for SynapseXen_iiliIilillIi=1,SynapseXen_iIIlilllIllIIIill do SynapseXen_liiIIiilIlIiIIl[SynapseXen_IIIIliiIliIlil+SynapseXen_iiliIilillIi]=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIiiIllliillII+SynapseXen_iiliIilillIi]end elseif SynapseXen_iiIlIllIlillllliII==89 then local SynapseXen_lIiiIllliillII=SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[1158609693],5,256)local SynapseXen_iIIlilllIllIIIill=SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[507457194],10,512)local SynapseXen_IiiIIllliiIIiiillI=SynapseXen_IilIIIIilIliliIilI;local SynapseXen_lliIlI,SynapseXen_lillli;local SynapseXen_IIIIIliIIilIiiIIIiil;local SynapseXen_llllIiiiIl=0;SynapseXen_lliIlI={}if SynapseXen_iIIlilllIllIIIill~=1 then if SynapseXen_iIIlilllIllIIIill~=0 then SynapseXen_IIIIIliIIilIiiIIIiil=SynapseXen_lIiiIllliillII+SynapseXen_iIIlilllIllIIIill-1 else SynapseXen_IIIIIliIIilIiiIIIiil=SynapseXen_IiIIlililiIllii end;for SynapseXen_iiliIilillIi=SynapseXen_lIiiIllliillII+1,SynapseXen_IIIIIliIIilIiiIIIiil do SynapseXen_lliIlI[#SynapseXen_lliIlI+1]=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iiliIilillIi]end;SynapseXen_lillli={SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIiiIllliillII](unpack(SynapseXen_lliIlI,1,SynapseXen_IIIIIliIIilIiiIIIiil-SynapseXen_lIiiIllliillII))}else SynapseXen_lillli={SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIiiIllliillII]()}end;for SynapseXen_llIliliIiiiiliIIli in next,SynapseXen_lillli do if SynapseXen_llIliliIiiiiliIIli>SynapseXen_llllIiiiIl then SynapseXen_llllIiiiIl=SynapseXen_llIliliIiiiiliIIli end end;return SynapseXen_lillli,SynapseXen_llllIiiiIl elseif SynapseXen_iiIlIllIlillllliII==193 then local SynapseXen_lIiiIllliillII=SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[1158609693],73,256)local SynapseXen_iIIlilllIllIIIill=SynapseXen_ilIiIl(SynapseXen_liIIiIIi[507457194],113)local SynapseXen_iIIII=SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_ilIiIl(SynapseXen_liIIiIIi[432912724],79),SynapseXen_llIIliIIlI,512)local SynapseXen_IiiIIllliiIIiiillI=SynapseXen_IilIIIIilIliliIilI;local SynapseXen_lliIlI,SynapseXen_lillli;local SynapseXen_IIIIIliIIilIiiIIIiil,SynapseXen_lllIllililiiiil;SynapseXen_lliIlI={}if SynapseXen_iIIlilllIllIIIill~=1 then if SynapseXen_iIIlilllIllIIIill~=0 then SynapseXen_IIIIIliIIilIiiIIIiil=SynapseXen_lIiiIllliillII+SynapseXen_iIIlilllIllIIIill-1 else SynapseXen_IIIIIliIIilIiiIIIiil=SynapseXen_IiIIlililiIllii end;SynapseXen_lllIllililiiiil=0;for SynapseXen_iiliIilillIi=SynapseXen_lIiiIllliillII+1,SynapseXen_IIIIIliIIilIiiIIIiil do SynapseXen_lllIllililiiiil=SynapseXen_lllIllililiiiil+1;SynapseXen_lliIlI[SynapseXen_lllIllililiiiil]=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iiliIilillIi]end;SynapseXen_IIIIIliIIilIiiIIIiil,SynapseXen_lillli=SynapseXen_IIIiiIi(SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIiiIllliillII](unpack(SynapseXen_lliIlI,1,SynapseXen_IIIIIliIIilIiiIIIiil-SynapseXen_lIiiIllliillII)))else SynapseXen_IIIIIliIIilIiiIIIiil,SynapseXen_lillli=SynapseXen_IIIiiIi(SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIiiIllliillII]())end;SynapseXen_IiIIlililiIllii=SynapseXen_lIiiIllliillII-1;if SynapseXen_iIIII~=1 then if SynapseXen_iIIII~=0 then SynapseXen_IIIIIliIIilIiiIIIiil=SynapseXen_lIiiIllliillII+SynapseXen_iIIII-2 else SynapseXen_IIIIIliIIilIiiIIIiil=SynapseXen_IIIIIliIIilIiiIIIiil+SynapseXen_lIiiIllliillII-1 end;SynapseXen_lllIllililiiiil=0;for SynapseXen_iiliIilillIi=SynapseXen_lIiiIllliillII,SynapseXen_IIIIIliIIilIiiIIIiil do SynapseXen_lllIllililiiiil=SynapseXen_lllIllililiiiil+1;SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iiliIilillIi]=SynapseXen_lillli[SynapseXen_lllIllililiiiil]end end elseif SynapseXen_iiIlIllIlillllliII==1 then SynapseXen_lIIiIi[SynapseXen_lIillliiilili[SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[1285932406],246302,262144)]]=SynapseXen_IilIIIIilIliliIilI[SynapseXen_lIIliiiiIIlIil(SynapseXen_liIIiIIi[1158609693],31,256)]elseif SynapseXen_iiIlIllIlillllliII==171 then local SynapseXen_lIiiIllliillII=SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[1158609693],33,256)~=0;local SynapseXen_iIIlilllIllIIIill=SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[507457194],66,512)local SynapseXen_iIIII=SynapseXen_lIIliiiiIIlIil(SynapseXen_liIIiIIi[432912724],123,512)local SynapseXen_IiiIIllliiIIiiillI=SynapseXen_IilIIIIilIliliIilI;if SynapseXen_iIIlilllIllIIIill>255 then SynapseXen_iIIlilllIllIIIill=SynapseXen_lIillliiilili[SynapseXen_iIIlilllIllIIIill-256]else SynapseXen_iIIlilllIllIIIill=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iIIlilllIllIIIill]end;if SynapseXen_iIIII>255 then SynapseXen_iIIII=SynapseXen_lIillliiilili[SynapseXen_iIIII-256]else SynapseXen_iIIII=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iIIII]end;if SynapseXen_iIIlilllIllIIIill==SynapseXen_iIIII~=SynapseXen_lIiiIllliillII then SynapseXen_IIillilIilIliIilii=SynapseXen_IIillilIilIliIilii+1 end elseif SynapseXen_iiIlIllIlillllliII==200 then local SynapseXen_lIiiIllliillII=SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[1158609693],43,256)local SynapseXen_iIIlilllIllIIIill=SynapseXen_lIIliiiiIIlIil(SynapseXen_liIIiIIi[507457194],84,512)local SynapseXen_iIIII=SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_lIIliiiiIIlIil(SynapseXen_liIIiIIi[432912724],66,512),SynapseXen_llIIliIIlI,512)local SynapseXen_IiiIIllliiIIiiillI=SynapseXen_IilIIIIilIliliIilI;SynapseXen_iIIlilllIllIIIill=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iIIlilllIllIIIill]if SynapseXen_iIIII>255 then SynapseXen_iIIII=SynapseXen_lIillliiilili[SynapseXen_iIIII-256]else SynapseXen_iIIII=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iIIII]end;SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIiiIllliillII+1]=SynapseXen_iIIlilllIllIIIill;SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIiiIllliillII]=SynapseXen_iIIlilllIllIIIill[SynapseXen_iIIII]elseif SynapseXen_iiIlIllIlillllliII==198 then local SynapseXen_iIIII=SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[432912724],48,512)local SynapseXen_IiiIIllliiIIiiillI=SynapseXen_IilIIIIilIliliIilI;if SynapseXen_iIIII>255 then SynapseXen_iIIII=SynapseXen_lIillliiilili[SynapseXen_iIIII-256]else SynapseXen_iIIII=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iIIII]end;SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[1158609693],111,256)]=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_ilIiIl(SynapseXen_liIIiIIi[507457194],4)][SynapseXen_iIIII]elseif SynapseXen_iiIlIllIlillllliII==57 then local SynapseXen_iIIlilllIllIIIill=SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[507457194],14,512)local SynapseXen_iIIII=SynapseXen_ilIiIl(SynapseXen_liIIiIIi[432912724],109)local SynapseXen_IiiIIllliiIIiiillI=SynapseXen_IilIIIIilIliliIilI;if SynapseXen_iIIlilllIllIIIill>255 then SynapseXen_iIIlilllIllIIIill=SynapseXen_lIillliiilili[SynapseXen_iIIlilllIllIIIill-256]else SynapseXen_iIIlilllIllIIIill=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iIIlilllIllIIIill]end;if SynapseXen_iIIII>255 then SynapseXen_iIIII=SynapseXen_lIillliiilili[SynapseXen_iIIII-256]else SynapseXen_iIIII=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iIIII]end;SynapseXen_IiiIIllliiIIiiillI[SynapseXen_ilIiIl(SynapseXen_liIIiIIi[1158609693],112)]=SynapseXen_iIIlilllIllIIIill-SynapseXen_iIIII elseif SynapseXen_iiIlIllIlillllliII==173 then SynapseXen_IIillilIilIliIilii=SynapseXen_IIillilIilIliIilii+SynapseXen_liIIiIIi[540369749]elseif SynapseXen_iiIlIllIlillllliII==24 then SynapseXen_IilIIIIilIliliIilI[SynapseXen_lIIliiiiIIlIil(SynapseXen_liIIiIIi[1158609693],70,256)]={}elseif SynapseXen_iiIlIllIlillllliII==220 then local SynapseXen_IiiIIllliiIIiiillI=SynapseXen_IilIIIIilIliliIilI;local SynapseXen_iIIlilllIllIIIill=SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_lIIliiiiIIlIil(SynapseXen_liIIiIIi[507457194],85,512),SynapseXen_llIIliIIlI,512)local SynapseXen_IIliIIIIIllIIiiIi=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iIIlilllIllIIIill]for SynapseXen_iiliIilillIi=SynapseXen_iIIlilllIllIIIill+1,SynapseXen_lIIliiiiIIlIil(SynapseXen_liIIiIIi[432912724],64,512)do SynapseXen_IIliIIIIIllIIiiIi=SynapseXen_IIliIIIIIllIIiiIi..SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iiliIilillIi]end;SynapseXen_IilIIIIilIliliIilI[SynapseXen_ilIiIl(SynapseXen_liIIiIIi[1158609693],24)]=SynapseXen_IIliIIIIIllIIiiIi elseif SynapseXen_iiIlIllIlillllliII==35 then local SynapseXen_iIIlilllIllIIIill=SynapseXen_IilIIIIilIliliIilI[SynapseXen_ilIiIl(SynapseXen_liIIiIIi[507457194],37)]if not not SynapseXen_iIIlilllIllIIIill==(SynapseXen_ilIiIl(SynapseXen_liIIiIIi[432912724],91)==0)then SynapseXen_IIillilIilIliIilii=SynapseXen_IIillilIilIliIilii+1 else SynapseXen_IilIIIIilIliliIilI[SynapseXen_lIIliiiiIIlIil(SynapseXen_liIIiIIi[1158609693],87,256)]=SynapseXen_iIIlilllIllIIIill end elseif SynapseXen_iiIlIllIlillllliII==25 then SynapseXen_IilIIIIilIliliIilI[SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[1158609693],4,256)]=not SynapseXen_IilIIIIilIliliIilI[SynapseXen_ilIiIl(SynapseXen_liIIiIIi[507457194],20)]elseif SynapseXen_iiIlIllIlillllliII==111 then local SynapseXen_iIIlilllIllIIIill=SynapseXen_ilIiIl(SynapseXen_liIIiIIi[507457194],58)local SynapseXen_iIIII=SynapseXen_lIIliiiiIIlIil(SynapseXen_liIIiIIi[432912724],64,512)local SynapseXen_IiiIIllliiIIiiillI=SynapseXen_IilIIIIilIliliIilI;if SynapseXen_iIIlilllIllIIIill>255 then SynapseXen_iIIlilllIllIIIill=SynapseXen_lIillliiilili[SynapseXen_iIIlilllIllIIIill-256]else SynapseXen_iIIlilllIllIIIill=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iIIlilllIllIIIill]end;if SynapseXen_iIIII>255 then SynapseXen_iIIII=SynapseXen_lIillliiilili[SynapseXen_iIIII-256]else SynapseXen_iIIII=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iIIII]end;SynapseXen_IiiIIllliiIIiiillI[SynapseXen_ilIiIl(SynapseXen_liIIiIIi[1158609693],127)]=SynapseXen_iIIlilllIllIIIill^SynapseXen_iIIII elseif SynapseXen_iiIlIllIlillllliII==151 then local SynapseXen_lIiiIllliillII=SynapseXen_lIIliiiiIIlIil(SynapseXen_liIIiIIi[1158609693],71,256)~=0;local SynapseXen_iIIlilllIllIIIill=SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[507457194],7,512)local SynapseXen_iIIII=SynapseXen_ilIiIl(SynapseXen_liIIiIIi[432912724],74)local SynapseXen_IiiIIllliiIIiiillI=SynapseXen_IilIIIIilIliliIilI;if SynapseXen_iIIlilllIllIIIill>255 then SynapseXen_iIIlilllIllIIIill=SynapseXen_lIillliiilili[SynapseXen_iIIlilllIllIIIill-256]else SynapseXen_iIIlilllIllIIIill=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iIIlilllIllIIIill]end;if SynapseXen_iIIII>255 then SynapseXen_iIIII=SynapseXen_lIillliiilili[SynapseXen_iIIII-256]else SynapseXen_iIIII=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iIIII]end;if SynapseXen_iIIlilllIllIIIill<=SynapseXen_iIIII~=SynapseXen_lIiiIllliillII then SynapseXen_IIillilIilIliIilii=SynapseXen_IIillilIilIliIilii+1 end elseif SynapseXen_iiIlIllIlillllliII==224 then SynapseXen_IilIIIIilIliliIilI[SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[1158609693],108,256),SynapseXen_llIIliIIlI,256)]=SynapseXen_lIIiIi[SynapseXen_lIillliiilili[SynapseXen_lIIliiiiIIlIil(SynapseXen_liIIiIIi[1285932406],49384,262144)]]elseif SynapseXen_iiIlIllIlillllliII==227 then local SynapseXen_iIIlilllIllIIIill=SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[507457194],32,512)local SynapseXen_iIIII=SynapseXen_lIIliiiiIIlIil(SynapseXen_liIIiIIi[432912724],122,512)local SynapseXen_IiiIIllliiIIiiillI=SynapseXen_IilIIIIilIliliIilI;if SynapseXen_iIIlilllIllIIIill>255 then SynapseXen_iIIlilllIllIIIill=SynapseXen_lIillliiilili[SynapseXen_iIIlilllIllIIIill-256]else SynapseXen_iIIlilllIllIIIill=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iIIlilllIllIIIill]end;if SynapseXen_iIIII>255 then SynapseXen_iIIII=SynapseXen_lIillliiilili[SynapseXen_iIIII-256]else SynapseXen_iIIII=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_iIIII]end;SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIIliiiiIIlIil(SynapseXen_liIIiIIi[1158609693],39,256)]=SynapseXen_iIIlilllIllIIIill*SynapseXen_iIIII elseif SynapseXen_iiIlIllIlillllliII==232 then local SynapseXen_lIiiIllliillII=SynapseXen_iIllIIIIIlIIiIlIliI(SynapseXen_liIIiIIi[1158609693],32,256)local SynapseXen_iIIII=SynapseXen_ilIiIl(SynapseXen_liIIiIIi[432912724],35)local SynapseXen_IiiIIllliiIIiiillI=SynapseXen_IilIIIIilIliliIilI;local SynapseXen_IIIIliiIliIlil=SynapseXen_lIiiIllliillII+2;local SynapseXen_IIIlliiI={SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIiiIllliillII](SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIiiIllliillII+1],SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIiiIllliillII+2])}for SynapseXen_iiliIilillIi=1,SynapseXen_iIIII do SynapseXen_IilIIIIilIliliIilI[SynapseXen_IIIIliiIliIlil+SynapseXen_iiliIilillIi]=SynapseXen_IIIlliiI[SynapseXen_iiliIilillIi]end;if SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIiiIllliillII+3]~=nil then SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIiiIllliillII+2]=SynapseXen_IiiIIllliiIIiiillI[SynapseXen_lIiiIllliillII+3]else SynapseXen_IIillilIilIliIilii=SynapseXen_IIillilIilIliIilii+1 end end end end;local SynapseXen_lliIlI={...}for SynapseXen_iiliIilillIi=0,SynapseXen_IIiiIllIli do if SynapseXen_iiliIilillIi>=SynapseXen_IIlliIIilIiilIi[1646345233]then SynapseXen_Ilillii[SynapseXen_iiliIilillIi-SynapseXen_IIlliIIilIiilIi[1646345233]]=SynapseXen_lliIlI[SynapseXen_iiliIilillIi+1]else SynapseXen_IilIIIIilIliliIilI[SynapseXen_iiliIilillIi]=SynapseXen_lliIlI[SynapseXen_iiliIilillIi+1]end end;local SynapseXen_iIIlilllIllIIIill,SynapseXen_iIIII=SynapseXen_IilIliilil()if SynapseXen_iIIlilllIllIIIill and SynapseXen_iIIII>0 then return unpack(SynapseXen_iIIlilllIllIIIill,1,SynapseXen_iIIII)end;return end end;local function SynapseXen_iIiIiiII(SynapseXen_iililiiilIIlIIll,SynapseXen_lIIiIi)local SynapseXen_Iiiil=SynapseXen_IilIIIIIIlliiIIIlI(SynapseXen_iililiiilIIlIIll)return SynapseXen_iIiIllilIiIII(SynapseXen_Iiiil,SynapseXen_lIIiIi or getfenv(0)),SynapseXen_Iiiil end;return SynapseXen_iIiIiiII(SynapseXen_ilIllliliIIliIiliII(""),getfenv())()
end)

CLOSE.Name = "CLOSE"
CLOSE.Parent = main
CLOSE.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
CLOSE.BorderColor3 = Color3.fromRGB(0, 0, 0)
CLOSE.Position = UDim2.new(0.950437129, 0, 0, 0)
CLOSE.Size = UDim2.new(0, 23, 0, 14)
CLOSE.Font = Enum.Font.SourceSans
CLOSE.Text = "X"
CLOSE.TextColor3 = Color3.fromRGB(255, 255, 255)
CLOSE.TextSize = 14.000
CLOSE.MouseButton1Down:connect(function()
main.Visible = false
Openmain.Visible = true
end)

REVIZ.Name = "REVIZ"
REVIZ.Parent = main
REVIZ.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
REVIZ.Position = UDim2.new(0.0621151812, 0, 0.399288118, 0)
REVIZ.Size = UDim2.new(0, 200, 0, 50)
REVIZ.Font = Enum.Font.SourceSans
REVIZ.Text = "Reviz"
REVIZ.TextColor3 = Color3.fromRGB(255, 255, 255)
REVIZ.TextSize = 14.000
REVIZ.MouseButton1Down:connect(function()
-- Creator: illremember#3799
 
-- Credits to infinite yield, harkinian, dex creators
 
prefix = ":"
wait(0.3)
Commands = {
    '[-] cmdbar is shown when ; is pressed.',
    '[1] kill [plr] -- You need a tool! Will kill the player, use rkill to kill you and player',
    '[2] bring [plr] -- You need a tool! Will bring player to you',
    '[3] spin [plr] -- You need a tool! Makes you and the player spin crazy',
    '[4] unspin -- Use after using spin cmd and dying, so you stop loop teleporting',
    '[5] attach [plr] -- You need a tool! Attaches you to player',
    '[6] unattach [plr] -- Attempts to unattach you from a player',
    '[7] follow [plr] -- Makes you follow behind the player',
    '[8] unfollow',
    '[9] freefall [plr] -- You need a tool! Teleports you and the player up into the air',
    '[10] trail [plr] -- The opposite of follow, you stay infront of player',
    '[11] untrail',
    '[12] orbit [plr] -- Makes you orbit the player',
    '[13] unorbit',
    '[14] fling [plr] -- Makes you fling the player',
    '[15] unfling',
    '[16] fecheck -- Checks if the game is FE or not',
    '[17] void [plr] -- Teleports player to the void',
    '[18] noclip -- Gives you noclip to walk through walls',
    '[19] clip -- Removes noclip',
    '[20] speed [num]/ws [num] -- Changes how fast you walk 16 is default',
    '[21] jumppower [num]/jp [num] -- Changes how high you jump 50 is default',
    '[22] hipheight [num]/hh [num] -- Changes how high you float 0 is default',
    '[23] default -- Changes your speed, jumppower and hipheight to default values',
    '[24] annoy [plr] -- Loop teleports you to the player',
    '[25] unannoy',
    '[26] headwalk [plr] -- Loop teleports you to the player head',
    '[27] unheadwalk',
    '[28] nolimbs -- Removes your arms and legs',
    '[29] god -- Gives you FE Godmode',
    '[30] drophats -- Drops your accessories',
    '[31] droptool -- Drops any tool you have equipped',
    '[32] loopdhats -- Loop drops your accessories',
    '[33] unloopdhats',
    '[34] loopdtool -- Loop drops any tools you have equipped',
    '[35] unloopdtool',
    '[36] invisible -- Gives you invisibility CREDIT TO TIMELESS',
    '[37] view [plr] -- Changes your camera to the player character',
    '[38] unview',
    '[39] goto [plr] -- Teleports you to player',
    '[40] fly -- Allows you to fly, credit to Infinite Yield',
    '[41] unfly',
    '[42] chat [msg] -- Makes you chat a message',
    '[43] spam [msg] -- Spams a message',
    '[44] unspam',
    '[45] spamwait [num] -- Changes delay of chatting a message for the spam command in seconds default is 1 second',
    '[46] pmspam [plr] -- Spams a player in private message',
    '[47] unpmspam',
    '[48] cfreeze [plr] -- Freezes a player on your client, they will only be frozen for you',
    '[49] uncfreeze [plr]',
    '[50] unlockws -- Unlocks the workspace',
    '[51] lockws -- Locks the workspace',
    '[52] btools -- Gives you btools that will only show to you useful for deleting certain blocks only for you',
    '[53] pstand -- Enables platform stand',
    '[54] unpstand -- Disables platform stand',
    '[55] blockhead -- Removes your head mesh',
    '[56] sit',
    '[57] bringobj [obj] -- Only shows on client, brings an object/part to you constantly, can be used to bring healing parts, weapons, money etc, type in exact name',
    '[58] wsvis [num] -- Changes visibility of workspace parts, num should be between 0 and 1, only shows client sided',
    '[59] hypertotal -- Loads in my FE GUI Hypertotal',
    '[60] cmds -- Prints all commands',
    '[61] rmeshhats/blockhats -- Removes the meshes of all your accessories aka block hats',
    '[62] rmeshtool/blocktool -- Removes the mesh of the tool you have equipped aka block tool',
    '[63] spinner -- Makes you spin',
    '[64] nospinner',
    '[65] reach [num] -- Gives you reach, mostly used for swords, say ;reachd for default and enter number after for custom',
    '[66] noreach -- Removes reach, must have tool equipped',
    '[67] rkill [plr] -- Kills you and the player, use kill to just kill the player without dying',
    '[68] tp me [plr] -- Alternative to goto',
    '[69] cbring [plr] -- Brings player infront of you, shows only on client, allows you to do damage to player',
    '[70] uncbring',
    '[71] swap [plr] -- You need a tool! Swaps players position with yours and your position with players',
    '[72] givetool [plr] -- Gives the tool you have equipped to the player',
    '[73] glitch [plr] -- Glitches you and the player, looks very cool',
    '[74] unglitch -- Unglitches you',
    '[75] grespawn -- Alternative to normal respawn and usually works best for when you want to reset with FE Godmode',
    '[76] explorer -- Loads up DEX',
    '[77] reset -- Resets your character.',
    '[78] anim [id] -- Applies an animation on you, must be created by ROBLOX',
    '[79] animgui -- Loads up Energize animations GUI',
    '[80] savepos -- Saves your current position',
    '[81] loadpos -- Teleports you to your saved position',
    '[82] bang [plr] -- 18+ will not work if you have FE Godmode on',
    '[83] unbang',
    '[84] delcmdbar -- Removes the command bar completely',
    '[85] bringmod [obj] -- Brings all the parts in a model, client only, comes from ;bringobj enter exact name of model',
    '[86] shutdown -- Uses harkinians script to shutdown server',
    '[87] respawn -- If grespawn doesnt work you can use respawn',
    '[88] delobj [obj] -- Deletes a certain brick in workspace, client sided',
    '[89] getplrs -- Prints all players in game',
    '[90] deldecal -- Deletes all decals client sided',
    '[91] opfinality -- Loads in my FE GUI Opfinality',
    '[92] remotes -- Prints all remotes in the game in the console when added',
    '[93] noremotes -- Stops printing remotes',
    '[94] tpdefault -- Stops all loop teleports to a player',
    '[95] stopsit -- Will not allow you to sit',
    '[96] gosit -- Allows you to sit',
    '[97] clicktp -- Enables click tp',
    '[98] noclicktp -- Disables click tp',
    '[99] toolson -- If any tools are dropped in the workspace you will automatically get them',
    '[100] toolsoff -- Stops ;toolson',
    '[101] version -- Gets the admin version',
    '[102] state [num] -- Changes your humanoid state, ;unstate to stop.',
    '[103] gravity [num] -- Changes workspace gravity default is 196.2',
    '[104] pgs -- Checks if the game has PGSPhysicsSolverEnabled enabled',
    '[105] clickdel -- Delete any block you press q on, client sided',
    '[106] noclickdel -- Stops clickdel',
    '[107] looprhats -- Loop removes mesh of your hats/loop block hats',
    '[108] unlooprhats -- Stops loop removing mesh',
    '[109] looprtool -- Loop removes mesh of your tool/loop block tools',
    '[110] unlooprtool -- Stops loop removing mesh',
    '[111] givealltools [plr] -- Gives all the tools you have in your backpack to the player',
    '[112] age [plr] -- Makes you chat the account age of the player',
    '[113] id [plr] -- Makes you chat the account ID of the player',
    '[114] .age [plr] -- Privately shows you the account age of the player',
    '[115] .id [plr] -- Privately shows you the account ID of the player',
    '[116] gameid -- Shows the game ID',
    '[117] removeinvis -- Removes all invisible walls/parts, client sided',
    '[118] removefog -- Removes fog, client sided',
    '[119] disable -- Disables your character by removing humanoid',
    '[120] enable -- Enables your character by adding humanoid',
    '[121] prefix [key] -- Changes the prefix used, default is ;',
    '[122] ;resetprefix -- Resets the prefix to ; incase you change it to an unusable prefix. Say exactly ";resetprefix" to do this command, no matter what your prefix is set to.',
    '[123] flyspeed [num] -- Change your fly speed, default is 1',
    '[124] carpet [plr] -- Makes you a carpet for a player, will not work if FE Godmode is on',
    '[125] uncarpet -- Stops carpet player',
    '[126] stare [plr] -- Turns your character to stare at another player',
    '[127] unstare -- Stops stare player',
    '[128] logchat -- Logs all chat (including /e and whispers) of all players',
    '[129] unlogchat -- Disables logchat',
    '[130] fixcam -- Fixes/resets your camera',
    '[131] unstate -- Stops changing state',
}
speedget = 1
 
lplayer = game:GetService("Players").LocalPlayer
 
lplayer.CharacterAdded:Connect(function(character)
    spin = false
    flying = false
    staring = false
    banpl = false
end)
 
function change()
    prefix = prefix
    speedfly = speedfly
end
 
function GetPlayer(String) -- Credit to Timeless/xFunnieuss
    local Found = {}
    local strl = String:lower()
    if strl == "all" then
        for i,v in pairs(game:GetService("Players"):GetPlayers()) do
            table.insert(Found,v)
        end
    elseif strl == "others" then
        for i,v in pairs(game:GetService("Players"):GetPlayers()) do
            if v.Name ~= lplayer.Name then
                table.insert(Found,v)
            end
        end  
    elseif strl == "me" then
        for i,v in pairs(game:GetService("Players"):GetPlayers()) do
            if v.Name == lplayer.Name then
                table.insert(Found,v)
            end
        end  
    else
        for i,v in pairs(game:GetService("Players"):GetPlayers()) do
            if v.Name:lower():sub(1, #String) == String:lower() then
                table.insert(Found,v)
            end
        end    
    end
    return Found    
end
 
local Mouse = lplayer:GetMouse()
 
spin = false
followed = false
traill = false
noclip = false
annoying = false
hwalk = false
droppinghats = false
droppingtools = false
flying = false
spamdelay = 1
spamming = false
spammingpm = false
cbringing = false
remotes = true
added = true
binds = false
stopsitting = false
clickgoto = false
gettingtools = false
removingmeshhats = false
removingmeshtool = false
clickdel = false
staring = false
chatlogs = false
banpl = false
changingstate = false
statechosen = 0
 
adminversion = "Reviz Admin by illremember, Version 2.0"
 
flying = false
speedfly = 1
 
function plrchat(plr, chat)
print(plr.Name..": "..tick().."\n"..chat)
end
 
for i,v in pairs(game:GetService("Players"):GetPlayers()) do
v.Chatted:connect(function(chat)
if chatlogs then
plrchat(v, chat)
end
end)
end
game:GetService("Players").PlayerAdded:connect(function(plr)
plr.Chatted:connect(function(chat)
if chatlogs then
plrchat(plr, chat)
end
end)
end)
 
 
local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local CMDBAR = Instance.new("TextBox")
ScreenGui.Parent = game:GetService("CoreGui")
Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.new(0.3, 0.1, 0.1)
Frame.BackgroundTransparency = 0.3
Frame.Position = UDim2.new(0.5, 0, 0, 10)
Frame.Size = UDim2.new(0, 200, 0, 40)
Frame.Active = true
Frame.Draggable = true
CMDBAR.Name = "CMDBAR"
CMDBAR.Parent = Frame
CMDBAR.BackgroundColor3 = Color3.new(0.105882, 0.164706, 0.207843)
CMDBAR.BackgroundTransparency = 0.20000000298023
CMDBAR.Size = UDim2.new(0, 180, 0, 20)
CMDBAR.Position = UDim2.new(0.05, 0, 0.25, 0)
CMDBAR.Font = Enum.Font.SourceSansLight
CMDBAR.FontSize = Enum.FontSize.Size14
CMDBAR.TextColor3 = Color3.new(0.945098, 0.945098, 0.945098)
CMDBAR.TextScaled = true
CMDBAR.TextSize = 14
CMDBAR.TextWrapped = true
CMDBAR.Text = "Press ; to type, Enter to execute"
 
local CMDS = Instance.new("ScreenGui")
local CMDSFRAME = Instance.new("Frame")
local ScrollingFrame = Instance.new("ScrollingFrame")
local TextLabel = Instance.new("TextLabel")
local closegui = Instance.new("TextButton")
CMDS.Name = "CMDS"
CMDS.Parent = game:GetService("CoreGui")
CMDSFRAME.Name = "CMDSFRAME"
CMDSFRAME.Parent = CMDS
CMDSFRAME.Active = true
CMDSFRAME.BackgroundColor3 = Color3.new(0.223529, 0.231373, 0.309804)
CMDSFRAME.BorderSizePixel = 0
CMDSFRAME.Draggable = true
CMDSFRAME.Position = UDim2.new(0, 315, 0, 100)
CMDSFRAME.Size = UDim2.new(0, 275, 0, 275)
CMDSFRAME.Visible = false
ScrollingFrame.Parent = CMDSFRAME
ScrollingFrame.BackgroundColor3 = Color3.new(0.160784, 0.160784, 0.203922)
ScrollingFrame.BorderSizePixel = 0
ScrollingFrame.Position = UDim2.new(0, 0, 0.0729999989, 0)
ScrollingFrame.Size = UDim2.new(1.04999995, 0, 0.92900002, 0)
ScrollingFrame.CanvasSize = UDim2.new(0, 0, 10, 0)
TextLabel.Parent = ScrollingFrame
TextLabel.BackgroundColor3 = Color3.new(1, 1, 1)
TextLabel.BackgroundTransparency = 1
TextLabel.Size = UDim2.new(0.930000007, 0, 1, 0)
TextLabel.Font = Enum.Font.SourceSans
TextLabel.FontSize = Enum.FontSize.Size18
TextLabel.Text = "[-] cmdbar is shown when ; is pressed.,\n[1] kill [plr] -- You need a tool! Will kill the player, use rkill to kill you and player,\n[2] bring [plr] -- You need a tool! Will bring player to you,\n[3] spin [plr] -- You need a tool! Makes you and the player spin crazy,\n[4] unspin -- Use after using spin cmd and dying, so you stop loop teleporting,\n[5] attach [plr] -- You need a tool! Attaches you to player,\n[6] unattach [plr] -- Attempts to unattach you from a player,\n[7] follow [plr] -- Makes you follow behind the player,\n[8] unfollow,\n[9] freefall [plr] -- You need a tool! Teleports you and the player up into the air,\n[10] trail [plr] -- The opposite of follow, you stay infront of player,\n[11] untrail,\n[12] orbit [plr] -- Makes you orbit the player,\n[13] unorbit,\n[14] fling [plr] -- Makes you fling the player,\n[15] unfling,\n[16] fecheck -- Checks if the game is FE or not,\n[17] void [plr] -- Teleports player to the void,\n[18] noclip -- Gives you noclip to walk through walls,\n[19] clip -- Removes noclip,\n[20] speed [num]/ws [num] -- Changes how fast you walk 16 is default,\n[21] jumppower [num]/jp [num] -- Changes how high you jump 50 is default,\n[22] hipheight [num]/hh [num] -- Changes how high you float 0 is default,\n[23] default -- Changes your speed, jumppower and hipheight to default values,\n[24] annoy [plr] -- Loop teleports you to the player,\n[25] unannoy,\n[26] headwalk [plr] -- Loop teleports you to the player head,\n[27] unheadwalk,\n[28] nolimbs -- Removes your arms and legs,\n[29] god -- Gives you FE Godmode,\n[30] drophats -- Drops your accessories,\n[31] droptool -- Drops any tool you have equipped,\n[32] loopdhats -- Loop drops your accessories,\n[33] unloopdhats,\n[34] loopdtool -- Loop drops any tools you have equipped,\n[35] unloopdtool,\n[36] invisible -- Gives you invisibility CREDIT TO TIMELESS,\n[37] view [plr] -- Changes your camera to the player character,\n[38] unview,\n[39] goto [plr] -- Teleports you to player,\n[40] fly -- Allows you to fly,\n[41] unfly,\n[42] chat [msg] -- Makes you chat a message,\n[43] spam [msg] -- Spams a message,\n[44] unspam,\n[45] spamwait [num] -- Changes delay of chatting a message for the spam command in seconds default is 1 second,\n[46] pmspam [plr] -- Spams a player in private message,\n[47] unpmspam,\n[48] cfreeze [plr] -- Freezes a player on your client, they will only be frozen for you,\n[49] uncfreeze [plr],\n[50] unlockws -- Unlocks the workspace,\n[51] lockws -- Locks the workspace,\n[52] btools -- Gives you btools that will only show to you useful for deleting certain blocks only for you,\n[53] pstand -- Enables platform stand,\n[54] unpstand -- Disables platform stand,\n[55] blockhead -- Removes your head mesh,\n[56] sit,\n[57] bringobj [obj] -- Only shows on client, brings an object/part to you constantly, can be used to bring healing parts, weapons, money etc, type in exact name,\n[58] wsvis [num] -- Changes visibility of workspace parts, num should be between 0 and 1, only shows client sided,\n[59] hypertotal -- Loads in my FE GUI Hypertotal,\n[60] cmds -- Prints all commands,\n[61] rmeshhats/blockhats -- Removes the meshes of all your accessories aka block hats,\n[62] rmeshtool/blocktool -- Removes the mesh of the tool you have equipped aka block tool,\n[63] spinner -- Makes you spin,\n[64] nospinner,\n[65] reach [num] -- Gives you reach, mostly used for swords, say ;reachd for default and enter number after for custom,\n[66] noreach -- Removes reach, must have tool equipped,\n[67] rkill [plr] -- Kills you and the player, use kill to just kill the player without dying,\n[68] tp me [plr] -- Alternative to goto,\n[69] cbring [plr] -- Brings player infront of you, shows only on client, allows you to do damage to player,\n[70] uncbring,\n[71] swap [plr] -- You need a tool! Swaps players position with yours and your position with players,\n[72] givetool [plr] -- Gives the tool you have equipped to the player,\n[73] glitch [plr] -- Glitches you and the player, looks very cool,\n[74] unglitch -- Unglitches you,\n[75] grespawn -- Alternative to normal respawn and usually works best for when you want to reset with FE Godmode,\n[76] explorer -- Loads up DEX,\n[77] reset -- Resets your character.,\n[78] anim [id] -- Applies an animation on you, must be created by ROBLOX,\n[79] animgui -- Loads up Energize animations GUI,\n[80] savepos -- Saves your current position,\n[81] loadpos -- Teleports you to your saved position,\n[82] bang [plr] -- 18+,\n[83] unbang,\n[84] delcmdbar -- Removes the command bar completely,\n[85] bringmod [obj] -- Brings all the parts in a model, client only, comes from ;bringobj enter exact name of model,\n[86] shutdown -- Uses harkinians script to shutdown server,\n[87] respawn -- If grespawn doesnt work you can use respawn,\n[88] delobj [obj] -- Deletes a certain brick in workspace, client sided,\n[89] getplrs -- Prints all players in game,\n[90] deldecal -- Deletes all decals client sided,\n[91] opfinality -- Loads in my FE GUI Opfinality,\n[92] remotes -- Prints all remotes in the game in the console when added,\n[93] noremotes -- Stops printing remotes,\n[94] tpdefault -- Stops all loop teleports to a player,\n[95] stopsit -- Will not allow you to sit,\n[96] gosit -- Allows you to sit,\n[97] clicktp -- Enables click tp,\n[98] noclicktp -- Disables click tp,\n[99] toolson -- If any tools are dropped in the workspace you will automatically get them,\n[100] toolsoff -- Stops ;toolson,\n[101] version -- Gets the admin version, \n This list of commands is NOT showing everything, go to my thread in the pastebin link to see ALL commands."
TextLabel.TextColor3 = Color3.new(1, 1, 1)
TextLabel.TextSize = 15
TextLabel.TextWrapped = true
TextLabel.TextXAlignment = Enum.TextXAlignment.Left
TextLabel.TextYAlignment = Enum.TextYAlignment.Top
closegui.Name = "closegui"
closegui.Parent = CMDSFRAME
closegui.BackgroundColor3 = Color3.new(0.890196, 0.223529, 0.0588235)
closegui.BorderSizePixel = 0
closegui.Position = UDim2.new(0.995000005, 0, 0, 0)
closegui.Size = UDim2.new(0.0545952693, 0, 0.0728644878, 0)
closegui.Font = Enum.Font.SourceSansBold
closegui.FontSize = Enum.FontSize.Size24
closegui.Text = "X"
closegui.TextColor3 = Color3.new(1, 1, 1)
closegui.TextSize = 20
 
closegui.MouseButton1Click:connect(function()
    CMDSFRAME.Visible = false
end)
 
game:GetService('RunService').Stepped:connect(function()
    if spin then
        lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[spinplr.Name].Character.HumanoidRootPart.CFrame
    end
    if followed then
        lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[flwplr.Name].Character.HumanoidRootPart.CFrame + game:GetService("Players")[flwplr.Name].Character.HumanoidRootPart.CFrame.lookVector * -5
    end
    if traill then
        lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[trlplr.Name].Character.HumanoidRootPart.CFrame + game:GetService("Players")[trlplr.Name].Character.HumanoidRootPart.CFrame.lookVector * 5
    end
    if annoying then
        lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[annplr.Name].Character.HumanoidRootPart.CFrame
    end
    if hwalk then
        lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[hdwplr.Name].Character.HumanoidRootPart.CFrame + Vector3.new(0, 4, 0)
    end
    if staring then
        lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(lplayer.Character.Torso.Position, game:GetService("Players")[stareplr.Name].Character.Torso.Position)
    end
end)
game:GetService('RunService').Stepped:connect(function()
    if noclip then
        if lplayer.Character.Humanoid.RigType == Enum.HumanoidRigType.R6 then
            lplayer.Character.Head.CanCollide = false
            lplayer.Character.Torso.CanCollide = false
            lplayer.Character["Left Leg"].CanCollide = false
            lplayer.Character["Right Leg"].CanCollide = false
        else
            lplayer.Character.Humanoid:ChangeState(11)
        end
    end
    if changingstate then
        lplayer.Character.Humanoid:ChangeState(statechosen)
    end
end)
game:GetService('RunService').Stepped:connect(function()
    if droppinghats then
        for i,v in pairs(lplayer.Character:GetChildren()) do
            if (v:IsA("Accessory")) or (v:IsA("Hat")) then
                v.Parent = workspace
            end
        end
    end
    if droppingtools then
        for i,v in pairs(lplayer.Character:GetChildren()) do
            if (v:IsA("Tool")) then
                v.Parent = workspace
            end
        end
    end
    if removingmeshhats then
        for i,v in pairs(lplayer.Character:GetChildren()) do
            if (v:IsA("Accessory")) or (v:IsA("Hat")) then
                v.Handle.Mesh:Destroy()
            end
        end
    end
    if removingmeshtool then
        for i,v in pairs(lplayer.Character:GetChildren()) do
            if (v:IsA("Tool")) then
                v.Handle.Mesh:Destroy()
            end
        end
    end
end)
game:GetService('RunService').Stepped:connect(function()
    if banpl then
        lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[bplrr].Character.HumanoidRootPart.CFrame
    end
end)
game:GetService('RunService').Stepped:connect(function()
    if stopsitting then
        lplayer.Character.Humanoid.Sit = false
    end
end)
 
plr = lplayer
hum = plr.Character.HumanoidRootPart
mouse = plr:GetMouse()
mouse.KeyDown:connect(function(key)
    if key == "e" then
        if mouse.Target then
            if clickgoto then
                hum.CFrame = CFrame.new(mouse.Hit.x, mouse.Hit.y + 5, mouse.Hit.z)
            elseif clickdel then
                mouse.Target:Destroy()
            end
        end
    end
end)
 
game:GetService("Workspace").ChildAdded:connect(function(part)
    if gettingtools then
        if part:IsA("Tool") then
            part.Handle.CFrame = lplayer.Character.HumanoidRootPart.CFrame
        end
    end
end)
 
lplayer.Chatted:Connect(function(msg)
    if string.sub(msg, 1, 6) == (prefix.."kill ") then
        if string.sub(msg, 7) == "me" then
            lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(100000,0,100000)
        else
            for i,v in pairs(GetPlayer(string.sub(msg, 7)))do
                local NOW = lplayer.Character.HumanoidRootPart.CFrame
                lplayer.Character.Humanoid.Name = 1
                local l = lplayer.Character["1"]:Clone()
                l.Parent = lplayer.Character
                l.Name = "Humanoid"
                wait(0.1)
                lplayer.Character["1"]:Destroy()
                game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
                lplayer.Character.Animate.Disabled = true
                wait(0.1)
                lplayer.Character.Animate.Disabled = false
                lplayer.Character.Humanoid.DisplayDistanceType = "None"
                for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
                lplayer.Character.Humanoid:EquipTool(v)
                end
                local function tp(player,player2)
                local char1,char2=player.Character,player2.Character
                if char1 and char2 then
                char1:MoveTo(char2.Head.Position)
                end
                end
                wait(0.1)
                lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
                wait(0.2)
                lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
                wait(0.5)
                lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-100000,10,-100000))
                wait(0.7)
                tp(lplayer,game:GetService("Players")[v.Name])
                wait(0.7)
                lplayer.Character.HumanoidRootPart.CFrame = NOW
                game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "Tools needed!";
                Text = "You need a tool in your backpack for this command!";
                })
            end
        end
    end
    if string.sub(msg, 1, 7) == (prefix.."bring ") then
        for i,v in pairs(GetPlayer(string.sub(msg, 8)))do
            local NOW = lplayer.Character.HumanoidRootPart.CFrame
            lplayer.Character.Humanoid.Name = 1
            local l = lplayer.Character["1"]:Clone()
            l.Parent = lplayer.Character
            l.Name = "Humanoid"
            wait(0.1)
            lplayer.Character["1"]:Destroy()
            game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
            lplayer.Character.Animate.Disabled = true
            wait(0.1)
            lplayer.Character.Animate.Disabled = false
            lplayer.Character.Humanoid.DisplayDistanceType = "None"
            for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
            lplayer.Character.Humanoid:EquipTool(v)
            end
            local function tp(player,player2)
            local char1,char2=player.Character,player2.Character
            if char1 and char2 then
            char1.HumanoidRootPart.CFrame = char2.HumanoidRootPart.CFrame
            end
            end
            local function getout(player,player2)
            local char1,char2=player.Character,player2.Character
            if char1 and char2 then
            char1:MoveTo(char2.Head.Position)
            end
            end
            tp(game:GetService("Players")[v.Name], lplayer)
            wait(0.2)
            tp(game:GetService("Players")[v.Name], lplayer)
            wait(0.5)
            lplayer.Character.HumanoidRootPart.CFrame = NOW
            wait(0.5)
            getout(lplayer, game:GetService("Players")[v.Name])
            wait(0.3)
            lplayer.Character.HumanoidRootPart.CFrame = NOW
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Tools needed!";
            Text = "You need a tool in your backpack for this command!";
            })
        end
    end
    if string.sub(msg, 1, 6) == (prefix.."spin ") then
        for i,v in pairs(GetPlayer(string.sub(msg, 7))) do
            lplayer.Character.Humanoid.Name = 1
            local l = lplayer.Character["1"]:Clone()
            l.Parent = lplayer.Character
            l.Name = "Humanoid"
            wait(0.1)
            lplayer.Character["1"]:Destroy()
            game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
            lplayer.Character.Animate.Disabled = true
            wait(0.1)
            lplayer.Character.Animate.Disabled = false
            lplayer.Character.Humanoid.DisplayDistanceType = "None"
            lplayer.Character.Animate.Disabled = false
            for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
            lplayer.Character.Humanoid:EquipTool(v)
            end
            lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
            spinplr = v
            wait(0.5)
            spin = true
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Tools needed!";
            Text = "You need a tool in your backpack for this command!";
            })
        end
    end
    if string.sub(msg, 1, 7) == (prefix.."unspin") then
        spin = false
    end
    if string.sub(msg, 1, 8) == (prefix.."attach ") then
        for i,v in pairs(GetPlayer(string.sub(msg, 9))) do
            lplayer.Character.Humanoid.Name = 1
            local l = lplayer.Character["1"]:Clone()
            l.Parent = lplayer.Character
            l.Name = "Humanoid"
            wait(0.1)
            lplayer.Character["1"]:Destroy()
            game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
            lplayer.Character.Animate.Disabled = true
            wait(0.1)
            lplayer.Character.Animate.Disabled = false
            lplayer.Character.Humanoid.DisplayDistanceType = "None"
            for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
            lplayer.Character.Humanoid:EquipTool(v)
            end
            lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
            wait(0.3)
            lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
            attplr = v
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Tools needed!";
            Text = "You need a tool in your backpack for this command!";
            })
        end
    end
    if string.sub(msg, 1, 10) == (prefix.."unattach ") then
        for i,v in pairs(GetPlayer(string.sub(msg, 11))) do
            local function getout(player,player2)
            local char1,char2=player.Character,player2.Character
            if char1 and char2 then
            char1:MoveTo(char2.Head.Position)
            end
            end
            getout(lplayer, game:GetService("Players")[v.Name])
        end
    end
    if string.sub(msg, 1, 8) == (prefix.."follow ") then
        for i,v in pairs(GetPlayer(string.sub(msg, 9))) do
            followed = true
            flwplr = v
        end
    end
    if string.sub(msg, 1, 9) == (prefix.."unfollow") then
        followed = false
    end
    if string.sub(msg, 1, 10) == (prefix.."freefall ") then
        for i,v in pairs(GetPlayer(string.sub(msg, 11))) do
            local NOW = lplayer.Character.HumanoidRootPart.CFrame
            lplayer.Character.Humanoid.Name = 1
            local l = lplayer.Character["1"]:Clone()
            l.Parent = lplayer.Character
            l.Name = "Humanoid"
            wait(0.1)
            lplayer.Character["1"]:Destroy()
            game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
            lplayer.Character.Animate.Disabled = true
            wait(0.1)
            lplayer.Character.Animate.Disabled = false
            lplayer.Character.Humanoid.DisplayDistanceType = "None"
            for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
            lplayer.Character.Humanoid:EquipTool(v)
            end
            lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
            wait(0.2)
            lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
            wait(0.6)
            lplayer.Character.HumanoidRootPart.CFrame = NOW
            wait(0.6)
            lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(0,50000,0)
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Tools needed!";
            Text = "You need a tool in your backpack for this command!";
            })
        end
    end
    if string.sub(msg, 1, 7) == (prefix.."trail ") then
        for i,v in pairs(GetPlayer(string.sub(msg, 8))) do
            traill = true
            trlplr = v
        end
    end
    if string.sub(msg, 1, 8) == (prefix.."untrail") then
        traill = false
    end
    if string.sub(msg, 1, 7) == (prefix.."orbit ") then
        if string.sub(msg, 8) == "all" or string.sub(msg, 8) == "others" or string.sub(msg, 8) == "me" then
            lplayer.Character.HumanoidRootPart.CFrame = lplayer.Character.HumanoidRootPart.CFrame
        else
            for i,v in pairs(GetPlayer(string.sub(msg, 8))) do
                local o = Instance.new("RocketPropulsion")
                o.Parent = lplayer.Character.HumanoidRootPart
                o.Name = "Orbit"
                o.Target = game:GetService("Players")[v.Name].Character.HumanoidRootPart
                o:Fire()
                noclip = true
            end
        end
    end
    if string.sub(msg, 1, 8) == (prefix.."unorbit") then
        lplayer.Character.HumanoidRootPart.Orbit:Destroy()
        noclip = false
    end
    if string.sub(msg, 1, 7) == (prefix.."fling ") then
        if string.sub(msg, 8) == "all" or string.sub(msg, 8) == "others" or string.sub(msg, 8) == "me" then
            lplayer.Character.HumanoidRootPart.CFrame = lplayer.Character.HumanoidRootPart.CFrame
        else
            for i,v in pairs(GetPlayer(string.sub(msg, 8))) do
                local y = Instance.new("RocketPropulsion")
                y.Parent = lplayer.Character.HumanoidRootPart
                y.CartoonFactor = 1
                y.MaxThrust = 800000
                y.MaxSpeed = 1000
                y.ThrustP = 200000
                y.Name = "Fling"
                game:GetService("Workspace").CurrentCamera.CameraSubject = game:GetService("Players")[v.Name].Character.Head
                y.Target = game:GetService("Players")[v.Name].Character.HumanoidRootPart
                y:Fire()
                noclip = true
            end
        end
    end
    if string.sub(msg, 1, 8) == (prefix.."unfling") then
        noclip = false
        lplayer.Character.HumanoidRootPart.Fling:Destroy()
        game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Head
        wait(0.4)
        lplayer.Character.HumanoidRootPart.Fling:Destroy()
    end
    if string.sub(msg, 1, 8) == (prefix.."fecheck") then
        if game:GetService("Workspace").FilteringEnabled == true then
            warn("FE is Enabled (Filtering Enabled)")
            game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "FE is Enabled";
                Text = "Filtering Enabled. Enjoy using Reviz Admin!";
            })
        else
            warn("FE is Disabled (Filtering Disabled) Consider using a different admin script.")
            game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "FE is Disabled";
                Text = "Filtering Disabled. Consider using a different admin script.";
            })
        end
    end
    if string.sub(msg, 1, 6) == (prefix.."void ") then
        for i,v in pairs(GetPlayer(string.sub(msg, 7))) do
            lplayer.Character.Humanoid.Name = 1
            local l = lplayer.Character["1"]:Clone()
            l.Parent = lplayer.Character
            l.Name = "Humanoid"
            wait(0.1)
            lplayer.Character["1"]:Destroy()
            game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
            lplayer.Character.Animate.Disabled = true
            wait(0.1)
            lplayer.Character.Animate.Disabled = false
            lplayer.Character.Humanoid.DisplayDistanceType = "None"
            for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
            lplayer.Character.Humanoid:EquipTool(v)
            end
            lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
            wait(0.2)
            lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
            wait(0.6)
            lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(999999999999999,0,999999999999999)
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Tools needed!";
            Text = "You need a tool in your backpack for this command!";
            })
        end
    end
    if string.sub(msg, 1, 7) == (prefix.."noclip") then
        noclip = true
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Noclip enabled";
        Text = "Type ;clip to disable";
        })
    end
    if string.sub(msg, 1, 5) == (prefix.."clip") then
        noclip = false
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Noclip disabled";
        Text = "Type ;noclip to enable";
        })
    end
    if string.sub(msg, 1, 7) == (prefix.."speed ") then
        lplayer.Character.Humanoid.WalkSpeed = (string.sub(msg, 8))
    end
    if string.sub(msg, 1, 4) == (prefix.."ws ") then
        lplayer.Character.Humanoid.WalkSpeed = (string.sub(msg, 5))
    end
    if string.sub(msg, 1, 11) == (prefix.."hipheight ") then
        lplayer.Character.Humanoid.HipHeight = (string.sub(msg, 12))
    end
    if string.sub(msg, 1, 4) == (prefix.."hh ") then
        lplayer.Character.Humanoid.HipHeight = (string.sub(msg, 5))
    end
    if string.sub(msg, 1, 11) == (prefix.."jumppower ") then
        lplayer.Character.Humanoid.JumpPower = (string.sub(msg, 12))
    end
    if string.sub(msg, 1, 4) == (prefix.."jp ") then
        lplayer.Character.Humanoid.JumpPower = (string.sub(msg, 5))
    end
    if string.sub(msg, 1, 8) == (prefix.."default") then
        lplayer.Character.Humanoid.JumpPower = 50
        lplayer.Character.Humanoid.WalkSpeed = 16
        lplayer.Character.Humanoid.HipHeight = 0
    end
    if string.sub(msg, 1, 7) == (prefix.."annoy ") then
        for i,v in pairs(GetPlayer(string.sub(msg, 8))) do
            annoying = true
            annplr = v
        end
    end
    if string.sub(msg, 1, 8) == (prefix.."unannoy") then
        annoying = false
    end
    if string.sub(msg, 1, 10) == (prefix.."headwalk ") then
        for i,v in pairs(GetPlayer(string.sub(msg, 11))) do
            hwalk = true
            hdwplr = v
        end
    end
    if string.sub(msg, 1, 11) == (prefix.."unheadwalk") then
        hwalk = false
    end
    if string.sub(msg, 1, 8) == (prefix.."nolimbs") then
        lplayer.Character["Left Leg"]:Destroy()
        lplayer.Character["Left Arm"]:Destroy()
        lplayer.Character["Right Leg"]:Destroy()
        lplayer.Character["Right Arm"]:Destroy()
    end
    if string.sub(msg, 1, 4) == (prefix.."god") then
        lplayer.Character.Humanoid.Name = 1
        local l = lplayer.Character["1"]:Clone()
        l.Parent = lplayer.Character
        l.Name = "Humanoid"
        wait(0.1)
        lplayer.Character["1"]:Destroy()
        game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
        lplayer.Character.Animate.Disabled = true
        wait(0.1)
        lplayer.Character.Animate.Disabled = false
        lplayer.Character.Humanoid.DisplayDistanceType = "None"
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "FE Godmode enabled";
        Text = "Use ;grespawn or ;respawn to remove";
        })
    end
    if string.sub(msg, 1, 9) == (prefix.."drophats") then
        for i,v in pairs(lplayer.Character:GetChildren()) do
            if (v:IsA("Accessory")) or (v:IsA("Hat")) then
                v.Parent = workspace
            end
        end
    end
    if string.sub(msg, 1, 9) == (prefix.."droptool") then
        for i,v in pairs(lplayer.Character:GetChildren()) do
            if (v:IsA("Tool")) then
                v.Parent = workspace
            end
        end
    end
    if string.sub(msg, 1, 10) == (prefix.."loopdhats") then
        droppinghats = true
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Loop Drop Enabled";
        Text = "Type ;unloopdhats to disable";
        })
    end
    if string.sub(msg, 1, 12) == (prefix.."unloopdhats") then
        droppinghats = false
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Loop Drop Disabled";
        Text = "Type ;loopdhats to enable.";
        })
    end
    if string.sub(msg, 1, 10) == (prefix.."loopdtool") then
        droppingtools = true
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Loop Drop Enabled";
        Text = "Type ;unloopdtool to disable";
        })
    end
    if string.sub(msg, 1, 12) == (prefix.."unloopdtool") then
        droppingtools = false
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Loop Drop Disabled";
        Text = "Type ;loopdtool to enable.";
        })
    end
    if string.sub(msg, 1, 10) == (prefix.."invisible") then -- Credit to Timeless
        Local = game:GetService('Players').LocalPlayer
        Char  = Local.Character
        touched,tpdback = false, false
        box = Instance.new('Part',workspace)
        box.Anchored = true
        box.CanCollide = true
        box.Size = Vector3.new(10,1,10)
        box.Position = Vector3.new(0,10000,0)
        box.Touched:connect(function(part)
            if (part.Parent.Name == Local.Name) then
                if touched == false then
                    touched = true
                    function apply()
                        if script.Disabled ~= true then
                            no = Char.HumanoidRootPart:Clone()
                            wait(.25)
                            Char.HumanoidRootPart:Destroy()
                            no.Parent = Char
                            Char:MoveTo(loc)
                            touched = false
                        end end
                    if Char then
                        apply()
                    end
                end
            end
        end)
        repeat wait() until Char
        loc = Char.HumanoidRootPart.Position
        Char:MoveTo(box.Position + Vector3.new(0,.5,0))
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Invisibility enabled!";
        Text = "Reset or use ;respawn to remove.";
        })
    end
    if string.sub(msg, 1, 6) == (prefix.."view ") then
        for i,v in pairs(GetPlayer(string.sub(msg, 7))) do
            if game:GetService("Players")[v.Name].Character.Humanoid then
                game:GetService("Workspace").CurrentCamera.CameraSubject = game:GetService("Players")[v.Name].Character.Humanoid
            else
                game:GetService("Workspace").CurrentCamera.CameraSubject = game:GetService("Players")[v.Name].Character.Head
            end
        end
    end
    if string.sub(msg, 1, 7) == (prefix.."unview") then
        if lplayer.Character.Humanoid then
            game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Humanoid
        else
            game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Head
        end
    end
    if string.sub(msg, 1, 6) == (prefix.."goto ") then
        for i,v in pairs(GetPlayer(string.sub(msg, 7))) do
            lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
        end
    end
    if string.sub(msg, 1, 4) == (prefix.."fly") then
    repeat wait() until lplayer and lplayer.Character and lplayer.Character:FindFirstChild('HumanoidRootPart') and lplayer.Character:FindFirstChild('Humanoid')
    repeat wait() until Mouse
   
    local T = lplayer.Character.HumanoidRootPart
    local CONTROL = {F = 0, B = 0, L = 0, R = 0}
    local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
    local SPEED = speedget
   
    local function fly()
        flying = true
        local BG = Instance.new('BodyGyro', T)
        local BV = Instance.new('BodyVelocity', T)
        BG.P = 9e4
        BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
        BG.cframe = T.CFrame
        BV.velocity = Vector3.new(0, 0.1, 0)
        BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
        spawn(function()
        repeat wait()
        lplayer.Character.Humanoid.PlatformStand = true
        if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
        SPEED = 50
        elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
        SPEED = 0
        end
        if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
        BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
        lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
        elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
        BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
        else
        BV.velocity = Vector3.new(0, 0.1, 0)
        end
        BG.cframe = workspace.CurrentCamera.CoordinateFrame
                until not flying
                CONTROL = {F = 0, B = 0, L = 0, R = 0}
                lCONTROL = {F = 0, B = 0, L = 0, R = 0}
                SPEED = 0
                BG:destroy()
                BV:destroy()
                lplayer.Character.Humanoid.PlatformStand = false
            end)
        end
    Mouse.KeyDown:connect(function(KEY)
        if KEY:lower() == 'w' then
            CONTROL.F = speedfly
        elseif KEY:lower() == 's' then
            CONTROL.B = -speedfly
        elseif KEY:lower() == 'a' then
            CONTROL.L = -speedfly
        elseif KEY:lower() == 'd' then
            CONTROL.R = speedfly
        end
    end)
    Mouse.KeyUp:connect(function(KEY)
        if KEY:lower() == 'w' then
            CONTROL.F = 0
        elseif KEY:lower() == 's' then
            CONTROL.B = 0
        elseif KEY:lower() == 'a' then
            CONTROL.L = 0
        elseif KEY:lower() == 'd' then
            CONTROL.R = 0
        end
    end)
    fly()
    end
    if string.sub(msg, 1, 6) == (prefix.."unfly") then
        flying = false
        lplayer.Character.Humanoid.PlatformStand = false
    end
    if string.sub(msg, 1, 6) == (prefix.."chat ") then
        game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer((string.sub(msg, 7)), "All")
    end
    if string.sub(msg, 1, 6) == (prefix.."spam ") then
        spamtext = (string.sub(msg, 7))
        spamming = true
    end
    if string.sub(msg, 1, 7) == (prefix.."unspam") then
        spamming = false
    end
    if string.sub(msg, 1, 10) == (prefix.."spamwait ") then
        spamdelay = (string.sub(msg, 11))
    end
    if string.sub(msg, 1, 8) == (prefix.."pmspam ") then
        for i,v in pairs(GetPlayer(string.sub(msg, 9))) do
            pmspammed = v.Name
            spammingpm = true
        end
    end
    if string.sub(msg, 1, 9) == (prefix.."unpmspam") then
        spammingpm = false
    end
    if string.sub(msg, 1, 9) == (prefix.."cfreeze ") then
        for i,v in pairs(GetPlayer(string.sub(msg, 10))) do
            v.Character["Left Leg"].Anchored = true
            v.Character["Left Arm"].Anchored = true
            v.Character["Right Leg"].Anchored = true
            v.Character["Right Arm"].Anchored = true
            v.Character.Torso.Anchored = true
            v.Character.Head.Anchored = true
        end
    end
    if string.sub(msg, 1, 11) == (prefix.."uncfreeze ") then
        for i,v in pairs(GetPlayer(string.sub(msg, 12))) do
            v.Character["Left Leg"].Anchored = false
            v.Character["Left Arm"].Anchored = false
            v.Character["Right Leg"].Anchored = false
            v.Character["Right Arm"].Anchored = false
            v.Character.Torso.Anchored = false
            v.Character.Head.Anchored = false
        end
    end
    if string.sub(msg, 1, 9) == (prefix.."unlockws") then
        local a = game:GetService("Workspace"):getChildren()
        for i = 1, #a do
            if a[i].className == "Part" then
                a[i].Locked = false
            elseif a[i].className == "Model" then
                local r = a[i]:getChildren()
                for i = 1, #r do
                    if r[i].className == "Part" then
                    r[i].Locked = false
                    end
                end
            end
        end
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Success!";
        Text = "Workspace unlocked. Use ;lockws to lock.";
        })
    end
    if string.sub(msg, 1, 7) == (prefix.."lockws") then
        local a = game:GetService("Workspace"):getChildren()
        for i = 1, #a do
            if a[i].className == "Part" then
                a[i].Locked = true
            elseif a[i].className == "Model" then
                local r = a[i]:getChildren()
                for i = 1, #r do
                    if r[i].className == "Part" then
                    r[i].Locked = true
                    end
                end
            end
        end
    end
    if string.sub(msg, 1, 7) == (prefix.."btools") then
        local Clone_T = Instance.new("HopperBin",lplayer.Backpack)
        Clone_T.BinType = "Clone"
        local Destruct = Instance.new("HopperBin",lplayer.Backpack)
        Destruct.BinType = "Hammer"
        local Hold_T = Instance.new("HopperBin",lplayer.Backpack)
        Hold_T.BinType = "Grab"
    end
    if string.sub(msg, 1, 7) == (prefix.."pstand") then
        lplayer.Character.Humanoid.PlatformStand = true
    end
    if string.sub(msg, 1, 9) == (prefix.."unpstand") then
        lplayer.Character.Humanoid.PlatformStand = false
    end
    if string.sub(msg, 1, 10) == (prefix.."blockhead") then
        lplayer.Character.Head.Mesh:Destroy()
    end
    if string.sub(msg, 1, 4) == (prefix.."sit") then
        lplayer.Character.Humanoid.Sit = true
    end
    if string.sub(msg, 1, 10) == (prefix.."bringobj ") then
        local function bringobjw()
        for i,obj in ipairs(game:GetService("Workspace"):GetDescendants()) do
        if obj.Name == (string.sub(msg, 11)) then
        obj.CFrame = lplayer.Character.HumanoidRootPart.CFrame
        obj.CanCollide = false
        obj.Transparency = 0.7
        wait()
        obj.CFrame = lplayer.Character["Left Leg"].CFrame
        wait()
        obj.CFrame = lplayer.Character["Right Leg"].CFrame
        wait()
        obj.CFrame = lplayer.Character["Head"].CFrame
        end
        end
        end
        while wait() do
            bringobjw()
        end
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "BringObj";
        Text = "BringObj enabled.";
        })
    end
    if string.sub(msg, 1, 7) == (prefix.."wsvis ") then
        vis = (string.sub(msg, 8))
        local a = game:GetService("Workspace"):GetDescendants()
        for i = 1, #a do
            if a[i].className == "Part" then
                a[i].Transparency = vis
            elseif a[i].className == "Model" then
                local r = a[i]:getChildren()
                for i = 1, #r do
                    if r[i].className == "Part" then
                    r[i].Transparency = vis
                    end
                end
            end
        end
    end
    if string.sub(msg, 1, 11) == (prefix.."hypertotal") then
        loadstring(game:GetObjects("rbxassetid://1255063809")[1].Source)()
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Success!";
        Text = "HyperTotal GUI Loaded!";
        })
    end
    if string.sub(msg, 1, 5) == (prefix.."cmds") then
        CMDSFRAME.Visible = true
    end
    if string.sub(msg, 1, 10) == (prefix.."rmeshhats") then
        for i,v in pairs(lplayer.Character:GetChildren()) do
            if (v:IsA("Accessory")) or (v:IsA("Hat")) then
                v.Handle.Mesh:Destroy()
            end
        end
    end
    if string.sub(msg, 1, 10) == (prefix.."blockhats") then
        for i,v in pairs(lplayer.Character:GetChildren()) do
            if (v:IsA("Accessory")) or (v:IsA("Hat")) then
                v.Handle.Mesh:Destroy()
            end
        end
    end
    if string.sub(msg, 1, 10) == (prefix.."rmeshtool") then
        for i,v in pairs(lplayer.Character:GetChildren()) do
            if (v:IsA("Tool")) then
                v.Handle.Mesh:Destroy()
            end
        end
    end
    if string.sub(msg, 1, 10) == (prefix.."blocktool") then
        for i,v in pairs(lplayer.Character:GetChildren()) do
            if (v:IsA("Tool")) then
                v.Handle.Mesh:Destroy()
            end
        end
    end
    if string.sub(msg, 1, 8) == (prefix.."spinner") then
        local p = Instance.new("RocketPropulsion")
        p.Parent = lplayer.Character.HumanoidRootPart
        p.Name = "Spinner"
        p.Target = lplayer.Character["Left Arm"]
        p:Fire()
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Spinner enabled";
        Text = "Type ;nospinner to disable.";
        })
    end
    if string.sub(msg, 1, 10) == (prefix.."nospinner") then
        lplayer.Character.HumanoidRootPart.Spinner:Destroy()
    end
    if string.sub(msg, 1, 7) == (prefix.."reachd") then
        for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren())do
            if v:isA("Tool") then
                local a = Instance.new("SelectionBox",v.Handle)
                a.Adornee = v.Handle
                v.Handle.Size = Vector3.new(0.5,0.5,60)
                v.GripPos = Vector3.new(0,0,0)
                lplayer.Character.Humanoid:UnequipTools()
            end
        end
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Reach applied!";
        Text = "Applied to equipped sword. Use ;noreach to disable.";
        })
    end
    if string.sub(msg, 1, 7) == (prefix.."reach ") then
        for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren())do
            if v:isA("Tool") then
                handleSize = v.Handle.Size
                wait()
                local a = Instance.new("SelectionBox",v.Handle)
                a.Name = "a"
                a.Adornee = v.Handle
                v.Handle.Size = Vector3.new(0.5,0.5,(string.sub(msg, 8)))
                v.GripPos = Vector3.new(0,0,0)
                lplayer.Character.Humanoid:UnequipTools()
            end
        end
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Reach applied!";
        Text = "Applied to equipped sword. Use ;noreach to disable.";
        })
    end
    if string.sub(msg, 1, 8) == (prefix.."noreach") then
        for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren())do
            if v:isA("Tool") then
                v.Handle.a:Destroy()
                v.Handle.Size = handleSize
            end
        end
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Reach removed!";
        Text = "Removed reach from equipped sword.";
        })
    end
    if string.sub(msg, 1, 7) == (prefix.."rkill ") then
        for i,v in pairs(GetPlayer(string.sub(msg, 8)))do
            lplayer.Character.Humanoid.Name = 1
            local l = lplayer.Character["1"]:Clone()
            l.Parent = lplayer.Character
            l.Name = "Humanoid"
            wait(0.1)
            lplayer.Character["1"]:Destroy()
            game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
            lplayer.Character.Animate.Disabled = true
            wait(0.1)
            lplayer.Character.Animate.Disabled = false
            lplayer.Character.Humanoid.DisplayDistanceType = "None"
            for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
            lplayer.Character.Humanoid:EquipTool(v)
            end
            wait(0.1)
            lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
            wait(0.2)
            lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
            wait(0.5)
            lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-100000,10,-100000))
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Tools needed!";
            Text = "You need a tool in your backpack for this command!";
            })
        end
    end
    if string.sub(msg, 1, 7) == (prefix.."tp me ") then
        for i,v in pairs(GetPlayer(string.sub(msg, 8))) do
            lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
        end
    end
    if string.sub(msg, 1, 8) == (prefix.."cbring ") then
        if (string.sub(msg, 9)) == "all" or (string.sub(msg, 9)) == "All" or (string.sub(msg, 9)) == "ALL" then
            cbringall = true
        else
            for i,v in pairs(GetPlayer(string.sub(msg, 9))) do
                brplr = v.Name
            end
        end
        cbring = true
    end
    if string.sub(msg, 1, 9) == (prefix.."uncbring") then
        cbring = false
        cbringall = false
    end
    if string.sub(msg, 1, 6) == (prefix.."swap ") then
        for i,v in pairs(GetPlayer(string.sub(msg, 7))) do
            local NOWPLR = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
            local NOW = lplayer.Character.HumanoidRootPart.CFrame
            lplayer.Character.Humanoid.Name = 1
            local l = lplayer.Character["1"]:Clone()
            l.Parent = lplayer.Character
            l.Name = "Humanoid"
            wait(0.1)
            lplayer.Character["1"]:Destroy()
            game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
            lplayer.Character.Animate.Disabled = true
            wait(0.1)
            lplayer.Character.Animate.Disabled = false
            lplayer.Character.Humanoid.DisplayDistanceType = "None"
            for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
            lplayer.Character.Humanoid:EquipTool(v)
            end
            local function tp(player,player2)
            local char1,char2=player.Character,player2.Character
            if char1 and char2 then
            char1:MoveTo(char2.Head.Position)
            end
            end
            wait(0.1)
            lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
            wait(0.2)
            lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
            wait(0.5)
            lplayer.Character.HumanoidRootPart.CFrame = NOW
            wait(0.6)
            tp(lplayer, game:GetService("Players")[v.Name])
            wait(0.4)
            lplayer.Character.HumanoidRootPart.CFrame = NOWPLR
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Tools needed!";
            Text = "You need a tool in your backpack for this command!";
            })
        end
    end
    if string.sub(msg, 1, 8) == (prefix.."glitch ") then
        for i,v in pairs(GetPlayer(string.sub(msg, 9))) do
            lplayer.Character.Humanoid.Name = 1
            local l = lplayer.Character["1"]:Clone()
            l.Parent = lplayer.Character
            l.Name = "Humanoid"
            wait(0.1)
            lplayer.Character["1"]:Destroy()
            game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
            lplayer.Character.Animate.Disabled = true
            wait(0.1)
            lplayer.Character.Animate.Disabled = false
            lplayer.Character.Humanoid.DisplayDistanceType = "None"
            for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
            lplayer.Character.Humanoid:EquipTool(v)
            end
            lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
            wait(0.3)
            lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
            wait(0.4)
            b = Instance.new("BodyForce")
            b.Parent = lplayer.Character.HumanoidRootPart
            b.Name = "Glitch"
            b.Force = Vector3.new(100000000,5000,0)
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Tools needed!";
            Text = "You need a tool in your backpack for this command!";
            })
        end
    end
    if string.sub(msg, 1, 9) == (prefix.."unglitch") then
        lplayer.Character.HumanoidRootPart.Glitch:Destroy()
        lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(10000,0,10000)
        b = Instance.new("BodyForce")
        b.Parent = lplayer.Character.HumanoidRootPart
        b.Name = "unGlitch"
        b.Force = Vector3.new(0,-5000000,0)
        wait(2)
        lplayer.Character.HumanoidRootPart.unGlitch:Destroy()
    end
    if string.sub(msg, 1, 9) == (prefix.."grespawn") then
        lplayer.Character.Humanoid.Health = 0
        wait(1)
        lplayer.Character.Head.CFrame = CFrame.new(1000000,0,1000000)
        lplayer.Character.Torso.CFrame = CFrame.new(1000000,0,1000000)
    end
    if string.sub(msg, 1, 9) == (prefix.."explorer") then
        loadstring(game:GetObjects("rbxassetid://492005721")[1].Source)()
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Success!";
        Text = "DEX Explorer has loaded.";
        })
    end
    if string.sub(msg, 1, 6) == (prefix.."anim ") then
        local Anim = Instance.new("Animation")
        Anim.AnimationId = "rbxassetid://"..(string.sub(msg, 7))
        local track = lplayer.Character.Humanoid:LoadAnimation(Anim)
        track:Play(.1, 1, 1)
    end
    if string.sub(msg, 1, 8) == (prefix.."animgui") then
        loadstring(game:GetObjects("rbxassetid://1202558084")[1].Source)()
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Success!";
        Text = "Energize Animations GUI has loaded.";
        })
    end
    if string.sub(msg, 1, 8) == (prefix.."savepos") then
        saved = lplayer.Character.HumanoidRootPart.CFrame
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Position Saved";
        Text = "Use ;loadpos to return to saved position.";
        })
    end
    if string.sub(msg, 1, 8) == (prefix.."loadpos") then
        lplayer.Character.HumanoidRootPart.CFrame = saved
    end
    if string.sub(msg, 1, 6) == (prefix.."bang ") then
        for i,v in pairs(GetPlayer(string.sub(msg, 7))) do
            local Anim2 = Instance.new("Animation")
            Anim2.AnimationId = "rbxassetid://148840371"
            local track2 = lplayer.Character.Humanoid:LoadAnimation(Anim2)
            track2:Play(.1, 1, 1)
            bplrr = v.Name
            banpl = true
        end
    end
    if string.sub(msg, 1, 7) == (prefix.."unbang") then
        banpl = false
    end
    if string.sub(msg, 1, 10) == (prefix.."bringmod ") then
        local function bringmodw()
        for i,obj in ipairs(game:GetService("Workspace"):GetDescendants()) do
        if obj.Name == (string.sub(msg, 11)) then
        for i,ch in pairs(obj:GetDescendants()) do
        if (ch:IsA("BasePart")) then
        ch.CFrame = lplayer.Character.HumanoidRootPart.CFrame
        ch.CanCollide = false
        ch.Transparency = 0.7
        wait()
        ch.CFrame = lplayer.Character["Left Leg"].CFrame
        wait()
        ch.CFrame = lplayer.Character["Right Leg"].CFrame
        wait()
        ch.CFrame = lplayer.Character["Head"].CFrame
        end
        end
        end
        end
        end
        while wait() do
            bringmodw()
        end
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "BringMod";
        Text = "BringMod enabled.";
        })
    end
    if string.sub(msg, 1, 8) == (prefix.."respawn") then
        local mod = Instance.new('Model', workspace) mod.Name = 're '..lplayer.Name
        local hum = Instance.new('Humanoid', mod)
        local ins = Instance.new('Part', mod) ins.Name = 'Torso' ins.CanCollide = false ins.Transparency = 1
        lplayer.Character = mod
    end
    if string.sub(msg, 1, 9) == (prefix.."shutdown") then
        game:GetService'RunService'.Stepped:Connect(function()
        pcall(function()
            for i,v in pairs(game:GetService'Players':GetPlayers()) do
                if v.Character ~= nil and v.Character:FindFirstChild'Head' then
                    for _,x in pairs(v.Character.Head:GetChildren()) do
                        if x:IsA'Sound' then x.Playing = true x.CharacterSoundEvent:FireServer(true, true) end
                    end
                end
            end
        end)
        end)
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Attempting Shutdown";
        Text = "Shutdown Attempt has begun.";
        })
    end
    if string.sub(msg, 1, 8) == (prefix.."delobj ") then
        objtodel = (string.sub(msg, 9))
        for i,v in pairs(game:GetService("Workspace"):GetDescendants()) do
            if v.Name == objtodel then
                v:Destroy()
            end
        end
    end
    if string.sub(msg, 1, 8) == (prefix.."getplrs") then
        for i,v in pairs(game:GetService("Players"):GetPlayers())do
            print(v)
        end
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Printed";
        Text = "Players have been printed to console. (F9)";
        })
    end
    if string.sub(msg, 1, 9) == (prefix.."deldecal") then
        for i,v in pairs(game:GetService("Workspace"):GetDescendants())do
            if (v:IsA("Decal")) then
                v:Destroy()
            end
        end
    end
    if string.sub(msg, 1, 11) == (prefix.."opfinality") then
        loadstring(game:GetObjects("rbxassetid://1294358929")[1].Source)()
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Success!";
        Text = "OpFinality GUI has loaded.";
        })
    end
    if string.sub(msg, 1, 8) == (prefix.."remotes") then
        remotes = true
        added = true
        game.DescendantAdded:connect(function(rmt)
        if added == true then
        if remotes == true then
        if rmt:IsA("RemoteEvent") then
        print("A RemoteEvent was added!")
        print(" game." .. rmt:GetFullName() .. " | RemoteEvent")
        print(" game." .. rmt:GetFullName() .. " | RemoteEvent", 247, 0, 0, true)
        end end end
        end)
        game.DescendantAdded:connect(function(rmtfnctn)
        if added == true then
        if remotes == true then
        if rmtfnctn:IsA("RemoteFunction") then
        warn("A RemoteFunction was added!")
        warn(" game." .. rmtfnctn:GetFullName() .. " | RemoteFunction")
        print(" game." .. rmtfnctn:GetFullName() .. " | RemoteFunction", 5, 102, 198, true)
        end end end
        end)
       
        game.DescendantAdded:connect(function(bndfnctn)
        if added == true then
        if binds == true then
        if bndfnctn:IsA("BindableFunction") then
        print("A BindableFunction was added!")
        print(" game." .. bndfnctn:GetFullName() .. " | BindableFunction")
        print(" game." .. bndfnctn:GetFullName() .. " | BindableFunction", 239, 247, 4, true)
        end end end
        end)
       
        game.DescendantAdded:connect(function(bnd)
        if added == true then
        if binds == true then
        if bnd:IsA("BindableEvent") then
        warn("A BindableEvent was added!")
        warn(" game." .. bnd:GetFullName() .. " | BindableEvent")
        print(" game." .. bnd:GetFullName() .. " | BindableEvent", 13, 193, 22, true)
        end end end
        end)
       
       
        if binds == true then
        for i,v in pairs(game:GetDescendants()) do
        if v:IsA("BindableFunction") then
        print(" game." .. v:GetFullName() .. " | BindableFunction")
        print(" game." .. v:GetFullName() .. " | BindableFunction", 239, 247, 4, true)
        end end
        for i,v in pairs(game:GetDescendants()) do
        if v:IsA("BindableEvent") then
        warn(" game." .. v:GetFullName() .. " | BindableEvent")
        print(" game." .. v:GetFullName() .. " | BindableEvent", 13, 193, 22, true)
        end end
        else
        print("Off")
        end
        if remotes == true then
        for i,v in pairs(game:GetDescendants()) do
        if v:IsA("RemoteFunction") then
        warn(" game." .. v:GetFullName() .. " | RemoteFunction")
        print(" game." .. v:GetFullName() .. " | RemoteFunction", 5, 102, 198, true)
        end end
        wait()
        for i,v in pairs(game:GetDescendants()) do
        if v:IsA("RemoteEvent") then
        print(" game." .. v:GetFullName() .. " | RemoteEvent")
        print(" game." .. v:GetFullName() .. " | RemoteEvent", 247, 0, 0, true)
        end end
        else
        print("Off")
        end
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Printing Remotes";
        Text = "Type ;noremotes to disable.";
        })
    end
    if string.sub(msg, 1, 10) == (prefix.."noremotes") then
        remotes = false
        added = false
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Printing Remotes Disabled";
        Text = "Type ;remotes to enable.";
        })
    end
    if string.sub(msg, 1, 10) == (prefix.."tpdefault") then
        spin = false
        followed = false
        traill = false
        noclip = false
        annoying = false
        hwalk = false
        cbringing = false
    end
    if string.sub(msg, 1, 8) == (prefix.."stopsit") then
        stopsitting = true
    end
    if string.sub(msg, 1, 6) == (prefix.."gosit") then
        stopsitting = false
    end
    if string.sub(msg, 1, 8) == (prefix.."version") then
        print(adminversion)
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Version";
        Text = adminversion;
        })
    end
    if string.sub(msg, 1, 8) == (prefix.."clicktp") then
        clickgoto = true
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Click TP";
        Text = "Press E to teleport to mouse position, ;noclicktp to stop";
        })
    end
    if string.sub(msg, 1, 9) == (prefix.."clickdel") then
        clickdel = true
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Click Delete";
        Text = "Press E to delete part at mouse, ;noclickdel to stop";
        })
    end
    if string.sub(msg, 1, 11) == (prefix.."noclickdel") then
        clickdel = false
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Click Delete";
        Text = "Click delete has been disabled.";
        })
    end
    if string.sub(msg, 1, 10) == (prefix.."noclicktp") then
        clickgoto = false
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Click TP";
        Text = "Click TP has been disabled.";
        })
    end
    if string.sub(msg, 1, 8) == (prefix.."toolson") then
        gettingtools = true
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Tools Enabled";
        Text = "Automatically colleting tools dropped.";
        })
    end
    if string.sub(msg, 1, 9) == (prefix.."toolsoff") then
        gettingtools = false
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Tools Disabled";
        Text = "Click TP has been disabled.";
        })
    end
    if string.sub(msg, 1, 10) == (prefix.."delcmdbar") then
        ScreenGui:Destroy()
    end
    if string.sub(msg, 1, 6) == (prefix.."reset") then
        lplayer.Character.Head:Destroy()
    end
    if string.sub(msg, 1, 7) == (prefix.."state ") then
        statechosen = string.sub(msg, 8)
        changingstate = true
    end
    if string.sub(msg, 1, 9) == (prefix.."gravity ") then
        game:GetService("Workspace").Gravity = string.sub(msg, 10)
    end
    if string.sub(msg, 1, 10) == (prefix.."looprhats") then
        removingmeshhats = true
    end
    if string.sub(msg, 1, 12) == (prefix.."unlooprhats") then
        removingmeshhats = false
    end
    if string.sub(msg, 1, 10) == (prefix.."looprtool") then
        removingmeshtool = true
    end
    if string.sub(msg, 1, 12) == (prefix.."unlooprtool") then
        removingmeshtool = false
    end
    if string.sub(msg, 1, 10) == (prefix.."givetool ") then
        for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
            if v:IsA("Tool") then
                for i,player in pairs(GetPlayer(string.sub(msg, 11))) do
                    v.Parent = player.Character
                end
            end
        end
    end
    if string.sub(msg, 1, 14) == (prefix.."givealltools ") then
        for i,v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetDescendants()) do
            if v:IsA("Tool") then
                v.Parent = lplayer.Character
                wait()
                for i,player in pairs(GetPlayer(string.sub(msg, 15))) do
                    v.Parent = player.Character
                end
            end
        end
    end
    if string.sub(msg, 1, 5) == (prefix.."age ") then
        for i,player in pairs(GetPlayer(string.sub(msg, 6))) do
            game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(player.Name.." Account Age: "..player.AccountAge.." days!", "All")
        end
    end
    if string.sub(msg, 1, 4) == (prefix.."id ") then
        for i,player in pairs(GetPlayer(string.sub(msg, 5))) do
            game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(player.Name.." Account ID: "..player.UserId, "All")
        end
    end
    if string.sub(msg, 1, 6) == (prefix..".age ") then
        for i,player in pairs(GetPlayer(string.sub(msg, 7))) do
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = player.AccountAge.." Days";
            Text = "Account age of "..player.Name;
            })
        end
    end
    if string.sub(msg, 1, 5) == (prefix..".id ") then
        for i,player in pairs(GetPlayer(string.sub(msg, 6))) do
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = player.UserId.." ID";
            Text = "Account ID of "..player.Name;
            })
        end
    end
    if string.sub(msg, 1, 7) == (prefix.."gameid") then
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Game ID";
        Text = "Game ID: ".. game.GameId;
        })
    end
    if string.sub(msg, 1, 4) == (prefix.."pgs") then
        local pgscheck = game:GetService("Workspace"):PGSIsEnabled()
        if pgscheck == true then
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "PGSPhysicsSolverEnabled";
            Text = "PGS is Enabled!";
            })
        else
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "PGSPhysicsSolverEnabled";
            Text = "PGS is Disabled!";
            })
        end
    end
    if string.sub(msg, 1, 12) == (prefix.."removeinvis") then
        for i,v in pairs(game:GetService("Workspace"):GetDescendants()) do
            if v:IsA("Part") then
                if v.Transparency == 1 then
                    if v.Name ~= "HumanoidRootPart" then
                        v:Destroy()
                    end
                end
            end
        end
    end
    if string.sub(msg, 1, 10) == (prefix.."removefog") then
        game:GetService("Lighting").FogStart = 0
        game:GetService("Lighting").FogEnd = 9999999999999
    end
    if string.sub(msg, 1, 8) == (prefix.."disable") then
        lplayer.Character.Humanoid.Parent = lplayer
    end
    if string.sub(msg, 1, 7) == (prefix.."enable") then
        lplayer.Humanoid.Parent = lplayer.Character
    end
    if string.sub(msg, 1, 8) == (prefix.."prefix ") then
        prefix = (string.sub(msg, 9, 9))
        wait(0.1)
        change()
        wait(0.1)
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Prefix changed!";
        Text = "Prefix is now "..prefix..". Use ;resetprefix to reset to ;";
        })
    end
    if string.sub(msg, 1, 12) == (";resetprefix") then
        prefix = ";"
        wait(0.1)
        change()
        wait(0.1)
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Prefix changed!";
        Text = "Prefix is now "..prefix..". Make sure it's one key!";
        })
    end
    if string.sub(msg, 1, 10) == (prefix.."flyspeed ") then
        speedfly = string.sub(msg, 11)
        wait()
        change()
    end
    if string.sub(msg, 1, 8) == (prefix.."carpet ") then
        for i,v in pairs(GetPlayer(string.sub(msg, 9))) do
            local Anim3 = Instance.new("Animation")
            Anim3.AnimationId = "rbxassetid://282574440"
            local track3 = lplayer.Character.Humanoid:LoadAnimation(Anim3)
            track3:Play(.1, 1, 1)
            bplrr = v.Name
            banpl = true
        end
    end
    if string.sub(msg, 1, 9) == (prefix.."uncarpet") then
        banpl = false
    end
    if string.sub(msg, 1, 7) == (prefix.."stare ") then
        for i,v in pairs(GetPlayer(string.sub(msg, 8))) do
            staring = true
            stareplr = v
        end
    end
    if string.sub(msg, 1, 8) == (prefix.."unstare") then
        staring = false
    end
    if string.sub(msg, 1, 8) == (prefix.."logchat") then
        chatlogs = true
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "LogChat enabled";
        Text = "Now logging all player chat.";
        })
    end
    if string.sub(msg, 1, 10) == (prefix.."unlogchat") then
        chatlogs = false
        game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "LogChat disabled";
        Text = "Stopped logging all player chat.";
        })
    end
    if string.sub(msg, 1, 7) == (prefix.."fixcam") then
        game:GetService("Workspace").CurrentCamera:Destroy()
        wait(0.1)
        game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Humanoid
        game:GetService("Workspace").CurrentCamera.CameraType = "Custom"
        lplayer.CameraMinZoomDistance = 0.5
        lplayer.CameraMaxZoomDistance = 400
        lplayer.CameraMode = "Classic"
    end
    if string.sub(msg, 1, 8) == (prefix.."unstate") then
        changingstate = false
    end
end)
 
local function tp()
    for i, player in ipairs(game:GetService("Players"):GetPlayers()) do
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            if player.Name == brplr then
                player.Character.HumanoidRootPart.CFrame = lplayer.Character.HumanoidRootPart.CFrame + lplayer.Character.HumanoidRootPart.CFrame.lookVector * 2
            end
        end
    end
end
local function tpall()
    for i, player in ipairs(game:GetService("Players"):GetPlayers()) do
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            player.Character.HumanoidRootPart.CFrame = lplayer.Character.HumanoidRootPart.CFrame + lplayer.Character.HumanoidRootPart.CFrame.lookVector * 3
        end
    end
end
spawn(function()
    while wait(spamdelay) do
        if spamming == true then
            game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(spamtext, "All")
        end
    end
end)
spawn(function()
    while wait(spamdelay) do
        if spammingpm == true then
            game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer("/w "..pmspammed.." @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@", "All")
        end
    end
end)
spawn(function()
    while wait() do
        if cbring == true then
            tp()
        end
    end
end)
spawn(function()
    while wait() do
        if cbringall == true then
            tpall()
        end
    end
end)
 
Mouse.KeyDown:connect(function(Key)
    if Key == prefix then
        CMDBAR:CaptureFocus()
    end
end)
 
CMDBAR.FocusLost:connect(function(enterPressed)
    if enterPressed then
        if string.sub(CMDBAR.Text, 1, 5) == ("kill ") then
            if string.sub(CMDBAR.Text, 6) == "me" then
                lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(100000,0,100000)
            else
                for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6)))do
                    local NOW = lplayer.Character.HumanoidRootPart.CFrame
                    lplayer.Character.Humanoid.Name = 1
                    local l = lplayer.Character["1"]:Clone()
                    l.Parent = lplayer.Character
                    l.Name = "Humanoid"
                    wait(0.1)
                    lplayer.Character["1"]:Destroy()
                    game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
                    lplayer.Character.Animate.Disabled = true
                    wait(0.1)
                    lplayer.Character.Animate.Disabled = false
                    lplayer.Character.Humanoid.DisplayDistanceType = "None"
                    for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
                    lplayer.Character.Humanoid:EquipTool(v)
                    end
                    local function tp(player,player2)
                    local char1,char2=player.Character,player2.Character
                    if char1 and char2 then
                    char1:MoveTo(char2.Head.Position)
                    end
                    end
                    wait(0.1)
                    lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
                    wait(0.2)
                    lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
                    wait(0.5)
                    lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-100000,10,-100000))
                    wait(0.7)
                    tp(lplayer,game:GetService("Players")[v.Name])
                    wait(0.7)
                    lplayer.Character.HumanoidRootPart.CFrame = NOW
                    game:GetService("StarterGui"):SetCore("SendNotification", {
                    Title = "Tools needed!";
                    Text = "You need a tool in your backpack for this command!";
                    })
                end
            end
        end
        if string.sub(CMDBAR.Text, 1, 6) == ("bring ") then
            for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7)))do
                local NOW = lplayer.Character.HumanoidRootPart.CFrame
                lplayer.Character.Humanoid.Name = 1
                local l = lplayer.Character["1"]:Clone()
                l.Parent = lplayer.Character
                l.Name = "Humanoid"
                wait(0.1)
                lplayer.Character["1"]:Destroy()
                game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
                lplayer.Character.Animate.Disabled = true
                wait(0.1)
                lplayer.Character.Animate.Disabled = false
                lplayer.Character.Humanoid.DisplayDistanceType = "None"
                for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
                lplayer.Character.Humanoid:EquipTool(v)
                end
                local function tp(player,player2)
                local char1,char2=player.Character,player2.Character
                if char1 and char2 then
                char1.HumanoidRootPart.CFrame = char2.HumanoidRootPart.CFrame
                end
                end
                local function getout(player,player2)
                local char1,char2=player.Character,player2.Character
                if char1 and char2 then
                char1:MoveTo(char2.Head.Position)
                end
                end
                tp(game:GetService("Players")[v.Name], lplayer)
                wait(0.2)
                tp(game:GetService("Players")[v.Name], lplayer)
                wait(0.5)
                lplayer.Character.HumanoidRootPart.CFrame = NOW
                wait(0.5)
                getout(lplayer, game:GetService("Players")[v.Name])
                wait(0.3)
                lplayer.Character.HumanoidRootPart.CFrame = NOW
                game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "Tools needed!";
                Text = "You need a tool in your backpack for this command!";
                })
            end
        end
        if string.sub(CMDBAR.Text, 1, 5) == ("spin ") then
            for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
                lplayer.Character.Humanoid.Name = 1
                local l = lplayer.Character["1"]:Clone()
                l.Parent = lplayer.Character
                l.Name = "Humanoid"
                wait(0.1)
                lplayer.Character["1"]:Destroy()
                game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
                lplayer.Character.Animate.Disabled = true
                wait(0.1)
                lplayer.Character.Animate.Disabled = false
                lplayer.Character.Humanoid.DisplayDistanceType = "None"
                for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
                lplayer.Character.Humanoid:EquipTool(v)
                end
                lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
                spinplr = v
                wait(0.5)
                spin = true
                game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "Tools needed!";
                Text = "You need a tool in your backpack for this command!";
                })
            end
        end
        if string.sub(CMDBAR.Text, 1, 6) == ("unspin") then
            spin = false
        end
        if string.sub(CMDBAR.Text, 1, 7) == ("attach ") then
            for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 8))) do
                lplayer.Character.Humanoid.Name = 1
                local l = lplayer.Character["1"]:Clone()
                l.Parent = lplayer.Character
                l.Name = "Humanoid"
                wait(0.1)
                lplayer.Character["1"]:Destroy()
                game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
                lplayer.Character.Animate.Disabled = true
                wait(0.1)
                lplayer.Character.Animate.Disabled = false
                lplayer.Character.Humanoid.DisplayDistanceType = "None"
                for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
                lplayer.Character.Humanoid:EquipTool(v)
                end
                lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
                wait(0.3)
                lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
                attplr = v
                game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "Tools needed!";
                Text = "You need a tool in your backpack for this command!";
                })
            end
        end
        if string.sub(CMDBAR.Text, 1, 9) == ("unattach ") then
            for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 10))) do
                local function getout(player,player2)
                local char1,char2=player.Character,player2.Character
                if char1 and char2 then
                char1:MoveTo(char2.Head.Position)
                end
                end
                getout(lplayer, game:GetService("Players")[v.Name])
            end
        end
        if string.sub(CMDBAR.Text, 1, 7) == ("follow ") then
            for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 8))) do
                followed = true
                flwplr = v
            end
        end
        if string.sub(CMDBAR.Text, 1, 8) == ("unfollow") then
            followed = false
        end
        if string.sub(CMDBAR.Text, 1, 9) == ("freefall ") then
            for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 10))) do
                local NOW = lplayer.Character.HumanoidRootPart.CFrame
                lplayer.Character.Humanoid.Name = 1
                local l = lplayer.Character["1"]:Clone()
                l.Parent = lplayer.Character
                l.Name = "Humanoid"
                wait(0.1)
                lplayer.Character["1"]:Destroy()
                game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
                lplayer.Character.Animate.Disabled = true
                wait(0.1)
                lplayer.Character.Animate.Disabled = false
                lplayer.Character.Humanoid.DisplayDistanceType = "None"
                for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
                lplayer.Character.Humanoid:EquipTool(v)
                end
                lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
                wait(0.2)
                lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
                wait(0.6)
                lplayer.Character.HumanoidRootPart.CFrame = NOW
                wait(0.6)
                lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(0,50000,0)
                game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "Tools needed!";
                Text = "You need a tool in your backpack for this command!";
                })
            end
        end
        if string.sub(CMDBAR.Text, 1, 6) == ("trail ") then
            for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7))) do
                traill = true
                trlplr = v
            end
        end
        if string.sub(CMDBAR.Text, 1, 7) == ("untrail") then
            traill = false
        end
        if string.sub(CMDBAR.Text, 1, 6) == ("orbit ") then
            if string.sub(CMDBAR.Text, 7) == "all" or string.sub(CMDBAR.Text, 7) == "others" or string.sub(CMDBAR.Text, 7) == "me" then
                lplayer.Character.HumanoidRootPart.CFrame = lplayer.Character.HumanoidRootPart.CFrame
            else
                for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7))) do
                    local o = Instance.new("RocketPropulsion")
                    o.Parent = lplayer.Character.HumanoidRootPart
                    o.Name = "Orbit"
                    o.Target = game:GetService("Players")[v.Name].Character.HumanoidRootPart
                    o:Fire()
                    noclip = true
                end
            end
        end
        if string.sub(CMDBAR.Text, 1, 7) == ("unorbit") then
            lplayer.Character.HumanoidRootPart.Orbit:Destroy()
            noclip = false
        end
        if string.sub(CMDBAR.Text, 1, 6) == ("fling ") then
            if string.sub(CMDBAR.Text, 7) == "all" or string.sub(CMDBAR.Text, 7) == "others" or string.sub(CMDBAR.Text, 7) == "me" then
                lplayer.Character.HumanoidRootPart.CFrame = lplayer.Character.HumanoidRootPart.CFrame
            else
                for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7))) do
                    local y = Instance.new("RocketPropulsion")
                    y.Parent = lplayer.Character.HumanoidRootPart
                    y.CartoonFactor = 1
                    y.MaxThrust = 800000
                    y.MaxSpeed = 1000
                    y.ThrustP = 200000
                    y.Name = "Fling"
                    game:GetService("Workspace").CurrentCamera.CameraSubject = game:GetService("Players")[v.Name].Character.Head
                    y.Target = game:GetService("Players")[v.Name].Character.HumanoidRootPart
                    y:Fire()
                    noclip = true
                end
            end
        end
        if string.sub(CMDBAR.Text, 1, 7) == ("unfling") then
            noclip = false
            lplayer.Character.HumanoidRootPart.Fling:Destroy()
            game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Head
            wait(0.4)
            lplayer.Character.HumanoidRootPart.Fling:Destroy()
        end
        if string.sub(CMDBAR.Text, 1, 7) == ("fecheck") then
            if game:GetService("Workspace").FilteringEnabled == true then
                warn("FE is Enabled (Filtering Enabled)")
                game:GetService("StarterGui"):SetCore("SendNotification", {
                    Title = "FE is Enabled";
                    Text = "Filtering Enabled. Enjoy using Reviz Admin!";
                })
            else
                warn("FE is Disabled (Filtering Disabled) Consider using a different admin script.")
                game:GetService("StarterGui"):SetCore("SendNotification", {
                    Title = "FE is Disabled";
                    Text = "Filtering Disabled. Consider using a different admin script.";
                })
            end
        end
        if string.sub(CMDBAR.Text, 1, 5) == ("void ") then
            for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
                lplayer.Character.Humanoid.Name = 1
                local l = lplayer.Character["1"]:Clone()
                l.Parent = lplayer.Character
                l.Name = "Humanoid"
                wait(0.1)
                lplayer.Character["1"]:Destroy()
                game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
                lplayer.Character.Animate.Disabled = true
                wait(0.1)
                lplayer.Character.Animate.Disabled = false
                lplayer.Character.Humanoid.DisplayDistanceType = "None"
                for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
                lplayer.Character.Humanoid:EquipTool(v)
                end
                lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
                wait(0.2)
                lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
                wait(0.6)
                lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(999999999999999,0,999999999999999)
                game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "Tools needed!";
                Text = "You need a tool in your backpack for this command!";
                })
            end
        end
        if string.sub(CMDBAR.Text, 1, 6) == ("noclip") then
            noclip = true
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Noclip enabled";
            Text = "Type ;clip to disable";
            })
        end
        if string.sub(CMDBAR.Text, 1, 4) == ("clip") then
            noclip = false
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Noclip disabled";
            Text = "Type ;noclip to enable";
            })
        end
        if string.sub(CMDBAR.Text, 1, 6) == ("speed ") then
            lplayer.Character.Humanoid.WalkSpeed = (string.sub(CMDBAR.Text, 7))
        end
        if string.sub(CMDBAR.Text, 1, 3) == ("ws ") then
            lplayer.Character.Humanoid.WalkSpeed = (string.sub(CMDBAR.Text, 4))
        end
        if string.sub(CMDBAR.Text, 1, 10) == ("hipheight ") then
            lplayer.Character.Humanoid.HipHeight = (string.sub(CMDBAR.Text, 11))
        end
        if string.sub(CMDBAR.Text, 1, 3) == ("hh ") then
            lplayer.Character.Humanoid.HipHeight = (string.sub(CMDBAR.Text, 4))
        end
        if string.sub(CMDBAR.Text, 1, 10) == ("jumppower ") then
            lplayer.Character.Humanoid.JumpPower = (string.sub(CMDBAR.Text, 11))
        end
        if string.sub(CMDBAR.Text, 1, 3) == ("jp ") then
            lplayer.Character.Humanoid.JumpPower = (string.sub(CMDBAR.Text, 4))
        end
        if string.sub(CMDBAR.Text, 1, 7) == ("default") then
            lplayer.Character.Humanoid.JumpPower = 50
            lplayer.Character.Humanoid.WalkSpeed = 16
            lplayer.Character.Humanoid.HipHeight = 0
        end
        if string.sub(CMDBAR.Text, 1, 6) == ("annoy ") then
            for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7))) do
                annoying = true
                annplr = v
            end
        end
        if string.sub(CMDBAR.Text, 1, 7) == ("unannoy") then
            annoying = false
        end
        if string.sub(CMDBAR.Text, 1, 9) == ("headwalk ") then
            for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 10))) do
                hwalk = true
                hdwplr = v
            end
        end
        if string.sub(CMDBAR.Text, 1, 10) == ("unheadwalk") then
            hwalk = false
        end
        if string.sub(CMDBAR.Text, 1, 7) == ("nolimbs") then
            lplayer.Character["Left Leg"]:Destroy()
            lplayer.Character["Left Arm"]:Destroy()
            lplayer.Character["Right Leg"]:Destroy()
            lplayer.Character["Right Arm"]:Destroy()
        end
        if string.sub(CMDBAR.Text, 1, 3) == ("god") then
            lplayer.Character.Humanoid.Name = 1
            local l = lplayer.Character["1"]:Clone()
            l.Parent = lplayer.Character
            l.Name = "Humanoid"
            wait(0.1)
            lplayer.Character["1"]:Destroy()
            game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
            lplayer.Character.Animate.Disabled = true
            wait(0.1)
            lplayer.Character.Animate.Disabled = false
            lplayer.Character.Humanoid.DisplayDistanceType = "None"
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "FE Godmode enabled";
            Text = "Use ;grespawn or ;respawn to remove.";
            })
        end
        if string.sub(CMDBAR.Text, 1, 8) == ("drophats") then
            for i,v in pairs(lplayer.Character:GetChildren()) do
                if (v:IsA("Accessory")) or (v:IsA("Hat")) then
                    v.Parent = workspace
                end
            end
        end
        if string.sub(CMDBAR.Text, 1, 8) == ("droptool") then
            for i,v in pairs(lplayer.Character:GetChildren()) do
                if (v:IsA("Tool")) then
                    v.Parent = workspace
                end
            end
        end
        if string.sub(CMDBAR.Text, 1, 9) == ("loopdhats") then
            droppinghats = true
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Loop Drop Enabled";
            Text = "Type ;unloopdhats to disable";
            })
        end
        if string.sub(CMDBAR.Text, 1, 11) == ("unloopdhats") then
            droppinghats = false
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Loop Drop Disabled";
            Text = "Type ;loopdhats to enable.";
            })
        end
        if string.sub(CMDBAR.Text, 1, 9) == ("loopdtool") then
            droppingtools = true
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Loop Drop Enabled";
            Text = "Type ;unloopdtool to disable";
            })
        end
        if string.sub(CMDBAR.Text, 1, 11) == ("unloopdtool") then
            droppingtools = false
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Loop Drop Disabled";
            Text = "Type ;loopdtool to enable.";
            })
        end
        if string.sub(CMDBAR.Text, 1, 9) == ("invisible") then -- Credit to Timeless
            Local = game:GetService('Players').LocalPlayer
            Char  = Local.Character
            touched,tpdback = false, false
            box = Instance.new('Part',workspace)
            box.Anchored = true
            box.CanCollide = true
            box.Size = Vector3.new(10,1,10)
            box.Position = Vector3.new(0,10000,0)
            box.Touched:connect(function(part)
                if (part.Parent.Name == Local.Name) then
                    if touched == false then
                        touched = true
                        function apply()
                            if script.Disabled ~= true then
                                no = Char.HumanoidRootPart:Clone()
                                wait(.25)
                                Char.HumanoidRootPart:Destroy()
                                no.Parent = Char
                                Char:MoveTo(loc)
                                touched = false
                            end end
                        if Char then
                            apply()
                        end
                    end
                end
            end)
            repeat wait() until Char
            loc = Char.HumanoidRootPart.Position
            Char:MoveTo(box.Position + Vector3.new(0,.5,0))
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Invisibility enabled!";
            Text = "Reset or use ;respawn to remove.";
            })
        end
        if string.sub(CMDBAR.Text, 1, 5) == ("view ") then
            for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
                if game:GetService("Players")[v.Name].Character.Humanoid then
                    game:GetService("Workspace").CurrentCamera.CameraSubject = game:GetService("Players")[v.Name].Character.Humanoid
                else
                    game:GetService("Workspace").CurrentCamera.CameraSubject = game:GetService("Players")[v.Name].Character.Head
                end
            end
        end
        if string.sub(CMDBAR.Text, 1, 6) == ("unview") then
            if lplayer.Character.Humanoid then
                game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Humanoid
            else
                game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Head
            end
        end
        if string.sub(CMDBAR.Text, 1, 5) == ("goto ") then
            for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
                lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
            end
        end
        if string.sub(CMDBAR.Text, 1, 3) == ("fly") then
        repeat wait() until lplayer and lplayer.Character and lplayer.Character:FindFirstChild('HumanoidRootPart') and lplayer.Character:FindFirstChild('Humanoid')
        repeat wait() until Mouse
       
        local T = lplayer.Character.HumanoidRootPart
        local CONTROL = {F = 0, B = 0, L = 0, R = 0}
        local lCONTROL = {F = 0, B = 0, L = 0, R = 0}
        local SPEED = speedget
       
        local function fly()
            flying = true
            local BG = Instance.new('BodyGyro', T)
            local BV = Instance.new('BodyVelocity', T)
            BG.P = 9e4
            BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
            BG.cframe = T.CFrame
            BV.velocity = Vector3.new(0, 0.1, 0)
            BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
            spawn(function()
            repeat wait()
            lplayer.Character.Humanoid.PlatformStand = true
            if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 then
            SPEED = 50
            elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0) and SPEED ~= 0 then
            SPEED = 0
            end
            if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 then
            BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
            lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
            elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and SPEED ~= 0 then
            BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
            else
            BV.velocity = Vector3.new(0, 0.1, 0)
            end
            BG.cframe = workspace.CurrentCamera.CoordinateFrame
                    until not flying
                    CONTROL = {F = 0, B = 0, L = 0, R = 0}
                    lCONTROL = {F = 0, B = 0, L = 0, R = 0}
                    SPEED = 0
                    BG:destroy()
                    BV:destroy()
                    lplayer.Character.Humanoid.PlatformStand = false
                end)
            end
        Mouse.KeyDown:connect(function(KEY)
            if KEY:lower() == 'w' then
                CONTROL.F = speedfly
            elseif KEY:lower() == 's' then
                CONTROL.B = -speedfly
            elseif KEY:lower() == 'a' then
                CONTROL.L = -speedfly
            elseif KEY:lower() == 'd' then
                CONTROL.R = speedfly
            end
        end)
        Mouse.KeyUp:connect(function(KEY)
            if KEY:lower() == 'w' then
                CONTROL.F = 0
            elseif KEY:lower() == 's' then
                CONTROL.B = 0
            elseif KEY:lower() == 'a' then
                CONTROL.L = 0
            elseif KEY:lower() == 'd' then
                CONTROL.R = 0
            end
        end)
        fly()
        end
        if string.sub(CMDBAR.Text, 1, 5) == ("unfly") then
            flying = false
            lplayer.Character.Humanoid.PlatformStand = false
        end
        if string.sub(CMDBAR.Text, 1, 5) == ("chat ") then
            game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer((string.sub(CMDBAR.Text, 6)), "All")
        end
        if string.sub(CMDBAR.Text, 1, 5) == ("spam ") then
            spamtext = (string.sub(CMDBAR.Text, 6))
            spamming = true
        end
        if string.sub(CMDBAR.Text, 1, 6) == ("unspam") then
            spamming = false
        end
        if string.sub(CMDBAR.Text, 1, 9) == ("spamwait ") then
            spamdelay = (string.sub(CMDBAR.Text, 10))
        end
        if string.sub(CMDBAR.Text, 1, 7) == ("pmspam ") then
            for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 8))) do
                pmspammed = v.Name
                spammingpm = true
            end
        end
        if string.sub(CMDBAR.Text, 1, 8) == ("unpmspam") then
            spammingpm = false
        end
        if string.sub(CMDBAR.Text, 1, 8) == ("cfreeze ") then
            for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 9))) do
                v.Character["Left Leg"].Anchored = true
                v.Character["Left Arm"].Anchored = true
                v.Character["Right Leg"].Anchored = true
                v.Character["Right Arm"].Anchored = true
                v.Character.Torso.Anchored = true
                v.Character.Head.Anchored = true
            end
        end
        if string.sub(CMDBAR.Text, 1, 10) == ("uncfreeze ") then
            for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 11))) do
                v.Character["Left Leg"].Anchored = false
                v.Character["Left Arm"].Anchored = false
                v.Character["Right Leg"].Anchored = false
                v.Character["Right Arm"].Anchored = false
                v.Character.Torso.Anchored = false
                v.Character.Head.Anchored = false
            end
        end
        if string.sub(CMDBAR.Text, 1, 8) == ("unlockws") then
            local a = game:GetService("Workspace"):getChildren()
            for i = 1, #a do
                if a[i].className == "Part" then
                    a[i].Locked = false
                elseif a[i].className == "Model" then
                    local r = a[i]:getChildren()
                    for i = 1, #r do
                        if r[i].className == "Part" then
                        r[i].Locked = false
                        end
                    end
                end
            end
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Success!";
            Text = "Workspace unlocked. Use ;lockws to lock.";
            })
        end
        if string.sub(CMDBAR.Text, 1, 6) == ("lockws") then
            local a = game:GetService("Workspace"):getChildren()
            for i = 1, #a do
                if a[i].className == "Part" then
                    a[i].Locked = true
                elseif a[i].className == "Model" then
                    local r = a[i]:getChildren()
                    for i = 1, #r do
                        if r[i].className == "Part" then
                        r[i].Locked = true
                        end
                    end
                end
            end
        end
        if string.sub(CMDBAR.Text, 1, 6) == ("btools") then
            local Clone_T = Instance.new("HopperBin",lplayer.Backpack)
            Clone_T.BinType = "Clone"
            local Destruct = Instance.new("HopperBin",lplayer.Backpack)
            Destruct.BinType = "Hammer"
            local Hold_T = Instance.new("HopperBin",lplayer.Backpack)
            Hold_T.BinType = "Grab"
        end
        if string.sub(CMDBAR.Text, 1, 6) == ("pstand") then
            lplayer.Character.Humanoid.PlatformStand = true
        end
        if string.sub(CMDBAR.Text, 1, 8) == ("unpstand") then
            lplayer.Character.Humanoid.PlatformStand = false
        end
        if string.sub(CMDBAR.Text, 1, 9) == ("blockhead") then
            lplayer.Character.Head.Mesh:Destroy()
        end
        if string.sub(CMDBAR.Text, 1, 3) == ("sit") then
            lplayer.Character.Humanoid.Sit = true
        end
        if string.sub(CMDBAR.Text, 1, 9) == ("bringobj ") then
            local function bringobjw()
            for i,obj in ipairs(game:GetService("Workspace"):GetDescendants()) do
            if obj.Name == (string.sub(CMDBAR.Text, 10)) then
            obj.CFrame = lplayer.Character.HumanoidRootPart.CFrame
            obj.CanCollide = false
            obj.Transparency = 0.7
            wait()
            obj.CFrame = lplayer.Character["Left Leg"].CFrame
            wait()
            obj.CFrame = lplayer.Character["Right Leg"].CFrame
            wait()
            obj.CFrame = lplayer.Character["Head"].CFrame
            end
            end
            end
            while wait() do
                bringobjw()
            end
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "BringObj";
            Text = "BringObj enabled.";
            })
        end
        if string.sub(CMDBAR.Text, 1, 6) == ("wsvis ") then
            vis = (string.sub(CMDBAR.Text, 7))
            local a = game:GetService("Workspace"):GetDescendants()
            for i = 1, #a do
                if a[i].className == "Part" then
                    a[i].Transparency = vis
                elseif a[i].className == "Model" then
                    local r = a[i]:getChildren()
                    for i = 1, #r do
                        if r[i].className == "Part" then
                        r[i].Transparency = vis
                        end
                    end
                end
            end
        end
        if string.sub(CMDBAR.Text, 1, 10) == ("hypertotal") then
            loadstring(game:GetObjects("rbxassetid://1255063809")[1].Source)()
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Success!";
            Text = "HyperTotal GUI Loaded!";
            })
        end
        if string.sub(CMDBAR.Text, 1, 4) == ("cmds") then
            CMDSFRAME.Visible = true
        end
        if string.sub(CMDBAR.Text, 1, 9) == ("rmeshhats") then
            for i,v in pairs(lplayer.Character:GetChildren()) do
                if (v:IsA("Accessory")) or (v:IsA("Hat")) then
                    v.Handle.Mesh:Destroy()
                end
            end
        end
        if string.sub(CMDBAR.Text, 1, 9) == ("blockhats") then
            for i,v in pairs(lplayer.Character:GetChildren()) do
                if (v:IsA("Accessory")) or (v:IsA("Hat")) then
                    v.Handle.Mesh:Destroy()
                end
            end
        end
        if string.sub(CMDBAR.Text, 1, 9) == ("rmeshtool") then
            for i,v in pairs(lplayer.Character:GetChildren()) do
                if (v:IsA("Tool")) then
                    v.Handle.Mesh:Destroy()
                end
            end
        end
        if string.sub(CMDBAR.Text, 1, 9) == ("blocktool") then
            for i,v in pairs(lplayer.Character:GetChildren()) do
                if (v:IsA("Tool")) then
                    v.Handle.Mesh:Destroy()
                end
            end
        end
        if string.sub(CMDBAR.Text, 1, 7) == ("spinner") then
            local p = Instance.new("RocketPropulsion")
            p.Parent = lplayer.Character.HumanoidRootPart
            p.Name = "Spinner"
            p.Target = lplayer.Character["Left Arm"]
            p:Fire()
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Spinner enabled";
            Text = "Type ;nospinner to disable.";
            })
        end
        if string.sub(CMDBAR.Text, 1, 9) == ("nospinner") then
            lplayer.Character.HumanoidRootPart.Spinner:Destroy()
        end
        if string.sub(CMDBAR.Text, 1, 6) == ("reachd") then
            for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren())do
                if v:isA("Tool") then
                    local a = Instance.new("SelectionBox",v.Handle)
                    a.Adornee = v.Handle
                    v.Handle.Size = Vector3.new(0.5,0.5,60)
                    v.GripPos = Vector3.new(0,0,0)
                    lplayer.Character.Humanoid:UnequipTools()
                end
            end
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Reach applied!";
            Text = "Applied to equipped sword. Use ;noreach to disable.";
            })
        end
        if string.sub(CMDBAR.Text, 1, 6) == ("reach ") then
            for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren())do
                if v:isA("Tool") then
                    local a = Instance.new("SelectionBox",v.Handle)
                    a.Name = "Reach"
                    a.Adornee = v.Handle
                    v.Handle.Size = Vector3.new(0.5,0.5,(string.sub(CMDBAR.Text, 7)))
                    v.GripPos = Vector3.new(0,0,0)
                    lplayer.Character.Humanoid:UnequipTools()
                end
            end
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Reach applied!";
            Text = "Applied to equipped sword. Use ;noreach to disable.";
            })
        end
        if string.sub(CMDBAR.Text, 1, 7) == ("noreach") then
            for i,v in pairs(game:GetService'Players'.LocalPlayer.Character:GetChildren())do
                if v:isA("Tool") then
                    v.Handle.Reach:Destroy()
                end
            end
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Reach removed!";
            Text = "Removed reach from equipped sword.";
            })
        end
        if string.sub(CMDBAR.Text, 1, 6) == ("rkill ") then
            for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7)))do
                lplayer.Character.Humanoid.Name = 1
                local l = lplayer.Character["1"]:Clone()
                l.Parent = lplayer.Character
                l.Name = "Humanoid"
                wait(0.1)
                lplayer.Character["1"]:Destroy()
                game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
                lplayer.Character.Animate.Disabled = true
                wait(0.1)
                lplayer.Character.Animate.Disabled = false
                lplayer.Character.Humanoid.DisplayDistanceType = "None"
                for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
                lplayer.Character.Humanoid:EquipTool(v)
                end
                wait(0.1)
                lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
                wait(0.2)
                lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
                wait(0.5)
                lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-100000,10,-100000))
                game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "Tools needed!";
                Text = "You need a tool in your backpack for this command!";
                })
            end
        end
        if string.sub(CMDBAR.Text, 1, 6) == ("tp me ") then
            for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7))) do
                lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
            end
        end
        if string.sub(CMDBAR.Text, 1, 7) == ("cbring ") then
            if (string.sub(CMDBAR.Text, 8)) == "all" or (string.sub(CMDBAR.Text, 8)) == "All" or (string.sub(CMDBAR.Text, 8)) == "ALL" then
                cbringall = true
            else
                for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 8))) do
                    brplr = v.Name
                end
            end
            cbring = true
        end
        if string.sub(CMDBAR.Text, 1, 8) == ("uncbring") then
            cbring = false
            cbringall = false
        end
        if string.sub(CMDBAR.Text, 1, 5) == ("swap ") then
            for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
                local NOWPLR = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
                local NOW = lplayer.Character.HumanoidRootPart.CFrame
                lplayer.Character.Humanoid.Name = 1
                local l = lplayer.Character["1"]:Clone()
                l.Parent = lplayer.Character
                l.Name = "Humanoid"
                wait(0.1)
                lplayer.Character["1"]:Destroy()
                game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
                lplayer.Character.Animate.Disabled = true
                wait(0.1)
                lplayer.Character.Animate.Disabled = false
                lplayer.Character.Humanoid.DisplayDistanceType = "None"
                for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
                lplayer.Character.Humanoid:EquipTool(v)
                end
                local function tp(player,player2)
                local char1,char2=player.Character,player2.Character
                if char1 and char2 then
                char1:MoveTo(char2.Head.Position)
                end
                end
                wait(0.1)
                lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
                wait(0.2)
                lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character.HumanoidRootPart.CFrame
                wait(0.5)
                lplayer.Character.HumanoidRootPart.CFrame = NOW
                wait(0.6)
                tp(lplayer, game:GetService("Players")[v.Name])
                wait(0.4)
                lplayer.Character.HumanoidRootPart.CFrame = NOWPLR
                game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "Tools needed!";
                Text = "You need a tool in your backpack for this command!";
                })
            end
        end
        if string.sub(CMDBAR.Text, 1, 7) == ("glitch ") then
            for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 8))) do
                lplayer.Character.Humanoid.Name = 1
                local l = lplayer.Character["1"]:Clone()
                l.Parent = lplayer.Character
                l.Name = "Humanoid"
                wait(0.1)
                lplayer.Character["1"]:Destroy()
                game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character
                lplayer.Character.Animate.Disabled = true
                wait(0.1)
                lplayer.Character.Animate.Disabled = false
                lplayer.Character.Humanoid.DisplayDistanceType = "None"
                for i,v in pairs(game:GetService'Players'.LocalPlayer.Backpack:GetChildren())do
                lplayer.Character.Humanoid:EquipTool(v)
                end
                lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
                wait(0.3)
                lplayer.Character.HumanoidRootPart.CFrame = game:GetService("Players")[v.Name].Character["Left Arm"].CFrame
                wait(0.4)
                b = Instance.new("BodyForce")
                b.Parent = lplayer.Character.HumanoidRootPart
                b.Name = "Glitch"
                b.Force = Vector3.new(100000000,5000,0)
                game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "Tools needed!";
                Text = "You need a tool in your backpack for this command!";
                })
            end
        end
        if string.sub(CMDBAR.Text, 1, 8) == ("unglitch") then
            lplayer.Character.HumanoidRootPart.Glitch:Destroy()
            lplayer.Character.HumanoidRootPart.CFrame = CFrame.new(10000,0,10000)
            b = Instance.new("BodyForce")
            b.Parent = lplayer.Character.HumanoidRootPart
            b.Name = "unGlitch"
            b.Force = Vector3.new(0,-5000000,0)
            wait(2)
            lplayer.Character.HumanoidRootPart.unGlitch:Destroy()
        end
        if string.sub(CMDBAR.Text, 1, 8) == ("grespawn") then
            lplayer.Character.Humanoid.Health = 0
            wait(1)
            lplayer.Character.Head.CFrame = CFrame.new(1000000,0,1000000)
            lplayer.Character.Torso.CFrame = CFrame.new(1000000,0,1000000)
        end
        if string.sub(CMDBAR.Text, 1, 8) == ("explorer") then
            loadstring(game:GetObjects("rbxassetid://492005721")[1].Source)()
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Success!";
            Text = "DEX Explorer has loaded.";
            })
        end
        if string.sub(CMDBAR.Text, 1, 5) == ("anim ") then
            local Anim = Instance.new("Animation")
            Anim.AnimationId = "rbxassetid://"..(string.sub(CMDBAR.Text, 6))
            local track = lplayer.Character.Humanoid:LoadAnimation(Anim)
            track:Play(.1, 1, 1)
        end
        if string.sub(CMDBAR.Text, 1, 7) == ("animgui") then
            loadstring(game:GetObjects("rbxassetid://1202558084")[1].Source)()
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Success!";
            Text = "Energize Animations GUI has loaded.";
            })
        end
        if string.sub(CMDBAR.Text, 1, 7) == ("savepos") then
            saved = lplayer.Character.HumanoidRootPart.CFrame
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Position Saved";
            Text = "Use ;loadpos to return to saved position.";
            })
        end
        if string.sub(CMDBAR.Text, 1, 7) == ("loadpos") then
            lplayer.Character.HumanoidRootPart.CFrame = saved
        end
        if string.sub(CMDBAR.Text, 1, 5) == ("bang ") then
            for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
                local Anim2 = Instance.new("Animation")
                Anim2.AnimationId = "rbxassetid://148840371"
                local track2 = lplayer.Character.Humanoid:LoadAnimation(Anim2)
                track2:Play(.1, 1, 1)
                bplrr = v.Name
                banpl = true
            end
        end
        if string.sub(CMDBAR.Text, 1, 6) == ("unbang") then
            banpl = false
        end
        if string.sub(CMDBAR.Text, 1, 9) == ("bringmod ") then
            local function bringmodw()
            for i,obj in ipairs(game:GetService("Workspace"):GetDescendants()) do
            if obj.Name == (string.sub(CMDBAR.Text, 10)) then
            for i,ch in pairs(obj:GetDescendants()) do
            if (ch:IsA("BasePart")) then
            ch.CFrame = lplayer.Character.HumanoidRootPart.CFrame
            ch.CanCollide = false
            ch.Transparency = 0.7
            wait()
            ch.CFrame = lplayer.Character["Left Leg"].CFrame
            wait()
            ch.CFrame = lplayer.Character["Right Leg"].CFrame
            wait()
            ch.CFrame = lplayer.Character["Head"].CFrame
            end
            end
            end
            end
            end
            while wait() do
                bringmodw()
            end
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "BringMod";
            Text = "BringMod enabled.";
            })
        end
        if string.sub(CMDBAR.Text, 1, 7) == ("respawn") then
            local mod = Instance.new('Model', workspace) mod.Name = 're '..lplayer.Name
            local hum = Instance.new('Humanoid', mod)
            local ins = Instance.new('Part', mod) ins.Name = 'Torso' ins.CanCollide = false ins.Transparency = 1
            lplayer.Character = mod
        end
        if string.sub(CMDBAR.Text, 1, 8) == ("shutdown") then
            game:GetService'RunService'.Stepped:Connect(function()
            pcall(function()
                for i,v in pairs(game:GetService'Players':GetPlayers()) do
                    if v.Character ~= nil and v.Character:FindFirstChild'Head' then
                        for _,x in pairs(v.Character.Head:GetChildren()) do
                            if x:IsA'Sound' then x.Playing = true x.CharacterSoundEvent:FireServer(true, true) end
                        end
                    end
                end
            end)
            end)
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Attempting Shutdown";
            Text = "Shutdown Attempt has begun.";
            })
        end
        if string.sub(CMDBAR.Text, 1, 7) == ("delobj ") then
            objtodel = (string.sub(CMDBAR.Text, 8))
            for i,v in pairs(game:GetService("Workspace"):GetDescendants()) do
                if v.Name == objtodel then
                    v:Destroy()
                end
            end
        end
        if string.sub(CMDBAR.Text, 1, 7) == ("getplrs") then
            for i,v in pairs(game:GetService("Players"):GetPlayers())do
                print(v)
            end
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Printed";
            Text = "Players have been printed to console. (F9)";
            })
        end
        if string.sub(CMDBAR.Text, 1, 8) == ("deldecal") then
            for i,v in pairs(game:GetService("Workspace"):GetDescendants())do
                if (v:IsA("Decal")) then
                    v:Destroy()
                end
            end
        end
        if string.sub(CMDBAR.Text, 1, 10) == ("opfinality") then
            loadstring(game:GetObjects("rbxassetid://1294358929")[1].Source)()
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Success!";
            Text = "OpFinality GUI has loaded.";
            })
        end
        if string.sub(CMDBAR.Text, 1, 7) == ("remotes") then
            remotes = true
            added = true
            game.DescendantAdded:connect(function(rmt)
            if added == true then
            if remotes == true then
            if rmt:IsA("RemoteEvent") then
            print("A RemoteEvent was added!")
            print(" game." .. rmt:GetFullName() .. " | RemoteEvent")
            print(" game." .. rmt:GetFullName() .. " | RemoteEvent", 247, 0, 0, true)
            end end end
            end)
            game.DescendantAdded:connect(function(rmtfnctn)
            if added == true then
            if remotes == true then
            if rmtfnctn:IsA("RemoteFunction") then
            warn("A RemoteFunction was added!")
            warn(" game." .. rmtfnctn:GetFullName() .. " | RemoteFunction")
            print(" game." .. rmtfnctn:GetFullName() .. " | RemoteFunction", 5, 102, 198, true)
            end end end
            end)
           
            game.DescendantAdded:connect(function(bndfnctn)
            if added == true then
            if binds == true then
            if bndfnctn:IsA("BindableFunction") then
            print("A BindableFunction was added!")
            print(" game." .. bndfnctn:GetFullName() .. " | BindableFunction")
            print(" game." .. bndfnctn:GetFullName() .. " | BindableFunction", 239, 247, 4, true)
            end end end
            end)
           
            game.DescendantAdded:connect(function(bnd)
            if added == true then
            if binds == true then
            if bnd:IsA("BindableEvent") then
            warn("A BindableEvent was added!")
            warn(" game." .. bnd:GetFullName() .. " | BindableEvent")
            print(" game." .. bnd:GetFullName() .. " | BindableEvent", 13, 193, 22, true)
            end end end
            end)
           
           
            if binds == true then
            for i,v in pairs(game:GetDescendants()) do
            if v:IsA("BindableFunction") then
            print(" game." .. v:GetFullName() .. " | BindableFunction")
            print(" game." .. v:GetFullName() .. " | BindableFunction", 239, 247, 4, true)
            end end
            for i,v in pairs(game:GetDescendants()) do
            if v:IsA("BindableEvent") then
            warn(" game." .. v:GetFullName() .. " | BindableEvent")
            print(" game." .. v:GetFullName() .. " | BindableEvent", 13, 193, 22, true)
            end end
            else
            print("Off")
            end
            if remotes == true then
            for i,v in pairs(game:GetDescendants()) do
            if v:IsA("RemoteFunction") then
            warn(" game." .. v:GetFullName() .. " | RemoteFunction")
            print(" game." .. v:GetFullName() .. " | RemoteFunction", 5, 102, 198, true)
            end end
            wait()
            for i,v in pairs(game:GetDescendants()) do
            if v:IsA("RemoteEvent") then
            print(" game." .. v:GetFullName() .. " | RemoteEvent")
            print(" game." .. v:GetFullName() .. " | RemoteEvent", 247, 0, 0, true)
            end end
            else
            print("Off")
            end
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Printing Remotes";
            Text = "Type ;noremotes to disable.";
            })
        end
        if string.sub(CMDBAR.Text, 1, 9) == ("noremotes") then
            remotes = false
            added = false
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Printing Remotes Disabled";
            Text = "Type ;remotes to enable.";
            })
        end
        if string.sub(CMDBAR.Text, 1, 9) == ("tpdefault") then
            spin = false
            followed = false
            traill = false
            noclip = false
            annoying = false
            hwalk = false
            cbringing = false
        end
        if string.sub(CMDBAR.Text, 1, 7) == ("stopsit") then
            stopsitting = true
        end
        if string.sub(CMDBAR.Text, 1, 5) == ("gosit") then
            stopsitting = false
        end
        if string.sub(CMDBAR.Text, 1, 7) == ("version") then
            print(adminversion)
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Version";
            Text = adminversion;
            })
        end
        if string.sub(CMDBAR.Text, 1, 7) == ("clicktp") then
            clickgoto = true
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Click TP";
            Text = "Press E to teleport to mouse position";
            })
        end
        if string.sub(CMDBAR.Text, 1, 9) == ("noclicktp") then
            clickgoto = false
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Click TP";
            Text = "Click TP has been disabled.";
            })
        end
        if string.sub(CMDBAR.Text, 1, 7) == ("toolson") then
            gettingtools = true
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Tools Enabled";
            Text = "Automatically colleting tools dropped.";
            })
        end
        if string.sub(CMDBAR.Text, 1, 8) == ("toolsoff") then
            gettingtools = false
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Tools Disabled";
            Text = "Click TP has been disabled.";
            })
        end
        if string.sub(CMDBAR.Text, 1, 9) == ("delcmdbar") then
            ScreenGui:Destroy()
        end
        if string.sub(CMDBAR.Text, 1, 5) == ("reset") then
            lplayer.Character.Head:Destroy()
        end
        if string.sub(CMDBAR.Text, 1, 6) == ("state ") then
            statechosen = string.sub(CMDBAR.Text, 7)
            changingstate = true
        end
        if string.sub(CMDBAR.Text, 1, 8) == ("gravity ") then
            game:GetService("Workspace").Gravity = string.sub(CMDBAR.Text, 9)
        end
        if string.sub(CMDBAR.Text, 1, 9) == ("looprhats") then
        removingmeshhats = true
        end
        if string.sub(CMDBAR.Text, 1, 11) == ("unlooprhats") then
            removingmeshhats = false
        end
        if string.sub(CMDBAR.Text, 1, 9) == ("looprtool") then
            removingmeshtool = true
        end
        if string.sub(CMDBAR.Text, 1, 11) == ("unlooprtool") then
            removingmeshtool = false
        end
        if string.sub(CMDBAR.Text, 1, 9) == ("givetool ") then
            for i,v in pairs(game:GetService("Players").LocalPlayer.Character:GetDescendants()) do
                if v:IsA("Tool") then
                    for i,player in pairs(GetPlayer(string.sub(CMDBAR.Text, 10))) do
                        v.Parent = player.Character
                    end
                end
            end
        end
        if string.sub(CMDBAR.Text, 1, 4) == ("age ") then
            for i,player in pairs(GetPlayer(string.sub(CMDBAR.Text, 5))) do
                game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(player.Name.." Account Age: "..player.AccountAge.." days!", "All")
            end
        end
        if string.sub(CMDBAR.Text, 1, 3) == ("id ") then
            for i,player in pairs(GetPlayer(string.sub(CMDBAR.Text, 4))) do
                game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(player.Name.." Account ID: "..player.UserId, "All")
            end
        end
        if string.sub(CMDBAR.Text, 1, 5) == (".age ") then
            for i,player in pairs(GetPlayer(string.sub(CMDBAR.Text, 6))) do
                game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = player.AccountAge.." Days";
                Text = "Account age of "..player.Name;
                })
            end
        end
        if string.sub(CMDBAR.Text, 1, 4) == (".id ") then
            for i,player in pairs(GetPlayer(string.sub(CMDBAR.Text, 5))) do
                game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = player.UserId.." ID";
                Text = "Account ID of "..player.Name;
                })
            end
        end
        if string.sub(CMDBAR.Text, 1, 6) == ("gameid") then
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Game ID";
            Text = "Game ID: ".. game.GameId;
            })
        end
        if string.sub(CMDBAR.Text, 1, 3) == ("pgs") then
            local pgscheck = game:GetService("Workspace"):PGSIsEnabled()
            if pgscheck == true then
                game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "PGSPhysicsSolverEnabled";
                Text = "PGS is Enabled!";
                })
            else
                game:GetService("StarterGui"):SetCore("SendNotification", {
                Title = "PGSPhysicsSolverEnabled";
                Text = "PGS is Disabled!";
                })
            end
        end
        if string.sub(CMDBAR.Text, 1, 11) == ("removeinvis") then
            for i,v in pairs(game:GetService("Workspace"):GetDescendants()) do
                if v:IsA("Part") then
                    if v.Transparency == 1 then
                        if v.Name ~= "HumanoidRootPart" then
                            v:Destroy()
                        end
                    end
                end
            end
        end
        if string.sub(CMDBAR.Text, 1, 9) == ("removefog") then
            game:GetService("Lighting").FogStart = 0
            game:GetService("Lighting").FogEnd = 9999999999999
        end
        if string.sub(CMDBAR.Text, 1, 7) == ("disable") then
            lplayer.Character.Humanoid.Parent = lplayer
        end
        if string.sub(CMDBAR.Text, 1, 6) == ("enable") then
            lplayer.Humanoid.Parent = lplayer.Character
        end
        if string.sub(CMDBAR.Text, 1, 13) == ("givealltools ") then
            for i,v in pairs(game:GetService("Players").LocalPlayer.Backpack:GetDescendants()) do
                if v:IsA("Tool") then
                    v.Parent = lplayer.Character
                    wait()
                    for i,player in pairs(GetPlayer(string.sub(CMDBAR.Text, 14))) do
                        v.Parent = player.Character
                    end
                end
            end
        end
        if string.sub(CMDBAR.Text, 1, 9) == ("flyspeed ") then
            speedfly = string.sub(CMDBAR.Text, 10)
            wait()
            change()
        end
        if string.sub(CMDBAR.Text, 1, 7) == ("carpet ") then
            for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 8))) do
                local Anim3 = Instance.new("Animation")
                Anim3.AnimationId = "rbxassetid://282574440"
                local track3 = lplayer.Character.Humanoid:LoadAnimation(Anim3)
                track3:Play(.1, 1, 1)
                bplrr = v.Name
                banpl = true
            end
        end
        if string.sub(CMDBAR.Text, 1, 8) == ("uncarpet") then
            banpl = false
        end
        if string.sub(CMDBAR.Text, 1, 6) == ("stare ") then
            for i,v in pairs(GetPlayer(string.sub(CMDBAR.Text, 7))) do
                staring = true
                stareplr = v
            end
        end
        if string.sub(CMDBAR.Text, 1, 7) == ("unstare") then
            staring = false
        end
        if string.sub(CMDBAR.Text, 1, 7) == ("logchat") then
            chatlogs = true
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "LogChat enabled";
            Text = "Now logging all player chat.";
            })
        end
        if string.sub(CMDBAR.Text, 1, 9) == ("unlogchat") then
            chatlogs = false
            game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "LogChat disabled";
            Text = "Stopped logging all player chat.";
            })
        end
        if string.sub(CMDBAR.Text, 1, 6) == ("fixcam") then
            game:GetService("Workspace").CurrentCamera:Destroy()
            wait(0.1)
            game:GetService("Workspace").CurrentCamera.CameraSubject = lplayer.Character.Humanoid
            game:GetService("Workspace").CurrentCamera.CameraType = "Custom"
            lplayer.CameraMinZoomDistance = 0.5
            lplayer.CameraMaxZoomDistance = 400
            lplayer.CameraMode = "Classic"
        end
        if string.sub(CMDBAR.Text, 1, 7) == ("unstate") then
            changingstate = false
        end
        CMDBAR.Text = ""
    end
end)
 
wait(0.3)
game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "Loaded successfully!";
    Text = "Reviz Admin V2 by illremember";
})
wait(0.1)
print("Reviz Admin V2 loaded!")
if game:GetService("Workspace").FilteringEnabled == true then
    warn("FE is Enabled (Filtering Enabled)")
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "FE is Enabled";
        Text = "Filtering Enabled. Enjoy using Reviz Admin!";
    })
else
    warn("FE is Disabled (Filtering Disabled) Consider using a different admin script.")
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "FE is Disabled";
        Text = "Filtering Disabled. Consider using a different admin script.";
    })
end
 
local intro = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local ImageLabel = Instance.new("ImageLabel")
intro.Parent = game:GetService("CoreGui")
Frame.Parent = intro
Frame.BackgroundColor3 = Color3.new(1, 1, 1)
Frame.BackgroundTransparency = 1
Frame.Size = UDim2.new(1, 0, 0, 300)
Frame.Position = UDim2.new(0, 0, -0.4, 0)
ImageLabel.Parent = Frame
ImageLabel.BackgroundColor3 = Color3.new(1, 1, 1)
ImageLabel.BackgroundTransparency = 1
ImageLabel.Position = UDim2.new(0, 0, 0, 0)
ImageLabel.Size = UDim2.new(1, 0, 1, 0)
ImageLabel.Image = "http://www.roblox.com/asset/?id=1542162618"
Frame:TweenPosition(UDim2.new(0, 0, 0.2, 0), "Out", "Elastic", 3)
wait(3.01)
Frame:TweenPosition(UDim2.new(0, 0, 1.5, 0), "Out", "Elastic", 5)
wait(5.01)
intro:Destroy()
end)

GRABKNIFE.Name = "GRABKNIFE"
GRABKNIFE.Parent = main
GRABKNIFE.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
GRABKNIFE.Position = UDim2.new(0.531380773, 0, 0.148305088, 0)
GRABKNIFE.Size = UDim2.new(0, 200, 0, 50)
GRABKNIFE.Font = Enum.Font.SourceSans
GRABKNIFE.Text = "Grab Knife"
GRABKNIFE.TextColor3 = Color3.fromRGB(255, 255, 255)
GRABKNIFE.TextSize = 14.000
GRABKNIFE.MouseButton1Down:connect(function()
math.randomseed(tick())
local player = game.Players.LocalPlayer
local rekt = {}
local paralyzed = false
local curpoint = nil
local curpart = nil
local finishnum = 1
local zombiemode = false
local zombies = {}
local lastgui = nil
local mouse = player:GetMouse()
 
function getplr(char)
    local plr = nil
    for i,v in pairs(game.Players:GetChildren()) do
        if v.Character == char then
            plr = v
        end
    end
    return plr
end
 
function bleed(frick)
    while frick.Parent ~= nil do
    local reeee = coroutine.wrap(function()
    local thing = Instance.new('Part',game.Workspace)
    thing.Size = Vector3.new(0.2,0.2,0.2)
    thing.CFrame = frick.CFrame
    thing.Shape = Enum.PartType.Ball
    thing.CFrame = frick.CFrame
    thing.Transparency = 1
    thing.BrickColor = BrickColor.new('Maroon')
    thing.Material = Enum.Material.SmoothPlastic
    thing.Name = "Blood"
    thing.CanCollide =false
    local rawrxd = Instance.new('BodyForce',thing)
    rawrxd.Force = frick.CFrame.upVector*(math.random()*2)+Vector3.new(math.random(-5, 5)/10,1.5,0)
    local coru = coroutine.wrap(function()
        wait(0.01)
        rawrxd:Destroy()
    end)
    coru()
    local ree = Instance.new('ParticleEmitter',thing)
    ree.Color = ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.fromRGB(100,0,0)),ColorSequenceKeypoint.new(1,Color3.fromRGB(100,0,0))})
    ree.Size = NumberSequence.new({NumberSequenceKeypoint.new(0,0.1),NumberSequenceKeypoint.new(1,0.1)})
    ree.Texture = 'rbxassetid://867743272'
    ree.Lifetime = NumberRange.new(0.4)
    ree.Rate = 50
    ree.LockedToPart = true
    ree.Speed = NumberRange.new(0, 2)  
   
    thing.Touched:connect(function(tou)
        if tou.Parent and tou.Parent:IsA('Tool') == false and tou.Parent.Parent:FindFirstChildOfClass('Humanoid') == nil and tou.Parent:FindFirstChildOfClass('Humanoid') == nil and tou.Name ~= "Blood" and tou.Parent.Name ~= "Projectile" and tou.Parent.Name ~= "big ass knife" and tou.Parent ~= player.Character and tou.Parent.ClassName ~= "Accessory" and tou.Parent.Name ~= "bitch ass knife" then
            local pos = Vector3.new(thing.Position.X,(tou.Position.Y+(tou.Size.Y/2))+0.02,thing.Position.Z)
            thing:Destroy()
            if tou.Name == "BloodPuddle" then
                local reee = tou.CFrame
                if tou.Transparency > -0.2 then
                    tou.Transparency = tou.Transparency -0.1
                end
                if tou.Size.X < 10 then
                    tou.Size = tou.Size+Vector3.new(0.1,0,0.1)
                    tou.CFrame = reee
                end
            else
                local bloodlol = Instance.new('Part',workspace)
                bloodlol.Size=Vector3.new(1,0.2,1)
                bloodlol.Name = "BloodPuddle"
                bloodlol.Anchored = true
                bloodlol.CanCollide = false
                bloodlol.Material = Enum.Material.SmoothPlastic
                bloodlol.BrickColor = BrickColor.new('Maroon')
                local cyl = Instance.new('CylinderMesh',bloodlol)
                cyl.Scale = Vector3.new(1,0.1,1)
                bloodlol.CFrame = CFrame.new(pos)
                local coru=coroutine.wrap(function()
                    while bloodlol.Parent ~= nil do
                        if bloodlol.Transparency < 1 then
                            bloodlol.Transparency = bloodlol.Transparency+0.05
                        else
                            bloodlol:Destroy()
                        end
                        wait(0.1)
                    end
                end)
                coru()
            end
        end
    end)
    local coru = coroutine.wrap(function()
        wait(1)
        thing:Destroy()
    end)
    coru()
    end)
    reeee()
    wait()
    end
end
 
function killz(playa,hitz,kneef,explode,pool,head,charred,override)
    local soundy = false
    local heyy = hitz
    if hitz == "Right Arm" then
    local Limb = playa:FindFirstChild("Right Arm")
    local ters = playa:FindFirstChild('Torso')
        if Limb and ters then
            if ters:FindFirstChild('Right Shoulder') then ters["Right Shoulder"]:Destroy() end
            for i,v in pairs(Limb:GetChildren()) do
                if v:IsA('Weld') or v:IsA('Motor6D') or v:IsA('Rotate') then
                    v:Destroy()
                end
            end
            Limb.CFrame = ters.CFrame * CFrame.new(1.5, 0, 0)
            local Joint = Instance.new("Rotate")
            Joint.Name = "RightShoulder"
            Joint.Part0 = ters
            Joint.Part1 = Limb
            Joint.C0 = CFrame.new(1.5, 0.5, 0, 0, 0, 1, 0, 1, 0, -1, -0, -0)
            Joint.C1 = CFrame.new(-0, 0.5, 0, 0, 0, 1, 0, 1, 0, -1, -0, -0)
            Joint.Parent = ters
            if charred and zombiemode == false then
                Limb.BrickColor = BrickColor.new('Black')
                local fire = Instance.new('Fire',Limb)
                fire.Heat = 5
                fire.Size = 5
                game:GetService('Debris'):AddItem(fire,2)
                local coru=coroutine.wrap(function()
                    wait(2)
                    for i,v in pairs(Limb:GetChildren()) do
                        if v:IsA('ParticleEmitter') then
                            v:Destroy()
                        end
                    end
                end)
                coru()
            end
            local B = Instance.new("Part")
            B.TopSurface = 0
            B.BottomSurface = 0
            B.formFactor = "Symmetric"
            B.Size = Vector3.new(1, 1, 1)
            B.Transparency = 1
            B.CFrame = Limb.CFrame * CFrame.new(0, -0.5, 0)
            B.Parent = playa
            local W = Instance.new("Weld")
            W.Part0 = Limb
            W.Part1 = B
            W.C0 = CFrame.new(0, -0.5, 0)
            W.Parent = Limb
            if kneef then
            local coru = coroutine.wrap(function()
                local uno = Instance.new('Part',workspace)
                    local dos = Instance.new('Part',workspace)
                    uno.CFrame = playa:FindFirstChild(hitz).CFrame
                    dos.CFrame = kneef["big ass knife"].CFrame
                    local weld = Instance.new('Weld',kneef["big ass knife"])
                    weld.Part0 = playa:FindFirstChild(hitz)
                    weld.Part1 = kneef["big ass knife"]
                    weld.C0 = uno.CFrame:toObjectSpace(dos.CFrame)
                    uno:Destroy()
                    dos:Destroy()
                    playa:FindFirstChild(hitz).Anchored = false
                    for i, v in pairs(kneef:GetChildren()) do
                        if v:IsA('BasePart') then
                        v.Anchored = false
                        end
                    end
                    if zombiemode == false or override then
                    wait()
                    end
                    if kneef:FindFirstChild('Grab') and kneef.Grab:FindFirstChildOfClass('BodyVelocity') then
                        kneef.Grab:FindFirstChildOfClass('BodyVelocity'):Destroy()
                    end
                    local bleedpart = Instance.new("Part", kneef)
                    bleedpart.CanCollide = false
                    bleedpart.Size = Vector3.new(0.2, 0.2, 0.2)
                    bleedpart.CFrame = kneef["big ass knife"].CFrame
                    bleedpart.Color = Color3.new(115/225, 115/225, 115/225)
                    bleedpart.Transparency = 1
   
                    local bleedpartweld = Instance.new("Weld", kneef["big ass knife"])
                    bleedpartweld.Part0 = kneef["big ass knife"]
                    bleedpartweld.Part1 = bleedpart
                    bleedpartweld.C0 = CFrame.new(0,0,0)*CFrame.Angles(math.rad(90),0,0)
                    local coru = coroutine.wrap(function()
                    bleed(bleedpart)
                    end)
                    coru()
                    game:GetService('Debris'):AddItem(bleedpart,2)
            end)
            coru()
            end
        end
    elseif hitz == "Left Arm" then
        local Limb = playa:FindFirstChild("Left Arm")
    local ters = playa:FindFirstChild('Torso')
        if Limb and ters then
            if ters:FindFirstChild('Left Shoulder') then ters["Left Shoulder"]:Destroy() end
            for i,v in pairs(Limb:GetChildren()) do
                if v:IsA('Weld') or v:IsA('Motor6D') or v:IsA('Rotate') then
                    v:Destroy()
                end
            end
            Limb.CFrame = ters.CFrame * CFrame.new(-1.5, 0, 0)
            local Joint = Instance.new("Rotate")
            Joint.Name = "LeftShoulder"
            Joint.Part0 = ters
            Joint.Part1 = Limb
            Joint.C0 = CFrame.new(-1.5, 0.5, 0, -0, -0, -1, 0, 1, 0, 1, 0, 0)
            Joint.C1 = CFrame.new(0, 0.5, 0, -0, -0, -1, 0, 1, 0, 1, 0, 0)
            Joint.Parent = ters
            if charred and zombiemode == false then
                Limb.BrickColor = BrickColor.new('Black')
                local fire = Instance.new('Fire',Limb)
                fire.Heat = 5
                fire.Size = 5
                game:GetService('Debris'):AddItem(fire,2)
                local coru=coroutine.wrap(function()
                    wait(2)
                    for i,v in pairs(Limb:GetChildren()) do
                        if v:IsA('ParticleEmitter') then
                            v:Destroy()
                        end
                    end
                end)
                coru()
            end
 
            local B = Instance.new("Part")
            B.TopSurface = 0
            B.BottomSurface = 0
            B.formFactor = "Symmetric"
            B.Size = Vector3.new(1, 1, 1)
            B.CanCollide = true
            B.Transparency = 1
            B.CFrame = Limb.CFrame * CFrame.new(0, -0.5, 0)
            B.Parent = playa
            local W = Instance.new("Weld")
            W.Part0 = ters
            W.Part1 = B
            W.C0 = CFrame.new(0, -0.5, 0)
            W.Parent = Limb
            if kneef then
            local coru = coroutine.wrap(function()
                local uno = Instance.new('Part',workspace)
                    local dos = Instance.new('Part',workspace)
                    uno.CFrame = playa:FindFirstChild(hitz).CFrame
                    dos.CFrame = kneef["big ass knife"].CFrame
                    local weld = Instance.new('Weld',kneef["big ass knife"])
                    weld.Part0 = playa:FindFirstChild(hitz)
                    weld.Part1 = kneef["big ass knife"]
                    weld.C0 = uno.CFrame:toObjectSpace(dos.CFrame)
                    uno:Destroy()
                    dos:Destroy()
                    playa:FindFirstChild(hitz).Anchored = false
                    for i, v in pairs(kneef:GetChildren()) do
                        if v:IsA('BasePart') then
                        v.Anchored = false
                        end
                    end
                    if zombiemode == false or override then
                    wait()
                    end
                    if kneef:FindFirstChild('Grab') and kneef.Grab:FindFirstChildOfClass('BodyVelocity') then
                        kneef.Grab:FindFirstChildOfClass('BodyVelocity'):Destroy()
                    end
                    local bleedpart = Instance.new("Part", kneef)
                    bleedpart.CanCollide = false
                    bleedpart.Size = Vector3.new(0.2, 0.2, 0.2)
                    bleedpart.CFrame = kneef["big ass knife"].CFrame
                    bleedpart.Color = Color3.new(115/225, 115/225, 115/225)
                    bleedpart.Transparency = 1
   
                    local bleedpartweld = Instance.new("Weld", kneef["big ass knife"])
                    bleedpartweld.Part0 = kneef["big ass knife"]
                    bleedpartweld.Part1 = bleedpart
                    bleedpartweld.C0 = CFrame.new(0,0,0)*CFrame.Angles(math.rad(90),0,0)
                    local coru = coroutine.wrap(function()
                    bleed(bleedpart)
                    end)
                    coru()
                    game:GetService('Debris'):AddItem(bleedpart,2)
            end)
            coru()
            end
        end
    elseif hitz == "Right Leg" then
        local Limb = playa:FindFirstChild("Right Leg")
    local ters = playa:FindFirstChild('Torso')
        if Limb and ters then
            if ters:FindFirstChild('Right Hip') then ters["Right Hip"]:Destroy() end
            for i,v in pairs(Limb:GetChildren()) do
                if v:IsA('Weld') or v:IsA('Motor6D') or v:IsA('Rotate') then
                    v:Destroy()
                end
            end
            Limb.CFrame = ters.CFrame * CFrame.new(0.5, -2, 0)
            local Joint = Instance.new("Rotate")
            Joint.Name = "Right Hip"
            Joint.Part0 = ters
            Joint.Part1 = Limb
            Joint.C0 = CFrame.new(0.5, -1, 0, 0, 0, 1, 0, 1, 0, -1, -0, -0)
            Joint.C1 = CFrame.new(0, 1, 0, 0, 0, 1, 0, 1, 0, -1, -0, -0)
            Joint.Parent = ters
            if charred and zombiemode == false then
                Limb.BrickColor = BrickColor.new('Black')
                local fire = Instance.new('Fire',Limb)
                fire.Heat = 5
                fire.Size = 5
                game:GetService('Debris'):AddItem(fire,2)
                local coru=coroutine.wrap(function()
                    wait(2)
                    for i,v in pairs(Limb:GetChildren()) do
                        if v:IsA('ParticleEmitter') then
                            v:Destroy()
                        end
                    end
                end)
                coru()
            end
            local B = Instance.new("Part")
            B.TopSurface = 0
            B.BottomSurface = 0
            B.formFactor = "Symmetric"
            B.Size = Vector3.new(1, 1, 1)
            B.Transparency = 1
            B.CFrame = Limb.CFrame * CFrame.new(0, -0.5, 0)
            B.Parent = playa
            local W = Instance.new("Weld")
            W.Part0 = Limb
            W.Part1 = B
            W.C0 = CFrame.new(0, -0.5, 0)
            W.Parent = Limb
            if kneef then
            local coru = coroutine.wrap(function()
                local uno = Instance.new('Part',workspace)
                local dos = Instance.new('Part',workspace)
                uno.CFrame = playa:FindFirstChild(hitz).CFrame
                dos.CFrame = kneef["big ass knife"].CFrame
                local weld = Instance.new('Weld',kneef["big ass knife"])
                weld.Part0 = playa:FindFirstChild(hitz)
                weld.Part1 = kneef["big ass knife"]
                weld.C0 = uno.CFrame:toObjectSpace(dos.CFrame)
                uno:Destroy()
                dos:Destroy()
                playa:FindFirstChild(hitz).Anchored = false
                for i, v in pairs(kneef:GetChildren()) do
                    if v:IsA('BasePart') then
                        v.Anchored = false
                        end
                    end
                    if zombiemode == false or override then
                    wait()
                    end
                    if kneef:FindFirstChild('Grab') and kneef.Grab:FindFirstChildOfClass('BodyVelocity') then
                        kneef.Grab:FindFirstChildOfClass('BodyVelocity'):Destroy()
                    end
                    local bleedpart = Instance.new("Part", kneef)
                    bleedpart.CanCollide = false
                    bleedpart.Size = Vector3.new(0.2, 0.2, 0.2)
                    bleedpart.CFrame = kneef["big ass knife"].CFrame
                    bleedpart.Color = Color3.new(115/225, 115/225, 115/225)
                    bleedpart.Transparency = 1
   
                    local bleedpartweld = Instance.new("Weld", kneef["big ass knife"])
                    bleedpartweld.Part0 = kneef["big ass knife"]
                    bleedpartweld.Part1 = bleedpart
                    bleedpartweld.C0 = CFrame.new(0,0,0)*CFrame.Angles(math.rad(90),0,0)
                    local coru = coroutine.wrap(function()
                    bleed(bleedpart)
                    end)
                    coru()
                    game:GetService('Debris'):AddItem(bleedpart,2)
            end)
            coru()
            end
            if playa then
                table.insert(rekt,playa)
            end
        end
    elseif hitz == "Left Leg" then
        local Limb = playa:FindFirstChild("Left Leg")
    local ters = playa:FindFirstChild('Torso')
        if Limb and ters then
            if ters:FindFirstChild('Left Hip') then ters["Left Hip"]:Destroy() end
            for i,v in pairs(Limb:GetChildren()) do
                if v:IsA('Weld') or v:IsA('Motor6D') or v:IsA('Rotate') then
                    v:Destroy()
                end
            end
        Limb.CFrame = ters.CFrame * CFrame.new(0.5, -2, 0)
            Limb.CFrame = ters.CFrame * CFrame.new(-0.5, -2, 0)
            local Joint = Instance.new("Rotate")
            Joint.Name = "LeftHip"
            Joint.Part0 = ters
            Joint.Part1 = Limb
            Joint.C0 = CFrame.new(-0.5, -1, 0, -0, -0, -1, 0, 1, 0, 1, 0, 0)
            Joint.C1 = CFrame.new(-0, 1, 0, -0, -0, -1, 0, 1, 0, 1, 0, 0)
            Joint.Parent = ters
            if charred and zombiemode == false then
                Limb.BrickColor = BrickColor.new('Black')
                local fire = Instance.new('Fire',Limb)
                fire.Heat = 5
                fire.Size = 5
                game:GetService('Debris'):AddItem(fire,2)
                local coru=coroutine.wrap(function()
                    wait(2)
                    for i,v in pairs(Limb:GetChildren()) do
                        if v:IsA('ParticleEmitter') then
                            v:Destroy()
                        end
                    end
                end)
                coru()
            end
 
            local B = Instance.new("Part")
            B.TopSurface = 0
            B.BottomSurface = 0
            B.formFactor = "Symmetric"
            B.Size = Vector3.new(1, 1, 1)
            B.Transparency = 1
            B.CFrame = Limb.CFrame * CFrame.new(0, -0.5, 0)
            B.Parent = playa
            local W = Instance.new("Weld")
            W.Part0 = Limb
            W.Part1 = B
            W.C0 = CFrame.new(0, -0.5, 0)
            W.Parent = Limb
            Limb.CanCollide = false
            if kneef then
            local coru = coroutine.wrap(function()
                local uno = Instance.new('Part',workspace)
                    local dos = Instance.new('Part',workspace)
                    uno.CFrame = playa:FindFirstChild(hitz).CFrame
                    dos.CFrame = kneef["big ass knife"].CFrame
                    local weld = Instance.new('Weld',kneef["big ass knife"])
                    weld.Part0 = playa:FindFirstChild(hitz)
                    weld.Part1 = kneef["big ass knife"]
                    weld.C0 = uno.CFrame:toObjectSpace(dos.CFrame)
                    uno:Destroy()
                    dos:Destroy()
                    playa:FindFirstChild(hitz).Anchored = false
                    for i, v in pairs(kneef:GetChildren()) do
                        if v:IsA('BasePart') then
                        v.Anchored = false
                        end
                    end
                    if zombiemode == false or override then
                    wait()
                    end
                    if kneef:FindFirstChild('Grab') and kneef.Grab:FindFirstChildOfClass('BodyVelocity') then
                        kneef.Grab:FindFirstChildOfClass('BodyVelocity'):Destroy()
                    end
                    local bleedpart = Instance.new("Part", kneef)
                    bleedpart.CanCollide = false
                    bleedpart.Size = Vector3.new(0.2, 0.2, 0.2)
                    bleedpart.CFrame = kneef["big ass knife"].CFrame
                    bleedpart.Color = Color3.new(115/225, 115/225, 115/225)
                    bleedpart.Transparency = 1
   
                    local bleedpartweld = Instance.new("Weld", kneef["big ass knife"])
                    bleedpartweld.Part0 = kneef["big ass knife"]
                    bleedpartweld.Part1 = bleedpart
                    bleedpartweld.C0 = CFrame.new(0,0,0)*CFrame.Angles(math.rad(90),0,0)
                    local coru = coroutine.wrap(function()
                    bleed(bleedpart)
                    end)
                    coru()
                    game:GetService('Debris'):AddItem(bleedpart,2)
            end)
            coru()
            end
            if playa then
                table.insert(rekt,playa)
            end
        end
    elseif playa then
        if finishnum ~= 1 then
            local coru=coroutine.wrap(function()
            player.Character.Head.Psycho.Playing = true
            wait(3)
            player.Character.Head.Psycho.Playing = false
            end)
            coru()
        end
        local playa2 = playa
        playa.Archivable = true
        local playa = playa:Clone()
        playa.Archivable = false
        playa2:Destroy()
        playa.Parent = workspace
        local Gibs = game.Workspace
        local Torso = playa.Torso
        local Head = playa:FindFirstChild("Head")
        local function Scan(ch)
        local e
        for e = 1,#ch do
            Scan(ch[e]:GetChildren())
            if (ch[e].ClassName == "Weld" and ch[e]:FindFirstChild('Part1') and ch[e].Part1.Name ~= 'Projectile') or ch[e].ClassName == "Motor6D" or ch[e].ClassName == "Rotate" or (ch[e]:IsA('BasePart') and ch[e].Size == Vector3.new(1, 1, 1)) then
                ch[e]:remove()
            end
        end
        end
    Scan(playa:GetChildren())
        if playa:FindFirstChild('HumanoidRootPart') and (zombiemode == false or override) then
            playa:FindFirstChild('HumanoidRootPart'):Destroy()
        end
        local hum2 = playa:FindFirstChildOfClass("Humanoid")
    if zombiemode == true and override == false then
        soundy = true
    end
    if string.sub(hum2.Parent.Name,string.len(hum2.Parent.Name)-8,string.len(hum2.Parent.Name)) ~= "'s Zombie" then
        override = true
    end
    if hum2 ~= nil then
        hum2.Name = "Humanoid2"
        hum2.Health = 0
        if zombiemode == false or override == true then
            table.insert(rekt,hum2.Parent)
        else
            local gyro = Instance.new('BodyGyro',Torso)
            hum2.PlatformStand = false
            for i,v in pairs(hum2.Parent.Torso:GetChildren()) do
                if v:IsA('BodyGyro') then v:Destroy() end
            end
            if playa:FindFirstChild('HumanoidRootPart') then
                hum2.Parent.HumanoidRootPart.CFrame = hum2.Parent.Torso.CFrame
                local weldcrucial = Instance.new('Weld',hum2.Parent.HumanoidRootPart)
                weldcrucial.Part0 = hum2.Parent.HumanoidRootPart
                weldcrucial.Part1 = hum2.Parent.Torso
            end
        end
    end
    local ch = playa:GetChildren()
    local i
    for i = 1,#ch do
        if ch[i].Name == "THandle1" or ch[i].Name == "THandle2" then
            ch[i]:remove()
        end
    end
 
        if Head then
            local Neck = Instance.new("Weld")
            Neck.Name = "Neck"
            Neck.Part0 = Torso
            Neck.Part1 = Head
            if pool then
                local part = Instance.new('Part',Torso)
                part.Position = Vector3.new(0,10,0)
                part.Size = Vector3.new(0.2,0.2,0.2)
                part.Transparency = 1
                part.CanCollide = false
                local we = Instance.new('Weld',Torso)
                we.Part0 = Torso
                we.Part1 = part
                we.C0 = CFrame.new(0,0,0)*CFrame.Angles(math.rad(90),0,0)
                local coru=coroutine.wrap(function()
                bleed(part)
                end)
                coru()
            end
            if head == false or head == nil then
                Neck.C0 = CFrame.new(0, 1.5, 0)
            else
                Neck.C0 = CFrame.new(0, 1.5, 0.2)*CFrame.Angles(0.5, 0.25, 0.25)
                local bleedpart = Instance.new("Part", Torso)
                bleedpart.Size = Vector3.new(0.2, 0.2, 0.2)
                bleedpart.Color = Color3.new(115/225, 115/225, 115/225)
                bleedpart.CanCollide = false
                bleedpart.Position = Head.Position + Vector3.new(0, 1, 0)
                bleedpart.Transparency = 1
   
                local bleedpartweld = Instance.new("Weld", Torso)
                bleedpartweld.Part0 = Torso
                bleedpartweld.Part1 = bleedpart
                bleedpartweld.C0 = CFrame.Angles(-1, 0, -0.35) * CFrame.new(0, 1, 0.8)
                local coru = coroutine.wrap(function()
                bleed(bleedpart)
                end)
                coru()
            end
            Neck.C1 = CFrame.new()
            Neck.Parent = Torso
        end
        local Limb = playa:FindFirstChild("Right Arm")
        if Limb then
 
            Limb.CFrame = Torso.CFrame * CFrame.new(1.5, 0, 0)
            local Joint = Instance.new("Rotate")
            Joint.Name = "RightShoulder"
            Joint.Part0 = Torso
            Joint.Part1 = Limb
            Joint.C0 = CFrame.new(1.5, 0.5, 0, 0, 0, 1, 0, 1, 0, -1, -0, -0)
            Joint.C1 = CFrame.new(-0, 0.5, 0, 0, 0, 1, 0, 1, 0, -1, -0, -0)
            Joint.Parent = Torso
 
            local B = Instance.new("Part")
            B.TopSurface = 0
            B.BottomSurface = 0
            B.formFactor = "Symmetric"
            B.Size = Vector3.new(1, 1, 1)
            B.Transparency = 1
            B.CFrame = Limb.CFrame * CFrame.new(0, -0.5, 0)
            B.Parent = playa
            local W = Instance.new("Weld")
            W.Part0 = Limb
            W.Part1 = B
            W.C0 = CFrame.new(0, -0.5, 0)
            W.Parent = Limb
        end
        local Limb = playa:FindFirstChild("Left Arm")
        if Limb then
   
            Limb.CFrame = Torso.CFrame * CFrame.new(-1.5, 0, 0)
            local Joint = Instance.new("Rotate")
            Joint.Name = "LeftShoulder"
            Joint.Part0 = Torso
            Joint.Part1 = Limb
            Joint.C0 = CFrame.new(-1.5, 0.5, 0, -0, -0, -1, 0, 1, 0, 1, 0, 0)
            Joint.C1 = CFrame.new(0, 0.5, 0, -0, -0, -1, 0, 1, 0, 1, 0, 0)
            Joint.Parent = Torso
 
            local B = Instance.new("Part")
            B.TopSurface = 0
            B.BottomSurface = 0
            B.formFactor = "Symmetric"
            B.Size = Vector3.new(1, 1, 1)
            B.Transparency = 1
            B.CFrame = Limb.CFrame * CFrame.new(0, -0.5, 0)
            B.Parent = playa
            local W = Instance.new("Weld")
            W.Part0 = Limb
            W.Part1 = B
            W.C0 = CFrame.new(0, -0.5, 0)
            W.Parent = Limb
        end
        local Limb = playa:FindFirstChild("Right Leg")
        if Limb then
            Limb.CanCollide = false
            Limb.CFrame = Torso.CFrame * CFrame.new(0.5, -2, 0)
            local Joint = Instance.new("Rotate")
            Joint.Name = "RightHip"
            Joint.Part0 = Torso
            Joint.Part1 = Limb
            Joint.C0 = CFrame.new(0.5, -1, 0, 0, 0, 1, 0, 1, 0, -1, -0, -0)
            Joint.C1 = CFrame.new(0, 1, 0, 0, 0, 1, 0, 1, 0, -1, -0, -0)
            Joint.Parent = Torso
 
            local B = Instance.new("Part")
            B.TopSurface = 0
            B.BottomSurface = 0
            B.formFactor = "Symmetric"
            B.Size = Vector3.new(1, 1, 1)
            B.Transparency = 1
            B.CanCollide = true
            B.CFrame = Limb.CFrame * CFrame.new(0, -0.5, 0)
            B.Parent = playa
            local W = Instance.new("Weld")
            W.Part0 = Limb
            W.Part1 = B
            W.C0 = CFrame.new(0, -0.5, 0)
            W.Parent = Limb
        end
        local Limb = playa:FindFirstChild("Left Leg")
        if Limb then
            Limb.CanCollide = false
            Limb.CFrame = Torso.CFrame * CFrame.new(-0.5, -2, 0)
            local Joint = Instance.new("Rotate")
            Joint.Name = "LeftHip"
            Joint.Part0 = Torso
            Joint.Part1 = Limb
            Joint.C0 = CFrame.new(-0.5, -1, 0, -0, -0, -1, 0, 1, 0, 1, 0, 0)
            Joint.C1 = CFrame.new(-0, 1, 0, -0, -0, -1, 0, 1, 0, 1, 0, 0)
            Joint.Parent = Torso
 
            local B = Instance.new("Part")
            B.TopSurface = 0
            B.BottomSurface = 0
            if zombiemode == false or override then
            B.CanCollide = true
            end
            B.formFactor = "Symmetric"
            B.Size = Vector3.new(1, 1, 1)
            B.Transparency = 1
            B.CFrame = Limb.CFrame * CFrame.new(0, -0.5, 0)
            B.Parent = playa
            local W = Instance.new("Weld")
            W.Part0 = Limb
            W.Part1 = B
            W.C0 = CFrame.new(0, -0.5, 0)
            W.Parent = Limb
        end
        --[[
        local Bar = Instance.new("Part")
        Bar.TopSurface = 0
        Bar.BottomSurface = 0
        Bar.formFactor = "Symmetric"
        Bar.Size = Vector3.new(1, 1, 1)
        Bar.Transparency = 1
        Bar.CFrame = Torso.CFrame * CFrame.new(0, 0.5, 0)
        Bar.Parent = playa
        local Weld = Instance.new("Weld")
        Weld.Part0 = Torso
        Weld.Part1 = Bar
        Weld.C0 = CFrame.new(0, 0.5, 0)
        Weld.Parent = Torso
        --]]
        playa.Parent = Gibs
        if kneef and explode == nil then
            local coru = coroutine.wrap(function()
                if playa:FindFirstChild(hitz) then
                    local uno = Instance.new('Part',workspace)
                    local dos = Instance.new('Part',workspace)
                    uno.CFrame = playa:FindFirstChild(hitz).CFrame
                    dos.CFrame = kneef["big ass knife"].CFrame
                    local weld = Instance.new('Weld',kneef["big ass knife"])
                    weld.Part0 = playa:FindFirstChild(hitz)
                    weld.Part1 = kneef["big ass knife"]
                    weld.C0 = uno.CFrame:toObjectSpace(dos.CFrame)
                    uno:Destroy()
                    dos:Destroy()
                    playa:FindFirstChild(hitz).Anchored = false
                    for i, v in pairs(kneef:GetChildren()) do
                        if v:IsA('BasePart') then
                        v.Anchored = false
                        end
                    end
                    if explode == nil or explode == false then
                    local bleedpart = Instance.new("Part", kneef)
                    bleedpart.Size = Vector3.new(0.2, 0.2, 0.2)
                    bleedpart.Color = Color3.new(115/225, 115/225, 115/225)
                    bleedpart.CanCollide = false
                    bleedpart.Position = Head.Position + Vector3.new(0, 1, 0)
                    bleedpart.Transparency = 1
   
                    local bleedpartweld = Instance.new("Weld", kneef["big ass knife"])
                    bleedpartweld.Part0 = kneef["big ass knife"]
                    bleedpartweld.Part1 = bleedpart
                    bleedpartweld.C0 = CFrame.new(0,0,0)*CFrame.Angles(math.rad(90),0,0)
                    local coru = coroutine.wrap(function()
                    bleed(bleedpart)
                    end)
                    coru()
                    end
                    end
                    if zombiemode == false or override then
                    wait()
                    end
                    if kneef:FindFirstChild('Grab') and kneef.Grab:FindFirstChildOfClass('BodyVelocity') then
                        kneef.Grab:FindFirstChildOfClass('BodyVelocity'):Destroy()
                    end
            end)
            coru()
        end
        if explode then
            local movevector = CFrame.new(explode.Position,Torso.Position).lookVector
            local repulse = Instance.new('BodyForce',Torso)
            repulse.Force = movevector*10000 + Vector3.new(0,5000,0)
            game.Debris:AddItem(repulse,0.05)
        end
        if charred and zombiemode == false then
            for i,v in pairs(playa:GetChildren()) do
                if v:IsA('BasePart') then
                    v.BrickColor = BrickColor.Black()
                    local fire = Instance.new('Fire',v)
                    fire.Size = 5
                    fire.Heat = 5
                elseif v:IsA('Accessory') then
                    for a,c in pairs(v:GetChildren()) do
                        if c:IsA('BasePart') then
                            c.BrickColor = BrickColor.Black()
                            local fire = Instance.new('Fire',v)
                            fire.Size = 5
                            fire.Heat = 5
                            for o,p in pairs(c:GetChildren()) do
                                if p:IsA("SpecialMesh") then
                                    p.TextureId = ""
                                end
                            end
                        end
                    end
                end
            end
        end
        if soundy then
            local sound = Instance.new('Sound',Head)
            sound.SoundId = 'rbxassetid://903640857'
            sound.Volume = 1
            sound:Play()
            sound.Ended:connect(function()
                sound:Destroy()
                local ambient = Instance.new('Sound',Head)
                ambient.Volume = 0.25
                ambient.Looped = true
                ambient.SoundId = 'rbxassetid://903641031'
                ambient:Play()
            end)
        end
        if override then
            if (string.len(hum2.Parent.Name) < 9 or string.sub(hum2.Parent.Name,string.len(hum2.Parent.Name)-8,string.len(hum2.Parent.Name)) ~= "'s Zombie") and zombiemode == true and #zombies < 10 then
                local coru = coroutine.wrap(function()
                    wait(4.5)
                    hum2.Parent.Name = hum2.Parent.Name.."'s Zombie"
                    hum2.HipHeight = 0.2
                    wait(0.5)
                    killz(hum2.Parent,"Head",nil,nil,false,false,false,false)
                end)
                coru()
            else
                game:GetService('Debris'):AddItem(playa, 12)
            end
        else
            hum2.Health = 0
            table.insert(zombies,playa)
            local attack = Instance.new('Sound',Head)
            attack.SoundId = 'rbxassetid://903641424'
            attack.Volume = 2
            for i,v in pairs(playa:GetChildren()) do
                if v:IsA('BasePart') and v:FindFirstChildOfClass('TouchTransmitter') == nil then
                    v.Touched:connect(function(hit)
                        if hit.Parent and hit.Parent:FindFirstChildOfClass('Humanoid') then
                            local found = false
                            if hit.Parent == player.Character then
                                found = true
                            end
                            for a,c in pairs(zombies) do
                                if c == hit.Parent then
                                    found = true
                                end
                            end
                            if found == false and hit.Parent:FindFirstChildOfClass('Humanoid').Health > 0 then
                                attack:Play()
                                if hit.Parent:FindFirstChildOfClass('Humanoid').Health - 2 <= 0 then
                                    hit.Parent:FindFirstChildOfClass('Humanoid').Health = 0
                                    wait()
                                    killz(hit.Parent,"Head")
                                else
                                    hit.Parent:FindFirstChildOfClass('Humanoid'):TakeDamage(2)
                                end
                            end
                        end
                    end)
                end
            end
            local coru = coroutine.wrap(function()
                wait(2)
                for i,v in pairs(playa:GetChildren()) do
                if v:IsA('BasePart') then
                    for a,c in pairs(v:GetChildren()) do
                        if c:IsA('Fire') or c:IsA('ParticleEmitter') then
                            c:Destroy()
                        end
                    end
                elseif v:IsA('Accessory') then
                    for a,c in pairs(v:GetChildren()) do
                        if c:IsA('BasePart') then
                            for b,d in pairs(c:GetChildren()) do
                                if d:IsA('Fire') or d:IsA('ParticleEmitter') then
                                    d:Destroy()
                                end
                            end
                        end
                    end
                end
            end
            end)
            coru()
        end
    end
end
 
mouse.KeyDown:connect(function(key)
    if key == "t" and mouse.Target then
        local hum = mouse.Target.Parent:FindFirstChildOfClass('Humanoid')
        if hum == nil then hum = mouse.Target.Parent.Parent:FindFirstChildOfClass('Humanoid') end
        if curpoint == nil then
            if hum and hum.Parent:FindFirstChild('Head') then
                curpart = hum.Parent.Head
            else
                curpart = nil
                curpoint = mouse.Hit.p
            end
            if player.PlayerGui:FindFirstChild('Notification') then player.PlayerGui.Notification:Destroy() end
            notify("ZOMBIE TARGET SET",false)
        else
            curpart = nil
            curpoint = nil
            if player.PlayerGui:FindFirstChild('Notification') then player.PlayerGui.Notification:Destroy() end
            notify("ZOMBIE TARGET REMOVED",false)
        end
    elseif key == "y" then
        for o,p in pairs(zombies) do
            local coru = coroutine.wrap(function()
            if p:FindFirstChild('Torso') then
            killz(p,"Head",nil,nil,false,false,false,true)
            else
            table.remove(zombies,o)
            end
            end)
            coru()
            wait()
        end
        for i,v in pairs(zombies) do
            table.remove(zombies,i)
        end
        if player.PlayerGui:FindFirstChild('Notification') then player.PlayerGui.Notification:Destroy() end
        notify("ZOMBIES TERMINATED",false)
    end
end)
 
function nub()
repeat wait() until player.Character and player.Character:FindFirstChild('Torso')
local me = player.Character
local point = me.HumanoidRootPart
local playergui = player.PlayerGui
local rightshoulderz = me.Torso["Right Shoulder"]:Clone()
local leftshoulderz = me.Torso["Left Shoulder"]:Clone()
local torsojoint = me.HumanoidRootPart["RootJoint"]:Clone()
local lefthipz = me.Torso["Left Hip"]:Clone()
local righthipz = me.Torso["Right Hip"]:Clone()
local mode = "kill"
local lerpz = false
local active = false
local acting = false
local hit = false
local canClick = true
local stabbing = false
local grabbing = false
local finishing = false
local kyssing = false
local canbackgroundmusic = true
local cancolorfilter = true
local spinboolean = false
local grabbed = nil
local doing = false
local rightshoulder = nil
local leftshoulder = nil
local headweld = nil
local knifeparts = {}
local usable = true
finishnum = 1
 
function notify(msg,forever)
    local doit = coroutine.wrap(function()
        local gui = Instance.new('ScreenGui',playergui)
        gui.Name = "Notification"
        local frame = Instance.new('Frame',gui)
        frame.Position = UDim2.new(0,0,0,0)
        frame.Size = UDim2.new(1,0,0.2,0)
        frame.BackgroundTransparency = 1
        local txt = Instance.new('TextLabel',frame)
        txt.TextColor3 = Color3.new(255,255,255)
        txt.TextStrokeColor3 = Color3.new(0, 0, 0)
        txt.TextStrokeTransparency = 0
        txt.BackgroundTransparency = 1
        txt.Text = ""
        txt.Size = UDim2.new(1,0,0.3,0)
        txt.Position = UDim2.new(0,0,0.4,0)
        txt.TextScaled = true
        txt.Font = "Code"
        txt.TextXAlignment = "Center"
        local tap = Instance.new("Sound")
        tap.Parent = gui
        tap.SoundId = "rbxassetid://147982968"
        tap.TimePosition = 0.1
        local str = msg
        local len = string.len(str)
        for i=1,len do
            txt.Text = string.sub(str,1,i)
            pitche = math.random(20, 40)/10
            tap.PlaybackSpeed = pitche
            tap:Play()
            wait(0.01)
        end
        if forever == false then
            wait(1)
            while txt.TextTransparency < 1 do
                txt.TextTransparency = txt.TextTransparency + 0.1
                txt.TextStrokeTransparency = txt.TextStrokeTransparency + 0.1
                wait(0.001)
            end
            gui:Destroy()
        end
    end)
    doit()
end
 
wait(0.5)
notify("PRESS [Z] TO EQUIP KNIFE || Created by mustardfoot and Tollonis",true)
local laugh = Instance.new('Sound',me.Head)
laugh.SoundId = 'rbxassetid://378827985'
laugh.Name = "Psycho"
laugh.Volume = 5
-- 1 - bitch ass knife
local obj1 = Instance.new("Model")
obj1.Name = "bitch ass knife"
obj1.Parent = game.Workspace
 
-- 2 - Grab
local obj2 = Instance.new("Part")
obj2.CFrame = CFrame.new(Vector3.new(20.4525032, 6.14501333, -134.399979)) * CFrame.Angles(-3.1415927410126, 0, -3.1415927410126)
obj2.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
obj2.TopSurface = Enum.SurfaceType.SmoothNoOutlines
obj2.RightSurface = Enum.SurfaceType.SmoothNoOutlines
obj2.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
obj2.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
obj2.Material = Enum.Material.Concrete
obj2.Size = Vector3.new(1, 0.25, 0.25)
obj2.BackSurface = Enum.SurfaceType.SmoothNoOutlines
obj2.Anchored = true
obj2.BrickColor = BrickColor.new("Black")
obj2.Friction = 0.30000001192093
obj2.Shape = Enum.PartType.Cylinder
obj2.Name = "Grab"
obj2.Parent = obj1
 
-- 3 - handletopcap
local obj3 = Instance.new("Part")
obj3.CFrame = CFrame.new(Vector3.new(19.9725456, 6.14502859, -134.399933)) * CFrame.Angles(0, 1.5707963705063, 0)
obj3.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
obj3.TopSurface = Enum.SurfaceType.SmoothNoOutlines
obj3.RightSurface = Enum.SurfaceType.SmoothNoOutlines
obj3.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
obj3.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
obj3.Material = Enum.Material.Concrete
obj3.Size = Vector3.new(0.349999994, 0.349999994, 0.349999994)
obj3.BackSurface = Enum.SurfaceType.SmoothNoOutlines
obj3.Anchored = true
obj3.BrickColor = BrickColor.new("Black")
obj3.Friction = 0.30000001192093
obj3.Shape = Enum.PartType.Ball
obj3.Name = "handletopcap"
obj3.Parent = obj1
 
-- 4 - handlebottomcap
local obj4 = Instance.new("Part")
obj4.CFrame = CFrame.new(Vector3.new(20.9725285, 6.14502859, -134.399918)) * CFrame.Angles(0, 1.5707963705063, 0)
obj4.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
obj4.TopSurface = Enum.SurfaceType.SmoothNoOutlines
obj4.RightSurface = Enum.SurfaceType.SmoothNoOutlines
obj4.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
obj4.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
obj4.Material = Enum.Material.Concrete
obj4.Size = Vector3.new(0.25, 0.25, 0.25)
obj4.BackSurface = Enum.SurfaceType.SmoothNoOutlines
obj4.Anchored = true
obj4.BrickColor = BrickColor.new("Black")
obj4.Friction = 0.30000001192093
obj4.Shape = Enum.PartType.Ball
obj4.Name = "handlebottomcap"
obj4.Parent = obj1
 
-- 5 - handleguardmid
local obj5 = Instance.new("Part")
obj5.CFrame = CFrame.new(Vector3.new(19.9474983, 6.14502859, -134.399918)) * CFrame.Angles(0, 1.5707963705063, 0)
obj5.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
obj5.TopSurface = Enum.SurfaceType.SmoothNoOutlines
obj5.RightSurface = Enum.SurfaceType.SmoothNoOutlines
obj5.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
obj5.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
obj5.Material = Enum.Material.Concrete
obj5.Size = Vector3.new(0.349999994, 0.349999994, 0.100000001)
obj5.BackSurface = Enum.SurfaceType.SmoothNoOutlines
obj5.Anchored = true
obj5.BrickColor = BrickColor.new("Black")
obj5.Friction = 0.30000001192093
obj5.Shape = Enum.PartType.Block
obj5.Name = "handleguardmid"
obj5.Parent = obj1
 
-- 6 - handleguardcap1
local obj6 = Instance.new("Part")
obj6.CFrame = CFrame.new(Vector3.new(19.9474983, 6.32502794, -134.399918)) * CFrame.Angles(-3.1415927410126, 0, -3.1415927410126)
obj6.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
obj6.TopSurface = Enum.SurfaceType.SmoothNoOutlines
obj6.RightSurface = Enum.SurfaceType.SmoothNoOutlines
obj6.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
obj6.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
obj6.Material = Enum.Material.Concrete
obj6.Size = Vector3.new(0.100000001, 0.349999994, 0.349999994)
obj6.BackSurface = Enum.SurfaceType.SmoothNoOutlines
obj6.Anchored = true
obj6.BrickColor = BrickColor.new("Black")
obj6.Friction = 0.30000001192093
obj6.Shape = Enum.PartType.Cylinder
obj6.Name = "handleguardcap1"
obj6.Parent = obj1
 
-- 7 - handleguardcap2
local obj7 = Instance.new("Part")
obj7.CFrame = CFrame.new(Vector3.new(19.9474983, 5.97502899, -134.399918)) * CFrame.Angles(-3.1415927410126, 0, -3.1415927410126)
obj7.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
obj7.TopSurface = Enum.SurfaceType.SmoothNoOutlines
obj7.RightSurface = Enum.SurfaceType.SmoothNoOutlines
obj7.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
obj7.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
obj7.Material = Enum.Material.Concrete
obj7.Size = Vector3.new(0.100000009, 0.349999994, 0.349999994)
obj7.BackSurface = Enum.SurfaceType.SmoothNoOutlines
obj7.Anchored = true
obj7.BrickColor = BrickColor.new("Black")
obj7.Friction = 0.30000001192093
obj7.Shape = Enum.PartType.Cylinder
obj7.Name = "handleguardcap2"
obj7.Parent = obj1
 
-- 8 - big ass knife
local obj8 = Instance.new("Part")
obj8.CFrame = CFrame.new(Vector3.new(18.4375095, 6.14502859, -134.401321)) * CFrame.Angles(0, 1.5707963705063, 0)
obj8.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
obj8.TopSurface = Enum.SurfaceType.SmoothNoOutlines
obj8.RightSurface = Enum.SurfaceType.SmoothNoOutlines
obj8.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
obj8.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
obj8.Material = Enum.Material.Metal
obj8.Size = Vector3.new(0.0500000007, 0.280000001, 0.839999795)
obj8.BackSurface = Enum.SurfaceType.SmoothNoOutlines
obj8.Anchored = true
obj8.BrickColor = BrickColor.new("Lily white")
obj8.Friction = 0.30000001192093
obj8.Shape = Enum.PartType.Block
obj8.Name = "big ass knife"
obj8.Parent = obj1
 
-- 9 - Mesh
local obj9 = Instance.new("BlockMesh")
obj9.Scale = Vector3.new(0.5, 1, 1)
obj9.Parent = obj8
 
-- 10 - big ass knife
local obj10 = Instance.new("Part")
obj10.CFrame = CFrame.new(Vector3.new(19.7425137, 6.14502859, -134.401321)) * CFrame.Angles(0, 1.5707963705063, 0)
obj10.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
obj10.TopSurface = Enum.SurfaceType.SmoothNoOutlines
obj10.RightSurface = Enum.SurfaceType.SmoothNoOutlines
obj10.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
obj10.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
obj10.Material = Enum.Material.Metal
obj10.Size = Vector3.new(0.0500000007, 0.280000001, 0.289999962)
obj10.BackSurface = Enum.SurfaceType.SmoothNoOutlines
obj10.Anchored = true
obj10.BrickColor = BrickColor.new("Lily white")
obj10.Friction = 0.30000001192093
obj10.Shape = Enum.PartType.Block
obj10.Name = "big ass knife"
obj10.Parent = obj1
local knife = obj10
 
-- 11 - Mesh
local obj11 = Instance.new("BlockMesh")
obj11.Scale = Vector3.new(0.5, 1, 1)
obj11.Parent = obj10
 
-- 12 - big ass knife
local obj12 = Instance.new("Part")
obj12.CFrame = CFrame.new(Vector3.new(19.1075306, 6.08502865, -134.401321)) * CFrame.Angles(0, 1.5707963705063, 0)
obj12.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
obj12.TopSurface = Enum.SurfaceType.SmoothNoOutlines
obj12.RightSurface = Enum.SurfaceType.SmoothNoOutlines
obj12.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
obj12.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
obj12.Material = Enum.Material.Metal
obj12.Size = Vector3.new(0.0500000007, 0.159999996, 0.979999959)
obj12.BackSurface = Enum.SurfaceType.SmoothNoOutlines
obj12.Anchored = true
obj12.BrickColor = BrickColor.new("Lily white")
obj12.Friction = 0.30000001192093
obj12.Shape = Enum.PartType.Block
obj12.Name = "big ass knife"
obj12.Parent = obj1
 
-- 13 - Mesh
local obj13 = Instance.new("BlockMesh")
obj13.Scale = Vector3.new(0.5, 1, 1)
obj13.Parent = obj12
 
-- 14 - serration
local obj14 = Instance.new("WedgePart")
obj14.CFrame = CFrame.new(Vector3.new(19.4963322, 6.15381575, -134.400375)) * CFrame.Angles(1.5707963705063, -0.78539824485779, -1.5707963705063)
obj14.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
obj14.TopSurface = Enum.SurfaceType.SmoothNoOutlines
obj14.RightSurface = Enum.SurfaceType.SmoothNoOutlines
obj14.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
obj14.Material = Enum.Material.Metal
obj14.Size = Vector3.new(0.0500000007, 0.200000003, 0.200000003)
obj14.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
obj14.BackSurface = Enum.SurfaceType.SmoothNoOutlines
obj14.Anchored = true
obj14.BrickColor = BrickColor.new("Lily white")
obj14.Friction = 0.30000001192093
obj14.Name = "serration"
obj14.Parent = obj1
 
-- 15 - Mesh
local obj15 = Instance.new("BlockMesh")
obj15.Scale = Vector3.new(0.5, 1, 1)
obj15.Parent = obj14
 
-- 16 - serration
local obj16 = Instance.new("WedgePart")
obj16.CFrame = CFrame.new(Vector3.new(19.2763138, 6.15381575, -134.400375)) * CFrame.Angles(1.5707963705063, -0.78539824485779, -1.5707963705063)
obj16.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
obj16.TopSurface = Enum.SurfaceType.SmoothNoOutlines
obj16.RightSurface = Enum.SurfaceType.SmoothNoOutlines
obj16.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
obj16.Material = Enum.Material.Metal
obj16.Size = Vector3.new(0.0500000007, 0.200000003, 0.200000003)
obj16.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
obj16.BackSurface = Enum.SurfaceType.SmoothNoOutlines
obj16.Anchored = true
obj16.BrickColor = BrickColor.new("Lily white")
obj16.Friction = 0.30000001192093
obj16.Name = "serration"
obj16.Parent = obj1
 
-- 17 - Mesh
local obj17 = Instance.new("BlockMesh")
obj17.Scale = Vector3.new(0.5, 1, 1)
obj17.Parent = obj16
 
-- 18 - serration
local obj18 = Instance.new("WedgePart")
obj18.CFrame = CFrame.new(Vector3.new(19.3863068, 6.15381575, -134.400375)) * CFrame.Angles(1.5707963705063, -0.78539824485779, -1.5707963705063)
obj18.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
obj18.TopSurface = Enum.SurfaceType.SmoothNoOutlines
obj18.RightSurface = Enum.SurfaceType.SmoothNoOutlines
obj18.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
obj18.Material = Enum.Material.Metal
obj18.Size = Vector3.new(0.0500000007, 0.200000003, 0.200000003)
obj18.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
obj18.BackSurface = Enum.SurfaceType.SmoothNoOutlines
obj18.Anchored = true
obj18.BrickColor = BrickColor.new("Lily white")
obj18.Friction = 0.30000001192093
obj18.Name = "serration"
obj18.Parent = obj1
 
-- 19 - Mesh
local obj19 = Instance.new("BlockMesh")
obj19.Scale = Vector3.new(0.5, 1, 1)
obj19.Parent = obj18
 
-- 20 - serration
local obj20 = Instance.new("WedgePart")
obj20.CFrame = CFrame.new(Vector3.new(19.5963173, 6.15381575, -134.400375)) * CFrame.Angles(1.5707963705063, -0.78539824485779, -1.5707963705063)
obj20.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
obj20.TopSurface = Enum.SurfaceType.SmoothNoOutlines
obj20.RightSurface = Enum.SurfaceType.SmoothNoOutlines
obj20.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
obj20.Material = Enum.Material.Metal
obj20.Size = Vector3.new(0.0500000007, 0.200000003, 0.200000003)
obj20.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
obj20.BackSurface = Enum.SurfaceType.SmoothNoOutlines
obj20.Anchored = true
obj20.BrickColor = BrickColor.new("Lily white")
obj20.Friction = 0.30000001192093
obj20.Name = "serration"
obj20.Parent = obj1
 
-- 21 - Mesh
local obj21 = Instance.new("BlockMesh")
obj21.Scale = Vector3.new(0.5, 1, 1)
obj21.Parent = obj20
 
-- 22 - serration
local obj22 = Instance.new("WedgePart")
obj22.CFrame = CFrame.new(Vector3.new(19.1663074, 6.15381575, -134.400375)) * CFrame.Angles(1.5707963705063, -0.78539824485779, -1.5707963705063)
obj22.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
obj22.TopSurface = Enum.SurfaceType.SmoothNoOutlines
obj22.RightSurface = Enum.SurfaceType.SmoothNoOutlines
obj22.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
obj22.Material = Enum.Material.Metal
obj22.Size = Vector3.new(0.0500000007, 0.200000003, 0.200000003)
obj22.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
obj22.BackSurface = Enum.SurfaceType.SmoothNoOutlines
obj22.Anchored = true
obj22.BrickColor = BrickColor.new("Lily white")
obj22.Friction = 0.30000001192093
obj22.Name = "serration"
obj22.Parent = obj1
 
-- 23 - Mesh
local obj23 = Instance.new("BlockMesh")
obj23.Scale = Vector3.new(0.5, 1, 1)
obj23.Parent = obj22
 
-- 24 - serration
local obj24 = Instance.new("WedgePart")
obj24.CFrame = CFrame.new(Vector3.new(18.9663048, 6.15381575, -134.400375)) * CFrame.Angles(1.5707963705063, -0.78539824485779, -1.5707963705063)
obj24.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
obj24.TopSurface = Enum.SurfaceType.SmoothNoOutlines
obj24.RightSurface = Enum.SurfaceType.SmoothNoOutlines
obj24.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
obj24.Material = Enum.Material.Metal
obj24.Size = Vector3.new(0.0500000007, 0.200000003, 0.200000003)
obj24.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
obj24.BackSurface = Enum.SurfaceType.SmoothNoOutlines
obj24.Anchored = true
obj24.BrickColor = BrickColor.new("Lily white")
obj24.Friction = 0.30000001192093
obj24.Name = "serration"
obj24.Parent = obj1
 
-- 25 - Mesh
local obj25 = Instance.new("BlockMesh")
obj25.Scale = Vector3.new(0.5, 1, 1)
obj25.Parent = obj24
 
-- 26 - serration
local obj26 = Instance.new("WedgePart")
obj26.CFrame = CFrame.new(Vector3.new(18.8562984, 6.15381575, -134.400375)) * CFrame.Angles(1.5707963705063, -0.78539824485779, -1.5707963705063)
obj26.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
obj26.TopSurface = Enum.SurfaceType.SmoothNoOutlines
obj26.RightSurface = Enum.SurfaceType.SmoothNoOutlines
obj26.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
obj26.Material = Enum.Material.Metal
obj26.Size = Vector3.new(0.0500000007, 0.200000003, 0.200000003)
obj26.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
obj26.BackSurface = Enum.SurfaceType.SmoothNoOutlines
obj26.Anchored = true
obj26.BrickColor = BrickColor.new("Lily white")
obj26.Friction = 0.30000001192093
obj26.Name = "serration"
obj26.Parent = obj1
 
-- 27 - Mesh
local obj27 = Instance.new("BlockMesh")
obj27.Scale = Vector3.new(0.5, 1, 1)
obj27.Parent = obj26
 
-- 28 - serration
local obj28 = Instance.new("WedgePart")
obj28.CFrame = CFrame.new(Vector3.new(19.0663071, 6.15381575, -134.400375)) * CFrame.Angles(1.5707963705063, -0.78539824485779, -1.5707963705063)
obj28.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
obj28.TopSurface = Enum.SurfaceType.SmoothNoOutlines
obj28.RightSurface = Enum.SurfaceType.SmoothNoOutlines
obj28.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
obj28.Material = Enum.Material.Metal
obj28.Size = Vector3.new(0.0500000007, 0.200000003, 0.200000003)
obj28.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
obj28.BackSurface = Enum.SurfaceType.SmoothNoOutlines
obj28.Anchored = true
obj28.BrickColor = BrickColor.new("Lily white")
obj28.Friction = 0.30000001192093
obj28.Name = "serration"
obj28.Parent = obj1
 
-- 29 - Mesh
local obj29 = Instance.new("BlockMesh")
obj29.Scale = Vector3.new(0.5, 1, 1)
obj29.Parent = obj28
 
-- 30 - knifetip1
local obj30 = Instance.new("WedgePart")
obj30.CFrame = CFrame.new(Vector3.new(18.0163059, 6.14381599, -134.400375)) * CFrame.Angles(1.5707963705063, -0.78539824485779, -1.5707963705063)
obj30.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
obj30.TopSurface = Enum.SurfaceType.SmoothNoOutlines
obj30.RightSurface = Enum.SurfaceType.SmoothNoOutlines
obj30.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
obj30.Material = Enum.Material.Metal
obj30.Size = Vector3.new(0.0500000007, 0.200000003, 0.200000003)
obj30.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
obj30.BackSurface = Enum.SurfaceType.SmoothNoOutlines
obj30.Anchored = true
obj30.BrickColor = BrickColor.new("Lily white")
obj30.Friction = 0.30000001192093
obj30.Name = "knifetip1"
obj30.Parent = obj1
 
-- 31 - Mesh
local obj31 = Instance.new("BlockMesh")
obj31.Scale = Vector3.new(0.5, 1, 1)
obj31.Parent = obj30
 
-- 32 - redstuff
local obj32 = Instance.new("Part")
obj32.CFrame = CFrame.new(Vector3.new(19.9470005, 5.9749999, -134.399994)) * CFrame.Angles(-0, 0, -0)
obj32.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
obj32.TopSurface = Enum.SurfaceType.SmoothNoOutlines
obj32.RightSurface = Enum.SurfaceType.SmoothNoOutlines
obj32.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
obj32.Material = Enum.Material.SmoothPlastic
obj32.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
obj32.Size = Vector3.new(0.0500000007, 0.360000014, 0.360000014)
obj32.BackSurface = Enum.SurfaceType.SmoothNoOutlines
obj32.BrickColor = BrickColor.new("Institutional white")
obj32.Friction = 0.30000001192093
obj32.Shape = Enum.PartType.Cylinder
obj32.Name = "redstuff"
obj32.Anchored = true
obj32.Parent = obj1
 
 
-- 33 - redstuff
local obj33 = Instance.new("Part")
obj33.CFrame = CFrame.new(Vector3.new(18.9800053, 6.1400156, -134.404984)) * CFrame.Angles(-0, 0, -0)
obj33.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
obj33.TopSurface = Enum.SurfaceType.SmoothNoOutlines
obj33.RightSurface = Enum.SurfaceType.SmoothNoOutlines
obj33.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
obj33.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
obj33.Material = Enum.Material.SmoothPlastic
obj33.Size = Vector3.new(1.81999993, 0.100000001, 0.0500000007)
obj33.BackSurface = Enum.SurfaceType.SmoothNoOutlines
obj33.BrickColor = BrickColor.new("Institutional white")
obj33.Friction = 0.30000001192093
obj33.Shape = Enum.PartType.Block
obj33.Name = "redstuff"
obj33.Anchored = true
obj33.Parent = obj1
 
-- 34 - redstuff
local obj34 = Instance.new("Part")
obj34.CFrame = CFrame.new(Vector3.new(19.9470005, 6.32499981, -134.399994)) * CFrame.Angles(-0, 0, -0)
obj34.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
obj34.TopSurface = Enum.SurfaceType.SmoothNoOutlines
obj34.RightSurface = Enum.SurfaceType.SmoothNoOutlines
obj34.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
obj34.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
obj34.Size = Vector3.new(0.0500000007, 0.360000014, 0.360000014)
obj34.Material = Enum.Material.SmoothPlastic
obj34.BackSurface = Enum.SurfaceType.SmoothNoOutlines
obj34.BrickColor = BrickColor.new("Institutional white")
obj34.Friction = 0.30000001192093
obj34.Shape = Enum.PartType.Cylinder
obj34.Name = "redstuff"
obj34.Anchored = true
obj34.Parent = obj1
 
-- 35 - redstuff
local obj35 = Instance.new("Part")
obj35.CFrame = CFrame.new(Vector3.new(19.8830166, 6.14501476, -134.399963)) * CFrame.Angles(-0, 0, -0)
obj35.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
obj35.TopSurface = Enum.SurfaceType.SmoothNoOutlines
obj35.RightSurface = Enum.SurfaceType.SmoothNoOutlines
obj35.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
obj35.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
obj35.Size = Vector3.new(0.0500000007, 0.319999993, 0.319999993)
obj35.BackSurface = Enum.SurfaceType.SmoothNoOutlines
obj35.BrickColor = BrickColor.new("Institutional white")
obj35.Friction = 0.30000001192093
obj35.Shape = Enum.PartType.Cylinder
obj35.Material = Enum.Material.SmoothPlastic
obj35.Name = "redstuff"
obj35.Anchored = true
obj35.Parent = obj1
 
-- 36 - redstuff
local obj36 = Instance.new("Part")
obj36.CFrame = CFrame.new(Vector3.new(20.9430103, 6.14501476, -134.399963)) * CFrame.Angles(-0, 0, -0)
obj36.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
obj36.TopSurface = Enum.SurfaceType.SmoothNoOutlines
obj36.RightSurface = Enum.SurfaceType.SmoothNoOutlines
obj36.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
obj36.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
obj36.Material = Enum.Material.SmoothPlastic
obj36.Size = Vector3.new(0.0500000007, 0.25999999, 0.25999999)
obj36.BackSurface = Enum.SurfaceType.SmoothNoOutlines
obj36.BrickColor = BrickColor.new("Institutional white")
obj36.Friction = 0.30000001192093
obj36.Shape = Enum.PartType.Cylinder
obj36.Name = "redstuff"
obj36.Anchored = true
obj36.Parent = obj1
 
-- 37 - redstuff
local obj37 = Instance.new("WedgePart")
obj37.CFrame = CFrame.new(Vector3.new(18.066288, 6.14381599, -134.400375)) * CFrame.Angles(1.5707963705063, -0.78539824485779, -1.5707963705063)
obj37.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
obj37.TopSurface = Enum.SurfaceType.SmoothNoOutlines
obj37.RightSurface = Enum.SurfaceType.SmoothNoOutlines
obj37.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
obj37.Material = Enum.Material.SmoothPlastic
obj37.Size = Vector3.new(0.0500000007, 0.0700000003, 0.0700000003)
obj37.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
obj37.BackSurface = Enum.SurfaceType.SmoothNoOutlines
obj37.Anchored = true
obj37.BrickColor = BrickColor.new("Institutional white")
obj37.Friction = 0.30000001192093
obj37.Name = "redstuff"
obj37.Anchored = true
obj37.Parent = obj1
 
-- 38 - redstuff
local obj38 = Instance.new("Part")
obj38.CFrame = CFrame.new(Vector3.new(20.1230125, 6.14501476, -134.399979)) * CFrame.Angles(-0, 0, -0)
obj38.LeftSurface = Enum.SurfaceType.SmoothNoOutlines
obj38.TopSurface = Enum.SurfaceType.SmoothNoOutlines
obj38.RightSurface = Enum.SurfaceType.SmoothNoOutlines
obj38.FrontSurface = Enum.SurfaceType.SmoothNoOutlines
obj38.BottomSurface = Enum.SurfaceType.SmoothNoOutlines
obj38.Material = Enum.Material.SmoothPlastic
obj38.Size = Vector3.new(0.0500000007, 0.25999999, 0.25999999)
obj38.BackSurface = Enum.SurfaceType.SmoothNoOutlines
obj38.BrickColor = BrickColor.new("Institutional white")
obj38.Friction = 0.30000001192093
obj38.Shape = Enum.PartType.Cylinder
obj38.Name = "redstuff"
obj38.Anchored = true
obj38.Parent = obj1
 
local function recurse(objnum)
    table.insert(knifeparts,{objnum,objnum.Parent})
    for i,v in pairs(objnum:GetChildren()) do
        recurse(v)
    end
end
 
recurse(obj1)
 
local audio = Instance.new('Sound',knife)
audio.Volume = 2
 
local audio2 = Instance.new('Sound',knife)
audio2.Volume = 2
 
local holdpart = Instance.new("Part")
holdpart.Parent = me
holdpart.Size = Vector3.new(0.4, 0.4, 0.2)
holdpart.Position = me.Head.Position + Vector3.new(0, 1, 0)
holdpart.BrickColor = BrickColor.new("Burnt Sienna")
 
local previous = nil
for i,v in pairs(obj1:GetChildren()) do
    if v:IsA('BasePart') then
        if previous then
            local weld = Instance.new('Weld',v)
            weld.Part0 = v
            weld.Part1 = previous
            weld.C0 = v.CFrame:inverse() * previous.CFrame
            previous.Anchored = false
            previous.CanCollide = false
            local vee = v
            weld.AncestryChanged:connect(function(mez,par)
                wait()
                weld.Parent = vee
            end)
        end
        previous = v
    end
end
previous.Anchored = false
previous.CanCollide = false
 
local holdpartweld = Instance.new("Weld", me.Torso)
holdpartweld.Part0 = me.Torso
holdpartweld.Part1 = holdpart
holdpartweld.C0 = CFrame.Angles(0, 0, 0) * CFrame.new(-1, -0.8, 0.15)
 
holdpartweld.AncestryChanged:connect(function(mez,par)
    if par ~= me.Torso then
        wait()
        holdpartweld.Parent = me.Torso
    end
end)
 
local knifeweld = Instance.new('Weld',me.Torso)
knifeweld.Part0 = me.Torso
knifeweld.Part1 = obj2
knifeweld.C1 = CFrame.Angles(0,math.rad(90),0) * CFrame.new(1, 0.8, 0.55)
knifeweld.AncestryChanged:connect(function(mez,par)
    if par ~= me.Torso then
        wait()
        knifeweld.Parent = me.Torso
    end
end)
local ScreenGui = Instance.new("ScreenGui")
local CustomizeGui = Instance.new("Frame")
local Customize = Instance.new("TextLabel")
local ClosestColor = Instance.new("TextLabel")
local Line = Instance.new("TextLabel")
local Color = Instance.new("ImageLabel")
local Close = Instance.new("TextButton")
local RedHue = Instance.new("TextLabel")
local GreenHue = Instance.new("TextLabel")
local RedInput = Instance.new("TextBox")
local BlueHue = Instance.new("TextLabel")
local GreenInput = Instance.new("TextBox")
local TransInput = Instance.new("TextBox")
local BlueInput = Instance.new("TextBox")
local Message = Instance.new("TextLabel")
local Message2 = Instance.new("TextLabel")
local TrailTransparency = Instance.new("TextLabel")
local TrailInput = Instance.new("TextBox")
local MusicOption = Instance.new("TextButton")
local ScreenOption = Instance.new("TextButton")
local ScreenOptionTxt = Instance.new("TextLabel")
local MusicOptionTxt = Instance.new("TextLabel")
 
-- Properties
 
ScreenGui.Parent = playergui
 
CustomizeGui.Name = "CustomizeGui"
CustomizeGui.Parent = ScreenGui
CustomizeGui.BackgroundColor3 = Color3.new(0.294118, 0.294118, 0.294118)
CustomizeGui.BackgroundTransparency = 0.5
CustomizeGui.BorderColor3 = Color3.new(0, 0, 0)
CustomizeGui.BorderSizePixel = 2
CustomizeGui.Position = UDim2.new(0, 0, 0.5, 0)
CustomizeGui.Size = UDim2.new(0.449999988, 0, 0.449999988, 0)
 
Customize.Name = "Customize"
Customize.Parent = CustomizeGui
Customize.BackgroundColor3 = Color3.new(0.294118, 0.294118, 0.294118)
Customize.BackgroundTransparency = 0.75
Customize.BorderSizePixel = 0
Customize.Size = UDim2.new(1, 0, 0.200000003, 0)
Customize.FontSize = Enum.FontSize.Size28
Customize.Text = "ACCENT COLOR CUSTOMIZATION"
Customize.TextColor3 = Color3.new(1, 1, 1)
Customize.TextScaled = true
Customize.TextSize = 25
Customize.TextStrokeTransparency = 0.5
Customize.TextWrapped = true
 
ClosestColor.Name = "ClosestColor"
ClosestColor.Parent = CustomizeGui
ClosestColor.BackgroundColor3 = Color3.new(1, 1, 1)
ClosestColor.BackgroundTransparency = 1
ClosestColor.Position = UDim2.new(0, 0, 0.850000024, 0)
ClosestColor.Size = UDim2.new(1, 0, 0.150000006, 0)
ClosestColor.Font = Enum.Font.SourceSansLight
ClosestColor.FontSize = Enum.FontSize.Size32
ClosestColor.Text = "Your color is closest to Institutional White"
ClosestColor.TextColor3 = Color3.new(1, 1, 1)
ClosestColor.TextSize = 30
ClosestColor.TextStrokeTransparency = 0.5
 
Line.Name = "Line"
Line.Parent = CustomizeGui
Line.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
Line.BackgroundTransparency = 0.5
Line.BorderColor3 = Color3.new(0, 0, 0)
Line.BorderSizePixel = 0
Line.Position = UDim2.new(0, 0, 0.200000003, 0)
Line.Size = UDim2.new(1, 0, 0.0299999993, 0)
Line.Font = Enum.Font.SourceSans
Line.FontSize = Enum.FontSize.Size14
Line.Text = " "
Line.TextSize = 14
 
Color.Name = "Color"
Color.Parent = CustomizeGui
Color.BackgroundColor3 = Color3.new(1, 1, 1)
Color.BorderSizePixel = 0
Color.Position = UDim2.new(0.699999988, 0, 0.419999987, 0)
Color.Size = UDim2.new(0.300000012, 0, 0.300000012, 0)
Color.SizeConstraint = Enum.SizeConstraint.RelativeYY
 
MusicOption.Parent = CustomizeGui
MusicOption.Name = "MusicOption"
MusicOption.BackgroundColor3 = Color3.new(0, 1, 0)
MusicOption.BorderSizePixel = 1
MusicOption.Position = UDim2.new(0.01, 0, -0.12, 0)
MusicOption.Size = UDim2.new(0.05, 0, 0.1, 0)
MusicOption.Text = ""
MusicOption.BackgroundTransparency = 0.5
 
ScreenOption.Parent = CustomizeGui
ScreenOption.Name = "ScreenOption"
ScreenOption.BackgroundColor3 = Color3.new(0, 1, 0)
ScreenOption.BorderSizePixel = 1
ScreenOption.Position = UDim2.new(0.01, 0, -0.23, 0)
ScreenOption.Size = UDim2.new(0.05, 0, 0.1, 0)
ScreenOption.Text = ""
ScreenOption.BackgroundTransparency = 0.5
 
ScreenOptionTxt.Name = "ScreenOptionTxt"
ScreenOptionTxt.Parent = CustomizeGui
ScreenOptionTxt.BackgroundColor3 = Color3.new(1, 1, 1)
ScreenOptionTxt.BackgroundTransparency = 1
ScreenOptionTxt.Position = UDim2.new(0.07, 0, -0.23, 0)
ScreenOptionTxt.Size = UDim2.new(1, 0, 0.07, 0)
ScreenOptionTxt.Font = Enum.Font.SourceSans
ScreenOptionTxt.FontSize = Enum.FontSize.Size24
ScreenOptionTxt.Text = "Psychopath Red Filter"
ScreenOptionTxt.TextColor3 = Color3.new(1, 1, 1)
ScreenOptionTxt.TextScaled = true
ScreenOptionTxt.TextSize = 20
ScreenOptionTxt.TextStrokeColor3 = Color3.new(0, 0, 0)
ScreenOptionTxt.TextStrokeTransparency = 0.5
ScreenOptionTxt.TextWrapped = true
ScreenOptionTxt.TextXAlignment = "Left"
 
MusicOptionTxt.Name = "MusicOptionTxt"
MusicOptionTxt.Parent = CustomizeGui
MusicOptionTxt.BackgroundColor3 = Color3.new(1, 1, 1)
MusicOptionTxt.BackgroundTransparency = 1
MusicOptionTxt.Position = UDim2.new(0.07, 0, -0.12, 0)
MusicOptionTxt.Size = UDim2.new(1, 0, 0.07, 0)
MusicOptionTxt.Font = Enum.Font.SourceSans
MusicOptionTxt.FontSize = Enum.FontSize.Size24
MusicOptionTxt.Text = "Psychopath Background Music"
MusicOptionTxt.TextColor3 = Color3.new(1, 1, 1)
MusicOptionTxt.TextScaled = true
MusicOptionTxt.TextSize = 20
MusicOptionTxt.TextStrokeColor3 = Color3.new(0, 0, 0)
MusicOptionTxt.TextStrokeTransparency = 0.5
MusicOptionTxt.TextWrapped = true
MusicOptionTxt.TextXAlignment = "Left"
 
Close.Name = "Close"
Close.Parent = CustomizeGui
Close.BackgroundColor3 = Color3.new(0.294118, 0.294118, 0.294118)
Close.BackgroundTransparency = 0.5
Close.BorderColor3 = Color3.new(0, 0, 0)
Close.BorderSizePixel = 2
Close.Position = UDim2.new(1.005, 0, 0, 0)
Close.Size = UDim2.new(0.100000001, 0, 0.2, 0)
Close.Font = Enum.Font.SourceSans
Close.FontSize = Enum.FontSize.Size14
Close.Text = "X"
Close.TextColor3 = Color3.new(1, 1, 1)
Close.TextScaled = true
Close.TextSize = 14
Close.TextStrokeTransparency = 0
Close.TextWrapped = true
 
RedHue.Name = "RedHue"
RedHue.Parent = CustomizeGui
RedHue.BackgroundColor3 = Color3.new(1, 1, 1)
RedHue.BackgroundTransparency = 1
RedHue.Position = UDim2.new(0.100000001, 0, 0.400000006, 0)
RedHue.Size = UDim2.new(0.300000012, 0, 0.100000001, 0)
RedHue.Font = Enum.Font.SourceSans
RedHue.FontSize = Enum.FontSize.Size24
RedHue.Text = "RED Hue Value: "
RedHue.TextColor3 = Color3.new(1, 1, 1)
RedHue.TextScaled = true
RedHue.TextSize = 20
RedHue.TextStrokeColor3 = Color3.new(1, 0, 0)
RedHue.TextStrokeTransparency = 0.75
RedHue.TextWrapped = true
 
GreenHue.Name = "GreenHue"
GreenHue.Parent = CustomizeGui
GreenHue.BackgroundColor3 = Color3.new(1, 1, 1)
GreenHue.BackgroundTransparency = 1
GreenHue.Position = UDim2.new(0.100000001, 0, 0.5, 0)
GreenHue.Size = UDim2.new(0.300000012, 0, 0.100000001, 0)
GreenHue.Font = Enum.Font.SourceSans
GreenHue.FontSize = Enum.FontSize.Size24
GreenHue.Text = "GREEN Hue Value:"
GreenHue.TextColor3 = Color3.new(1, 1, 1)
GreenHue.TextScaled = true
GreenHue.TextSize = 20
GreenHue.TextStrokeColor3 = Color3.new(0, 1, 0)
GreenHue.TextStrokeTransparency = 0.75
GreenHue.TextWrapped = true
 
RedInput.Name = "RedInput"
RedInput.Parent = CustomizeGui
RedInput.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
RedInput.BackgroundTransparency = 0.5
RedInput.BorderSizePixel = 0
RedInput.Position = UDim2.new(0.419999987, 0, 0.425000007, 0)
RedInput.Size = UDim2.new(0.200000003, 0, 0.075000003, 0)
RedInput.Font = Enum.Font.SourceSans
RedInput.FontSize = Enum.FontSize.Size14
RedInput.Text = "255"
RedInput.TextColor3 = Color3.new(1, 1, 1)
RedInput.TextSize = 14
RedInput.TextStrokeTransparency = 0
 
BlueHue.Name = "BlueHue"
BlueHue.Parent = CustomizeGui
BlueHue.BackgroundColor3 = Color3.new(1, 1, 1)
BlueHue.BackgroundTransparency = 1
BlueHue.Position = UDim2.new(0.100000001, 0, 0.600000024, 0)
BlueHue.Size = UDim2.new(0.300000012, 0, 0.100000001, 0)
BlueHue.Font = Enum.Font.SourceSans
BlueHue.FontSize = Enum.FontSize.Size24
BlueHue.Text = "BLUE Hue Value:"
BlueHue.TextColor3 = Color3.new(1, 1, 1)
BlueHue.TextScaled = true
BlueHue.TextSize = 20
BlueHue.TextStrokeColor3 = Color3.new(0, 0, 1)
BlueHue.TextStrokeTransparency = 0.75
BlueHue.TextWrapped = true
 
TrailTransparency.Name = "TrailTransparency"
TrailTransparency.Parent = CustomizeGui
TrailTransparency.BackgroundColor3 = Color3.new(1, 1, 1)
TrailTransparency.BackgroundTransparency = 1
TrailTransparency.Position = UDim2.new(0.090000001, 0, 0.700000024, 0)
TrailTransparency.Size = UDim2.new(0.310000012, 0, 0.100000001, 0)
TrailTransparency.Font = Enum.Font.SourceSans
TrailTransparency.FontSize = Enum.FontSize.Size24
TrailTransparency.Text = "Trail Transparency:"
TrailTransparency.TextColor3 = Color3.new(1, 1, 1)
TrailTransparency.TextScaled = true
TrailTransparency.TextSize = 20
TrailTransparency.TextStrokeColor3 = Color3.new(0, 0, 0)
TrailTransparency.TextWrapped = true
 
GreenInput.Name = "GreenInput"
GreenInput.Parent = CustomizeGui
GreenInput.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
GreenInput.BackgroundTransparency = 0.5
GreenInput.BorderSizePixel = 0
GreenInput.Position = UDim2.new(0.419999987, 0, 0.524999976, 0)
GreenInput.Size = UDim2.new(0.200000003, 0, 0.075000003, 0)
GreenInput.Font = Enum.Font.SourceSans
GreenInput.FontSize = Enum.FontSize.Size14
GreenInput.Text = "255"
GreenInput.TextColor3 = Color3.new(1, 1, 1)
GreenInput.TextSize = 14
GreenInput.TextStrokeTransparency = 0
 
TransInput.Name = "TransInput"
TransInput.Parent = CustomizeGui
TransInput.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
TransInput.BackgroundTransparency = 0.5
TransInput.BorderSizePixel = 0
TransInput.Position = UDim2.new(0.419999987, 0, 0.725000024, 0)
TransInput.Size = UDim2.new(0.200000003, 0, 0.075000003, 0)
TransInput.Font = Enum.Font.SourceSans
TransInput.FontSize = Enum.FontSize.Size14
TransInput.Text = "50"
TransInput.TextColor3 = Color3.new(1, 1, 1)
TransInput.TextSize = 14
TransInput.TextStrokeTransparency = 0
 
BlueInput.Name = "BlueInput"
BlueInput.Parent = CustomizeGui
BlueInput.BackgroundColor3 = Color3.new(0.137255, 0.137255, 0.137255)
BlueInput.BackgroundTransparency = 0.5
BlueInput.BorderSizePixel = 0
BlueInput.Position = UDim2.new(0.419999987, 0, 0.625, 0)
BlueInput.Size = UDim2.new(0.200000003, 0, 0.075000003, 0)
BlueInput.Font = Enum.Font.SourceSans
BlueInput.FontSize = Enum.FontSize.Size14
BlueInput.Text = "255"
BlueInput.TextColor3 = Color3.new(1, 1, 1)
BlueInput.TextSize = 14
BlueInput.TextStrokeTransparency = 0
 
Message.Name = "Message"
Message.Parent = CustomizeGui
Message.BackgroundColor3 = Color3.new(1, 1, 1)
Message.BackgroundTransparency = 1
Message.Position = UDim2.new(0, 0, 0.2500004, 0)
Message.Size = UDim2.new(1, 0, 0.100000006, 0)
Message.Font = Enum.Font.SourceSans
Message.FontSize = Enum.FontSize.Size18
Message.Text = "|| Inputs must be values ||"
Message.TextColor3 = Color3.new(1, 1, 1)
Message.TextScaled = true
Message.TextSize = 15
Message.TextStrokeTransparency = 0.75
Message.TextWrapped = true
 
local attun = Instance.new("Attachment", knife)
attun.Position = Vector3.new(0, 0.1, -1.75)
local atdos = Instance.new("Attachment", knife)
atdos.Position = Vector3.new(0, -0.1, 0.5)
local trail = Instance.new("Trail", knife)
trail.LightEmission = 0.5
trail.Attachment0 = attun
trail.Attachment1 = atdos
trail.Lifetime = 0.175
trail.MinLength = 0
trail.Enabled = false
 
function updatez()
    local rc = tonumber(RedInput.Text)
    local gc = tonumber(GreenInput.Text)
    local bc = tonumber(BlueInput.Text)
    local tcupd = tonumber(TransInput.Text)
    if rc == nil then
        rc = 0
    end
    if gc == nil then
        gc = 0
    end
    if bc == nil then
        bc = 0
    end
    if tcupd == nil then
        tcupd = 0
    end
    local tc = tcupd/100
    Color.BackgroundColor3 = Color3.fromRGB(rc,gc,bc)
    ClosestColor.Text = "Your color is closest to "..tostring(BrickColor.new(Color3.fromRGB(rc,gc,bc)))
    obj32.Color = Color3.fromRGB(rc,gc,bc)
    obj33.Color = Color3.fromRGB(rc,gc,bc)
    obj34.Color = Color3.fromRGB(rc,gc,bc)
    obj35.Color = Color3.fromRGB(rc,gc,bc)
    obj36.Color = Color3.fromRGB(rc,gc,bc)
    obj37.Color = Color3.fromRGB(rc,gc,bc)
    obj38.Color = Color3.fromRGB(rc,gc,bc)
    trail.Color = ColorSequence.new(Color3.fromRGB(rc, gc, bc))
    trail.Transparency = NumberSequence.new(tc)
    TrailTransparency.TextStrokeTransparency = tc
end
 
RedInput.Changed:connect(function(val)
    if val == "Text" and tonumber(RedInput.Text) then
        RedInput.Text = tostring(tonumber(RedInput.Text))
        if tonumber(RedInput.Text) > 255 then
            RedInput.Text = '255'
        end
    elseif val == "Text" then
        RedInput.Text = ""
    end
    updatez()
end)
GreenInput.Changed:connect(function(val)
    if val == "Text" and tonumber(GreenInput.Text) then
        GreenInput.Text = tostring(tonumber(GreenInput.Text))
        if tonumber(GreenInput.Text) > 255 then
            GreenInput.Text = '255'
        end
    elseif val == "Text" then
        GreenInput.Text = ""
    end
    updatez()
end)
BlueInput.Changed:connect(function(val)
    if val == "Text" and tonumber(BlueInput.Text) then
        BlueInput.Text = tostring(tonumber(BlueInput.Text))
        if tonumber(BlueInput.Text) > 255 then
            BlueInput.Text = '255'
        end
    elseif val == "Text" then
        BlueInput.Text = ""
    end
    updatez()
end)
TransInput.Changed:connect(function(val)
    if val == "Text" and tonumber(TransInput.Text) then
        TransInput.Text = tostring(tonumber(TransInput.Text))
        if tonumber(TransInput.Text) > 100 then
            TransInput.Text = '100'
        end
    elseif val == "Text" then
        TransInput.Text = ""
    end
    updatez()
end)
 
Close.MouseButton1Click:connect(function()
    if lerpz == false then
        lerpz = true
        if Close.Text ~= "+" then
            CustomizeGui:TweenPosition(UDim2.new(-0.45,0,0.5,0,Enum.EasingDirection.Out,Enum.EasingStyle.Quint,2))
            for i=1,10 do
                Close.TextTransparency = i/10
                Close.TextStrokeTransparency = i/10
                wait(0.01)
            end
            Close.Text = "+"
            for i=1,10 do
                Close.TextTransparency = (10-i+1)/10
                Close.TextStrokeTransparency = (10-i+1)/10
                wait(0.01)
            end
            lerpz = false
        else
            CustomizeGui:TweenPosition(UDim2.new(0,0,0.5,0,Enum.EasingDirection.Out,Enum.EasingStyle.Quint,2))
            for i=1,10 do
                Close.TextTransparency = i/10
                Close.TextStrokeTransparency = i/10
                wait(0.01)
            end
            Close.Text = "X"
            for i=1,10 do
                Close.TextTransparency = (10-i+1)/10
                Close.TextStrokeTransparency = (10-i+1)/10
                wait(0.01)
            end
            lerpz = false
        end
    end
end)
 
MusicOption.MouseButton1Click:connect(function()
    if canbackgroundmusic == true then
        canbackgroundmusic = false
        MusicOption.BackgroundColor3 = Color3.new(1, 0, 0)
    else
        canbackgroundmusic = true
        MusicOption.BackgroundColor3 = Color3.new(0, 1, 0)
    end
end)
 
ScreenOption.MouseButton1Click:connect(function()
    if cancolorfilter == true then
        cancolorfilter = false
        ScreenOption.BackgroundColor3 = Color3.new(1, 0, 0)
    else
        cancolorfilter = true
        ScreenOption.BackgroundColor3 = Color3.new(0, 1, 0)
    end
end)
 
function equip()
    local doit = coroutine.wrap(function()
    if me:FindFirstChild('Right Arm') and me:FindFirstChild('Torso') then
        acting = true
        local arm = me["Right Arm"]
        local arm2 = me["Left Arm"]
        local tors = me.Torso
        local weld = Instance.new('Weld',arm)
        weld.Part0 = arm
        weld.Part1 = tors
        weld.C0 = CFrame.new(-1.5,0,0)
        local weld2 = Instance.new("Weld", arm2)
        weld2.Part0 = arm2
        weld2.Part1 = tors
        weld2.C0 = CFrame.new(1.5, 0, 0)
        wait(0.001)
        for i = 0,1,0.1 do
            if me:FindFirstChild('Right Arm') == nil or me:FindFirstChild('Torso') == nil or weld == nil then return end
            weld.C0 = weld.C0:lerp(CFrame.new(-0.2,0.2,-0.5)*CFrame.Angles(0,-3.1,0.9),i)
            weld2.C0 = weld2.C0:lerp(CFrame.new(1.5, 0.6, 0) * CFrame.Angles(0,0,0.5),i)
            wait(0.001)
        end
        wait(0.15)
        trail.Enabled = true
        for i = 0,1,0.1 do
            if me:FindFirstChild('Right Arm') == nil or me:FindFirstChild('Torso') == nil or weld == nil then return end
            weld.C0 = weld.C0:lerp(CFrame.new(-0.5,2,0)*CFrame.Angles(0,0,-1.55),i)
            weld2.C0 = weld2.C0:lerp(CFrame.new(1.5, 0, 0), i)
            wait(0.001)
        end
        trail.Enabled = false
        wait(0.2)
        for i = 0,1,0.1 do
            if me:FindFirstChild('Right Arm') == nil or me:FindFirstChild('Torso') == nil or weld == nil then return end
            weld.C0 = weld.C0:lerp(CFrame.new(-1.5,0,0),i)
            wait(0.001)
        end
        weld:Destroy()
        weld2:Remove()
        if tors ~= nil then
            rightshoulderz:Clone().Parent = me.Torso
            leftshoulderz:Clone().Parent = me.Torso
        end
    end
    acting = false
    end)
    doit()
end
 
function kysnigga()
    if kyssing == true then return end
    kyssing = true
    acting = true
    decearingTHING = math.random(1, 100)
    if decearingTHING == 4 then
        decearingEGG = Instance.new("Sound", me.Torso)
        decearingEGG.SoundId = "rbxassetid://138084557"
        decearingEGG.PlaybackSpeed = math.random(10, 12) / 10
        decearingEGG.TimePosition = 0.2
        decearingEGG:Play()
    end
    me.Humanoid.WalkSpeed = 0
    me.Humanoid.JumpPower = 0
   
    local rightarm = Instance.new("Weld", me.Torso)
    rightarm.Part0 = me.Torso
    rightarm.Part1 = me["Right Arm"]
    rightarm.C0 = CFrame.Angles(0, 0, 0) * CFrame.new(1.5, 0, 0)
   
    local leftarm = Instance.new("Weld", me.Torso)
    leftarm.Part0 = me.Torso
    leftarm.Part1 = me["Left Arm"]
    leftarm.C0 = CFrame.Angles(0, 0, 0) * CFrame.new(-1.5, 0, 0)
   
    local tors = Instance.new("Weld", me.HumanoidRootPart)
    tors.Part0 = me.HumanoidRootPart
    tors.Part1 = me.Torso
    tors.C0 = CFrame.Angles(0, 0, 0) * CFrame.new(0, 0, 0)
   
    local rightleg = Instance.new("Weld", me.Torso)
    rightleg.Part0 = me.Torso
    rightleg.Part1 = me["Right Leg"]
    rightleg.C0 = CFrame.Angles(0, 0, 0) * CFrame.new(0.5, -2, 0)
   
    local leftleg = Instance.new("Weld", me.Torso)
    leftleg.Part0 = me.Torso
    leftleg.Part1 = me["Left Leg"]
    leftleg.C0 = CFrame.Angles(0, 0, 0) * CFrame.new(-0.5, -2, 0)
   
    for i = 0, 1, 0.03 do
        tors.C0 = tors.C0:lerp(CFrame.new(0, -1.5, 0) * CFrame.Angles(math.rad(-10), 0, 0), i)
        leftleg.C0 = leftleg.C0:lerp(CFrame.new(-0.5, -1, 0) * CFrame.Angles(math.rad(-80), 0, 0), i)
        rightleg.C0 = rightleg.C0:lerp(CFrame.new(0.5, -1, 0) * CFrame.Angles(math.rad(-80), 0, 0), i)
        rightarm.C0 = rightarm.C0:lerp(CFrame.new(1.5, 0, 0) * CFrame.Angles(math.rad(0), math.rad(0), 0), i)
        wait()
    end
    for i = 0, 1, 0.03 do
        tors.C0 = tors.C0:lerp(CFrame.new(0, -1.5, 0) * CFrame.Angles(math.rad(5), 0, 0), i)
        leftleg.C0 = leftleg.C0:lerp(CFrame.new(-0.5, -1, 0.15) * CFrame.Angles(math.rad(-95), 0, 0), i)
        rightleg.C0 = rightleg.C0:lerp(CFrame.new(0.5, -1, 0.15) * CFrame.Angles(math.rad(-95), 0, 0), i)
        rightarm.C0 = rightarm.C0:lerp(CFrame.new(1, 0.3, -1.5) * CFrame.Angles(math.rad(90), 0, math.rad(-35)), i)
        leftarm.C0 = leftarm.C0:lerp(CFrame.new(-1, 0.3, -1.5) * CFrame.Angles(math.rad(90), 0, math.rad(35)), i)
        knifeweld.C1 = knifeweld.C1:lerp(CFrame.new(1.35, 0, 1) * CFrame.Angles(1.55, math.rad(-180), 1), i)
        wait()
    end
    local bleedzer = Instance.new('Part',me.Torso)
    bleedzer.CFrame = me.Torso.CFrame
    bleedzer.Size = Vector3.new(0.1,0.1,0.1)
    bleedzer.Transparency = 1
    bleedzer.CanCollide = false
    local weld = Instance.new('Weld',bleedzer)
    weld.Part0 = bleedzer
    weld.Part1 = me.Torso
    weld.C0= CFrame.new(0,0,0)*CFrame.Angles(math.rad(-90),0,0)
    local woodpekker = coroutine.wrap(function()
        bleed(bleedzer)
    end)
    woodpekker()
    audio.SoundId = "rbxassetid://199977936"
    audio.PlaybackSpeed = 1.5
    audio:Play()
    audio2.SoundId = "rbxassetid://220834019"
    audio2.PlaybackSpeed = 1
    audio2.TimePosition = 0.1
    audio2:Play()
    for i = 0, 1, 0.1 do
        tors.C0 = tors.C0:lerp(CFrame.new(0, -1.5, 0) * CFrame.Angles(math.rad(-20), 0, 0), i)
        leftleg.C0 = leftleg.C0:lerp(CFrame.new(-0.5, -1, -0.35) * CFrame.Angles(math.rad(-70), 0, 0), i)
        rightleg.C0 = rightleg.C0:lerp(CFrame.new(0.5, -1, -0.35) * CFrame.Angles(math.rad(-70), 0, 0), i)
        rightarm.C0 = rightarm.C0:lerp(CFrame.new(1, 0, 0) * CFrame.Angles(math.rad(70), 0, math.rad(-35)), i)
        leftarm.C0 = leftarm.C0:lerp(CFrame.new(-1, 0, 0) * CFrame.Angles(math.rad(70), 0, math.rad(35)), i)
        knifeweld.C1 = knifeweld.C1:lerp(CFrame.new(1.35, 0, 1) * CFrame.Angles(1.55, math.rad(-180), 1), i)
        wait()
    end
    wait(1)
    audio.SoundId = "rbxassetid://210943487"
    audio.TimePosition = 0.2
    audio.PlaybackSpeed = 0.75
    audio:Play()
    for i = 0, 1, 0.03 do
        tors.C0 = tors.C0:lerp(CFrame.new(0, -1.5, 0) * CFrame.Angles(math.rad(-20), 0, 0), i)
        leftleg.C0 = leftleg.C0:lerp(CFrame.new(-0.5, -1, -0.35) * CFrame.Angles(math.rad(-70), 0, 0), i)
        rightleg.C0 = rightleg.C0:lerp(CFrame.new(0.5, -1, -0.35) * CFrame.Angles(math.rad(-70), 0, 0), i)
        rightarm.C0 = rightarm.C0:lerp(CFrame.new(1, 0.3, -1.5) * CFrame.Angles(math.rad(70), 0, math.rad(-35)), i)
        leftarm.C0 = leftarm.C0:lerp(CFrame.new(-1, 0.3, -1.5) * CFrame.Angles(math.rad(70), 0, math.rad(35)), i)
        knifeweld.C1 = knifeweld.C1:lerp(CFrame.new(1.35, 0, 1) * CFrame.Angles(1.55, math.rad(-180), 1), i)
        wait()
    end
    for i = 0, 1, 0.03 do
        rightarm.C0 = rightarm.C0:lerp(CFrame.new(1.5, 0, -0.4) * CFrame.Angles(math.rad(30), 0, math.rad(0)), i)
        leftarm.C0 = leftarm.C0:lerp(CFrame.new(-1.5, 0, -0.4) * CFrame.Angles(math.rad(30), 0, math.rad(0)), i)
        knifeweld.C1 = knifeweld.C1:lerp(CFrame.fromEulerAnglesXYZ(1.55, math.rad(-90), 1.55) * CFrame.new(0, 0.95, 0), i)
        wait()
    end
    wait(0.24)
    if me:FindFirstChildOfClass('Humanoid') then
        me:FindFirstChildOfClass('Humanoid').Health = 0
    end
    wait(0.01)
    killz(me,me.Torso.Name,nil,nil,true)
   
    tors:Remove()
    rightarm:Remove()
    rightleg:Remove()
    leftleg:Remove()
    leftarm:Remove()
    rightshoulderz:Clone().Parent = me.Torso
    leftshoulderz:Clone().Parent = me.Torso
    torsojoint:Clone().Parent = me.HumanoidRootPart
    lefthipz:Clone().Parent = me.Torso
    righthipz:Clone().Parent = me.Torso
    me.Humanoid.JumpPower = 50
    me.Humanoid.WalkSpeed = 16
    acting = false
    canClick = true
    doing = false
    hit = false
    kyssing = false
    if decearingTHING == 4 then
        decearingEGG:Remove()
    end
end
 
function bleedout()
    local doit = coroutine.wrap(function()
        local targe = grabbed
        local num = 0
        while targe and targe:FindFirstChildOfClass('Humanoid') and targe:FindFirstChildOfClass('Humanoid').Health > 0 and num < 11 do
            if targe.Head:FindFirstChild('Died') then
                tone = math.random(6, 12) / 10
                targe.Head.Died.PlaybackSpeed = tone
                targe.Head.Died:Play()
            else
                local deathsound = Instance.new('Sound',targe.Head)
                deathsound.Name = "Died"
                deathsound.SoundId = 'rbxasset://sounds/uuhhh.mp3'
                deathsound.Volume = 0.65
                deathsound.EmitterSize = 5
                deathsound.MaxDistance = 150
                tone = math.random(5, 15) / 10
                targe.Head.Died.PlaybackSpeed = tone
                targe.Head.Died:Play()
            end
            targe:FindFirstChildOfClass('Humanoid').Health = targe:FindFirstChildOfClass('Humanoid').Health - 7
            num = num+1
            wait(0.325)
        end
        targe:FindFirstChildOfClass('Humanoid').Health = 0
        wait()
        killz(targe,'Head',nil,nil,false,true)
        wait(2)
        targe:Remove()
    end)
    doit()
end
 
function liedown()
    local doit = coroutine.wrap(function()
    local targe = grabbed
        wait(2)
        if targe and targe:FindFirstChildOfClass('Humanoid') then
            targe:FindFirstChildOfClass('Humanoid').PlatformStand = false
        end
    end)
    doit()
end
 
function grab()
    local doit = coroutine.wrap(function()
    acting = true
    me:FindFirstChildOfClass('Humanoid').WalkSpeed = me:FindFirstChildOfClass('Humanoid').WalkSpeed + 3
    local arm = me["Right Arm"]
    local tors = me.Torso
    local arm2 = me["Left Arm"]
    local humanroot = me.HumanoidRootPart
    local weld2 = Instance.new('Weld',arm)
    weld2.Part0 = arm
    weld2.Part1 = tors
    weld2.C0 = CFrame.new(-1.5,0,0) * CFrame.Angles(0, 0, 0)
    local weld3 = Instance.new('Weld',arm2)
    weld3.Part0 = arm2
    weld3.Part1 = tors
    weld3.C0 = CFrame.new(1.5,0,-0.3) * CFrame.Angles(0.3,0.1,0)
    for i = 0,1,0.05 do
        if me:FindFirstChild('Right Arm') == nil or me:FindFirstChild('Torso') == nil or weld2 == nil or humanroot == nil then return end
        weld2.C0 = weld2.C0:lerp(CFrame.new(-1.2,1.3,0.4)*CFrame.Angles(0.5,0,-1.2),i)
        weld3.C0 = weld3.C0:lerp(CFrame.new(1.2,1.3,0)*CFrame.Angles(0,0,1.2),i)
        knifeweld.C1 = CFrame.fromEulerAnglesXYZ(1.55, math.rad(-90), -1.55) * CFrame.new(0, 0.95, 0)
        wait(0.01)
    end
    grabbing = true
    trail.Enabled = true
    for i = 0,1,0.10 do
        if me:FindFirstChild('Right Arm') == nil or me:FindFirstChild('Torso') == nil or weld2 == nil or humanroot == nil then return end
        weld2.C0 = weld2.C0:lerp(CFrame.new(-0.9, 0.80, -1.1)* CFrame.Angles(-1.5, 0, -1.3), i)
        weld3.C0 = weld3.C0:lerp(CFrame.new(0.8, 1, -0.5)* CFrame.Angles(-1.5, 0, 1.1), i)
        wait(0.01)
    end
    trail.Enabled = false
    wait(0.5)
    grabbing = false
    me:FindFirstChildOfClass('Humanoid').WalkSpeed = me:FindFirstChildOfClass('Humanoid').WalkSpeed - 3
    if grabbed == nil then
        for i = 0,1,0.1 do
            if me:FindFirstChild('Right Arm') == nil or me:FindFirstChild('Torso') == nil then return end
            weld2.C0 = weld2.C0:lerp(CFrame.new(-1.5,0,0),i)
            weld3.C0 = weld3.C0:lerp(CFrame.new(1.5,0,0),i)
            knifeweld.C1 = CFrame.fromEulerAnglesXYZ(1.55, math.rad(-90), 1.55) * CFrame.new(0, 0.95, 0)
            wait(0.001)
        end
        weld2:Destroy()
        weld3:Destroy()
        rightshoulderz:Clone().Parent = me.Torso
            leftshoulderz:Clone().Parent = me.Torso
        acting = false
        canClick = true
    end
    end)
    doit()
end
 
function kill()
    paralyzed = false
    if grabbed.Torso:FindFirstChild("TargetWeld") == nil or grabbed:FindFirstChildOfClass('Humanoid').Health <= 0 then hardrelease() return end
    targetweld = grabbed.Torso.TargetWeld
    targetweld2 = nil
    local reee = grabbed:FindFirstChild("Left Arm")
    if reee and reee:FindFirstChild("Weld") then
        targetweld2 = reee.Weld
    end
    for i, v in pairs(grabbed:GetChildren()) do
        if v.Name == "Part" then
            v.CanCollide = true
        end
    end
    targetweld3pt = grabbed:FindFirstChild("Right Arm")
    local targetrightshoulder = rightshoulder
    local targetleftshoulder = leftshoulder
    local targetweld3 = Instance.new("Weld", targetweld3pt)
    targetweld3.Part0 = grabbed.Torso
    targetweld3.Part1 = targetweld3pt
    targetweld3.C0 = CFrame.Angles(0, 0, 0) * CFrame.new(1.5, 0, 0)
   
    local doit = coroutine.wrap(function()
    local arm = me["Right Arm"]
    local tors = grabbed.Torso
    local arm2 = me["Left Arm"]
    if arm:FindFirstChildOfClass('Weld') == nil or arm2:FindFirstChildOfClass('Weld') == nil then return end
    doing = true
    local weld2 = arm:FindFirstChildOfClass('Weld')
    local weld3 = arm2:FindFirstChildOfClass('Weld')
    local humanroot = me.HumanoidRootPart
   
    for i = 0,1,0.1 do
        if me:FindFirstChild('Right Arm') == nil or me:FindFirstChild('Torso') == nil or weld2 == nil or weld3 == nil then return end
        weld2.C0 = weld2.C0:lerp(CFrame.new(-0.9, 0.80, -1.1)* CFrame.Angles(-1.9, 0, -1.4), i)
        weld3.C0 = weld3.C0:lerp(CFrame.new(0.8, 0.5, -0.5)* CFrame.Angles(-1.5, 0.4, 1.1), i)
        wait(0.01)
    end
   
    audio:Stop()
    audio.SoundId = "rbxassetid://517040733"
    tone = math.random(1, 3)
    if tone == 1 then audio.PlaybackSpeed = 0.8 audio.TimePosition = 0.3 end
    if tone == 2 then audio.PlaybackSpeed = 1 audio.TimePosition = 0.1 end
    if tone == 3 then audio.PlaybackSpeed = 1.2 audio.TimePosition = 0.2 end
    audio:Play()
   
    local bleedpart = Instance.new("Part", grabbed)
    bleedpart.Size = Vector3.new(0.2, 0.2, 0.2)
    bleedpart.Color = Color3.new(115/225, 115/225, 115/225)
    bleedpart.CanCollide = false
    bleedpart.Position = grabbed.Head.Position + Vector3.new(0, 1, 0)
    bleedpart.Transparency = 1
   
    local bleedpartweld = Instance.new("Weld", grabbed.Torso)
    bleedpartweld.Part0 = grabbed.Torso
    bleedpartweld.Part1 = bleedpart
    bleedpartweld.C0 = CFrame.Angles(-1, 0, -0.35) * CFrame.new(0, 1, 0.8)
    local coru=coroutine.wrap(function()
    bleed(bleedpart)
    end)
    coru()
   
    local slightthrow = Instance.new("BodyThrust", grabbed.Torso)
    slightthrow.Force = Vector3.new(0, 0, -2500)
   
    local slightthrow2 = Instance.new("BodyAngularVelocity", grabbed.Torso)
    slightthrow2.AngularVelocity = Vector3.new(0, -1000, 0)
    slightthrow2.MaxTorque = Vector3.new(1000, 1000, 1000)
   
    if grabbed:FindFirstChildOfClass('Humanoid') then
        grabbed:FindFirstChildOfClass('Humanoid').PlatformStand = true
    end
   
    killz(grabbed,'Left Leg')
    killz(grabbed,'Left Arm')
    killz(grabbed,'Right Leg')
    killz(grabbed,'Right Arm')
   
    trail.Enabled = true
   
    for i = 0,1,0.2 do
        if me:FindFirstChild('Right Arm') == nil or me:FindFirstChild('Torso') == nil or weld2 == nil or weld3 == nil then return end
        weld2.C0 = weld2.C0:lerp(CFrame.new(-0.9, 1.7, -0.5)* CFrame.Angles(-0.25, 0, -1.4), i)
        weld3.C0 = weld3.C0:lerp(CFrame.new(0.8, 1.6, -0.5)* CFrame.Angles(-1.5, -1, 1.1), i)
        wait(0.01)
    end
   
    trail.Enabled = false
   
    bleedout()
   
    rightshoulderz:Clone().Parent = me.Torso
        leftshoulderz:Clone().Parent = me.Torso
    grabbed = nil
   
    if humanroot:FindFirstChild('Holder') then
        humanroot.Holder:Destroy()
    end
   
    wait(0.2)
    slightthrow:Remove()
    slightthrow2:Remove()
    for i = 0,1,0.05 do
        if me:FindFirstChild('Right Arm') == nil or me:FindFirstChild('Torso') == nil or weld2 == nil or weld3 == nil then return end
        weld2.C0 = weld2.C0:lerp(CFrame.new(-1.5, 0, 0)* CFrame.Angles(0, 0, 0), i)
        weld3.C0 = weld3.C0:lerp(CFrame.new(1.5, 0, 0)* CFrame.Angles(0, 0, 0), i)
        knifeweld.C1 = CFrame.fromEulerAnglesXYZ(1.55, math.rad(-90), 1.55) * CFrame.new(0, 0.95, 0)
        wait(0.01)
    end
   
    weld2:Destroy()
    weld3:Destroy()
    targetweld = nil
    targetweld2 = nil
    targetweld3 = nil
    rightshoulderz:Clone().Parent = me.Torso
    leftshoulderz:Clone().Parent = me.Torso
    acting = false
    canClick = true
    doing = false
    end)
    doit()
end
 
function finish()
    if finishing == true then return end
    finishing = true
    acting = true
    decearingTHING = math.random(1, 100)
    if decearingTHING == 4 then
        decearingEGG = Instance.new("Sound", me.Torso)
        decearingEGG.SoundId = "rbxassetid://138084557"
        decearingEGG.PlaybackSpeed = math.random(10, 12) / 10
        decearingEGG.TimePosition = 0.2
        decearingEGG:Play()
    end
    me.Humanoid.WalkSpeed = 0
    me.Humanoid.JumpPower = 0
   
    local rightarm = Instance.new("Weld", me.Torso)
    rightarm.Part0 = me.Torso
    rightarm.Part1 = me["Right Arm"]
    rightarm.C0 = CFrame.Angles(0, 0, 0) * CFrame.new(1.5, 0, 0)
   
    local tors = Instance.new("Weld", me.HumanoidRootPart)
    tors.Part0 = me.HumanoidRootPart
    tors.Part1 = me.Torso
    tors.C0 = CFrame.Angles(0, 0, 0) * CFrame.new(0, 0, 0)
   
    local rightleg = Instance.new("Weld", me.Torso)
    rightleg.Part0 = me.Torso
    rightleg.Part1 = me["Right Leg"]
    rightleg.C0 = CFrame.Angles(0, 0, 0) * CFrame.new(0.5, -2, 0)
   
    local leftleg = Instance.new("Weld", me.Torso)
    leftleg.Part0 = me.Torso
    leftleg.Part1 = me["Left Leg"]
    leftleg.C0 = CFrame.Angles(0, 0, 0) * CFrame.new(-0.5, -2, 0)
   
    for i = 0, 1, 0.05 do
        tors.C0 = tors.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(math.rad(15), 0, 0), i)
        leftleg.C0 = leftleg.C0:lerp(CFrame.new(-0.5, -2, 0.2) * CFrame.Angles(math.rad(-15), 0, 0), i)
        rightleg.C0 = rightleg.C0:lerp(CFrame.new(0.5, -2, 0.2) * CFrame.Angles(math.rad(-15), 0, 0), i)
        rightarm.C0 = rightarm.C0:lerp(CFrame.new(1.5, 1.9, 0) * CFrame.Angles(math.rad(179), math.rad(179), 0), i)
        wait()
    end
    for i=1,finishnum do
        local num1 = 0.5
        local num2 = 0.5
        local num3 = 0.25
    if finishnum ~= 1 then
        num3 = 0
    end
    trail.Enabled = true
    for i = 0, 1, num1 do
        tors.C0 = tors.C0:lerp(CFrame.new(0, -1.5, 0) * CFrame.Angles(math.rad(-60), 0, 0), i)
        leftleg.C0 = leftleg.C0:lerp(CFrame.new(-0.5, -1.5, 0) * CFrame.Angles(math.rad(0), 0, 0), i)
        rightleg.C0 = rightleg.C0:lerp(CFrame.new(0.5, -0.7, -1) * CFrame.Angles(math.rad(10), 0, 0), i)
        rightarm.C0 = rightarm.C0:lerp(CFrame.new(1.5, 1.9, -1) * CFrame.Angles(math.rad(160), math.rad(150), 0), i)
        wait()
    end
    wait()
    for i = 0, 1, num2 do
        tors.C0 = tors.C0:lerp(CFrame.new(0, -1, 0) * CFrame.Angles(math.rad(-20), 0, 0), i)
        leftleg.C0 = leftleg.C0:lerp(CFrame.new(-0.5, -1.5, 0) * CFrame.Angles(math.rad(-30), 0, 0), i)
        rightleg.C0 = rightleg.C0:lerp(CFrame.new(0.5, -0.7, -1) * CFrame.Angles(math.rad(-20), 0, 0), i)
        rightarm.C0 = rightarm.C0:lerp(CFrame.new(1.5, 1.9, 0.2) * CFrame.Angles(math.rad(250), math.rad(180), 0), i)
        wait()
    end
    trail.Enabled = false
    wait(num3)
    end
    wait()
    for i = 0, 1, 0.05 do
        tors.C0 = tors.C0:lerp(CFrame.new(0, 0, 0) * CFrame.Angles(0, 0, 0), i)
        leftleg.C0 = leftleg.C0:lerp(CFrame.new(-0.5, -2, 0) * CFrame.Angles(0, 0, 0), i)
        rightleg.C0 = rightleg.C0:lerp(CFrame.new(0.5, -2, 0) * CFrame.Angles(0, 0, 0), i)
        rightarm.C0 = rightarm.C0:lerp(CFrame.new(1.5, 0, 0) * CFrame.Angles(0, 0, 0), i)
        wait()
    end
    tors:Remove()
    rightarm:Remove()
    rightleg:Remove()
    leftleg:Remove()
    rightshoulderz:Clone().Parent = me.Torso
    leftshoulderz:Clone().Parent = me.Torso
    torsojoint:Clone().Parent = me.HumanoidRootPart
    lefthipz:Clone().Parent = me.Torso
    righthipz:Clone().Parent = me.Torso
    me.Humanoid.JumpPower = 50
    me.Humanoid.WalkSpeed = 16
    acting = false
    canClick = true
    doing = false
    hit = false
    finishing = false
    if decearingTHING == 4 then
        decearingEGG:Remove()
    end
end
 
function throw()
    if grabbed.Torso:FindFirstChild("TargetWeld") == nil or grabbed:FindFirstChildOfClass('Humanoid').Health <= 0 then return end
    paralyzed = false
    targetweld = grabbed.Torso.TargetWeld
    local ree = grabbed:FindFirstChild("Left Arm")
    targetweld2 =nil
    if ree and ree:FindFirstChild("Weld") then
        targetweld2 = ree.Weld
    end
   
    for i, v in pairs(grabbed:GetChildren()) do
        if v.Name == "Part" then
            v.CanCollide = true
        end
    end
   
   
    local doit = coroutine.wrap(function()
    local arm = me["Right Arm"]
    local tors = grabbed.Torso
    local arm2 = me["Left Arm"]
    local targrightshoulder = rightshoulder
   
    local targleftshoulder = leftshoulder
    if arm:FindFirstChildOfClass('Weld') == nil or arm2:FindFirstChildOfClass('Weld') == nil then return end
    doing = true
    local weld2 = arm:FindFirstChildOfClass('Weld')
    local weld3 = arm2:FindFirstChildOfClass('Weld')
    local humanroot = me.HumanoidRootPart
   
    for i = 0,1,0.2 do
        if me:FindFirstChild('Right Arm') == nil or me:FindFirstChild('Torso') == nil or weld2 == nil or weld3 == nil then return end
        weld2.C0 = weld2.C0:lerp(CFrame.new(-0.9, 1.7, -0.5)* CFrame.Angles(-0.25, 1, -1.4), i)
        weld3.C0 = weld3.C0:lerp(CFrame.new(0.8, 1.6, -0.5)* CFrame.Angles(-1.5, -1, 1.1), i)
        targetweld.C0 = targetweld.C0:lerp(CFrame.new(0, 1.5, 0)*CFrame.Angles(0, 0, 0), i)
        if targetweld2 then
            targetweld2.C0 = targetweld2.C0:lerp(CFrame.new(-1.5, 0, 0)*CFrame.Angles(0, 0, 0), i)
        end
        wait(0.01)
    end
   
    audio:Stop()
    audio.SoundId = "rbxassetid://536642316"
    tone = math.random(1, 3)
    if tone == 1 then audio.PlaybackSpeed = 0.8 audio.TimePosition = 0.08 end
    if tone == 2 then audio.PlaybackSpeed = 1 audio.TimePosition = 0.1 end
    if tone == 3 then audio.PlaybackSpeed = 1.2 audio.TimePosition = 0.12 end
    audio:Play()
   
    local slightthrow = Instance.new("BodyVelocity", grabbed.Torso)
    slightthrow.Velocity = Vector3.new(0,20,0)+(me.Torso.CFrame.lookVector*20)
    slightthrow.P = 5000
    slightthrow.MaxForce = Vector3.new(9000001,9000001,9000001)
    local point = grabbed.Torso.Position
    local aaaaaa = grabbed
    liedown()
   
    rightshoulderz:Clone().Parent = me.Torso
            leftshoulderz:Clone().Parent = me.Torso
    grabbed = nil
   
    if humanroot:FindFirstChild('Holder') then
        humanroot.Holder:Destroy()
    end
    local coru = coroutine.wrap(function()
        while aaaaaa and aaaaaa:FindFirstChild('Torso') and (aaaaaa.Torso.Position-point).magnitude < 5 do wait(0.001) end
        if aaaaaa:FindFirstChildOfClass('Humanoid') then
            aaaaaa:FindFirstChildOfClass('Humanoid').Name = "Humanoid"
            aaaaaa:FindFirstChildOfClass('Humanoid').JumpPower = 50
            aaaaaa:FindFirstChildOfClass('Humanoid').WalkSpeed = 16
        end
        slightthrow:Remove()
    end)
    coru()
   
    for i = 0,1,0.05 do
        if me:FindFirstChild('Right Arm') == nil or me:FindFirstChild('Torso') == nil or weld2 == nil or weld3 == nil then return end
        weld2.C0 = weld2.C0:lerp(CFrame.new(-1.5,0,0),i)
        weld3.C0 = weld3.C0:lerp(CFrame.new(1.5,0,0),i)
        wait(0.01)
    end
    weld2:Destroy()
    weld3:Destroy()
    targetweld:Remove()
    if targetweld2 then
        targetweld2:Remove()
    end
    if rightshoulder then
    rightshoulder:Clone().Parent = tors
    end
    if leftshoulder then
    leftshoulder:Clone().Parent = tors
    end
    headweld:Clone().Parent = tors
    rightshoulderz:Clone().Parent = me.Torso
            leftshoulderz:Clone().Parent = me.Torso
    acting = false
    canClick = true
    doing = false
    end)
    doit()
end
 
cfn,ang,mr,int=CFrame.new,CFrame.Angles,math.rad,Instance.new
bc=BrickColor.new
local minimumsize = Vector3.new(0.7,0.7,0.7)
local surface_between_splitted_parts = 'SmoothNoOutlines'
local fragmentable = workspace
local list = {}
local brickcount = 0
local storage = {}
local fillup = 1000
local maximumstorage = 2000
local storage_position = Vector3.new(0,0,5000)
local stored_partsize = Vector3.new(1,1,1)
local parts_created_per_frame = 5
 
local minimumsize = Vector3.new(0.7,0.7,0.7)
local surface_between_splitted_parts = 'SmoothNoOutlines'
local fragmentable = workspace
local list = {}
local brickcount = 0
local storage = {}
local fillup = 1000
local maximumstorage = 2000
local storage_position = Vector3.new(0,0,5000)
local stored_partsize = Vector3.new(1,1,1)
local parts_created_per_frame = 5
 
 
function fragmentate(cframe,size,color,explosion_position,explosion_blastradius,backsurface,bottomsurface,frontsurface,leftsurface,rightsurface,topsurface,transparency,reflectance,material)
    local xi = size.X >= minimumsize.X*(1+explosion_blastradius/16) and 2 or 1
    local yi = size.Y >= minimumsize.Y*(1+explosion_blastradius/16) and 2 or 1
    local zi = size.Z >= minimumsize.Z*(1+explosion_blastradius/16) and 2 or 1
    if xi == 1 and yi == 1 and zi == 1 or (cframe.p-explosion_position).magnitude > size.magnitude/2 + explosion_blastradius then
        if xi == 1 and yi == 1 and zi == 1 then return end
        if #storage > 0 then
            local p = storage[1]
            p.BrickColor = color
            p.Size = size
            p.Anchored = false
            p.BackSurface = backsurface
            p.BottomSurface = bottomsurface
            p.FrontSurface = frontsurface
            p.LeftSurface = leftsurface
            p.RightSurface = rightsurface
            p.TopSurface = topsurface
            p.Transparency = transparency
            p.CFrame = cframe
            p.Reflectance = reflectance
            p.Material = material
            game:GetService('Debris'):AddItem(p,30)
            p:BreakJoints()
            table.remove(storage,1)
        else
            local p = Instance.new("Part",fragmentable)
            p.BrickColor = color
            p.FormFactor = "Custom"
            p.Size = size
            p.BackSurface = backsurface
            p.BottomSurface = bottomsurface
            p.FrontSurface = frontsurface
            p.LeftSurface = leftsurface
            p.RightSurface = rightsurface
            p.TopSurface = topsurface
            p.Transparency = transparency
            p.Material = material
            if p.Transparency>0.285 then
                p.Anchored = false
            else
                p.Anchored=false
                p.Material='Wood'
                game:GetService('Debris'):AddItem(p,10)
            end
            p.CFrame = cframe
            p.Reflectance = reflectance
            p:BreakJoints()
        end
        return
    end
    local mody = math.random(-125,125)/1000
    for y = 1,yi do
        if math.random()> 0.5 then
            local modx = math.random(-125,125)/1000
            for x = 1,xi do
                local modz = math.random(-125,125)/1000
                for z = 1,zi do --offset = x/xi-0.75+modx)
                    fragmentate(cframe*CFrame.new(size.X*(xi==1 and 0 or x/xi-0.75+modx),size.Y*(yi==1 and 0 or y/yi-0.75+mody),size.Z*(zi==1 and 0 or z/zi-0.75+modz)),
                        Vector3.new(xi == 2 and size.X*(1-2*math.abs(x/xi-0.75+modx)) or size.X,yi == 2 and size.Y*(1-2*math.abs(y/yi-0.75+mody)) or size.Y,
                        zi == 2 and size.Z*(1-2*math.abs(z/zi-0.75+modz)) or size.Z or mustardfoot_was_here),color,explosion_position,explosion_blastradius,
                        z~=zi and surface_between_splitted_parts or backsurface,y==2 and surface_between_splitted_parts or bottomsurface,
                        z==2 and surface_between_splitted_parts or frontsurface,x==2 and surface_between_splitted_parts or leftsurface,x~=xi and surface_between_splitted_parts or rightsurface,
                        y~=yi and surface_between_splitted_parts or topsurface,transparency,reflectance,material)
                end
               
            end
        else
            local modz = math.random(-125,125)/1000
            for z = 1,zi do
                local modx = math.random(-125,125)/1000
                for x = 1,xi do
                    fragmentate(cframe*CFrame.new(size.X*(xi==1 and 0 or x/xi-0.75+modx),size.Y*(yi==1 and 0 or y/yi-0.75+mody),size.Z*(zi==1 and 0 or z/zi-0.75+modz)),
                        Vector3.new(xi == 2 and size.X*(1-2*math.abs(x/xi-0.75+modx)) or size.X,yi == 2 and size.Y*(1-2*math.abs(y/yi-0.75+mody)) or size.Y,
                        zi == 2 and size.Z*(1-2*math.abs(z/zi-0.75+modz)) or size.Z),color,explosion_position,explosion_blastradius,
                        z~=zi and surface_between_splitted_parts or backsurface,y==2 and surface_between_splitted_parts or bottomsurface,
                        z==2 and surface_between_splitted_parts or frontsurface,x==2 and surface_between_splitted_parts or leftsurface,x~=xi and surface_between_splitted_parts or rightsurface,
                        y~=yi and surface_between_splitted_parts or topsurface,transparency,reflectance,material)
                end
            end
        end
    end            
end
 
function start_fragmentation(position,radius,nuh)
    local search = Region3.new(position-Vector3.new(radius,radius,radius)*1.1,position+Vector3.new(radius,radius,radius)*1.1)
    repeat
    local finish = false
    local parts = workspace:FindPartsInRegion3WithIgnoreList(search,list,100)
    for i = 1,#parts do
        table.insert(list,1,parts[i])
    end
    finish = true
    until #parts < 100 and finish
    local t = tick()
    for i = 1,#list do
        local p = list[i]
        if p:IsA('UnionOperation') == false and p:IsA('CornerWedgePart') == false and p:IsA('TrussPart') == false and p:IsA('WedgePart') == false and p.Parent and p.Parent ~= obj1 and p.Parent.Name ~= "Projectile" and p:IsDescendantOf(fragmentable) and p:GetMass()<50000 and p.Transparency>0.285 and p.Name~='Base' and p.Parent:FindFirstChildOfClass('Humanoid') == nil and p.Parent.Parent:FindFirstChildOfClass('Humanoid') == nil and p:IsDescendantOf(me)==false then
            fragmentate(p.CFrame,p.Size,p.BrickColor,position,radius,p.BackSurface,p.BottomSurface,p.FrontSurface,p.LeftSurface,p.RightSurface,p.TopSurface,p.Transparency,p.Reflectance,p.Material)
            if #storage < maximumstorage and p.Shape == "Block" then
                p.Anchored = false
                p.FormFactor = "Custom"
                p.Size = stored_partsize
                p.Position = storage_position
                table.insert(storage,1,p)
            else
                p:Destroy()
            end
        end
        if nuh == false and p.Parent and p.Parent ~= obj1 and p.Parent.Name ~= "Projectile" and p:IsDescendantOf(fragmentable) and p:GetMass()<53000 and p.Transparency<0.05 and p.Name~='Base' and tostring(p.Material)=='Enum.Material.Wood' and p:IsDescendantOf(me)==false then
            fragmentate(p.CFrame,p.Size,p.BrickColor,position,radius,p.BackSurface,p.BottomSurface,p.FrontSurface,p.LeftSurface,p.RightSurface,p.TopSurface,p.Transparency,p.Reflectance,p.Material)
            if #storage < maximumstorage and p.Shape == "Block" then
                p.Anchored = false
                p.Material='Wood'
                p.FormFactor = "Custom"
                p.Size = stored_partsize
                p.Position = storage_position
                table.insert(storage,1,p)
            else
                p:Destroy()
            end
        end
    end
    list = {}
end
 
 
function fling()
local doit = coroutine.wrap(function()
if me:FindFirstChild('Right Arm') and me:FindFirstChild('Torso') and me:FindFirstChild('HumanoidRootPart') then
    acting = true
    for i=1,finishnum do
    local weld2 = Instance.new('Weld',me["Right Arm"])
    weld2.Part0 = me["Right Arm"]
    weld2.Part1 = me["Torso"]
    weld2.C0 = CFrame.new(-1.5,0,0)
    if finishnum == 1 then
    for i = 0,1,0.05 do
        if me:FindFirstChild('Right Arm') == nil or me:FindFirstChild('Torso') == nil or weld2 == nil then return end
        weld2.C0 = weld2.C0:lerp(CFrame.new(-1.5,0.9,-0.5)*CFrame.Angles(-math.pi/0.75,-math.pi/8,0),i)
        wait(0.01) 
    end
    end
    audio.SoundId = "rbxassetid://166083610"
    audio.PlaybackSpeed = 1
    audio.TimePosition = 0.1
    audio:Play()
    if finishnum == 1 then
    for i = 0,1,0.5 do
        if me:FindFirstChild('Right Arm') == nil or me:FindFirstChild('Torso') == nil or weld2 == nil then return end
        weld2.C0 = weld2.C0:lerp(CFrame.new(-1.5,1.2,0.1)*CFrame.Angles(math.pi/0.9,0,0),i)
        wait(0.001)
    end
    end
    weld2.C0 = CFrame.new(-1.5,1.2,0.1)*CFrame.Angles(math.pi/0.9,0,0)
    local knofe = obj1:Clone()
    for i, v in pairs(obj1:GetChildren()) do
        if v:IsA('BasePart') then
        v.Transparency = 1
        end
    end
    knofe.Parent = workspace
    knofe.Name = "Projectile"
    knofe.Grab.CFrame = CFrame.new(knofe.Grab.CFrame.p, mouse.Hit.p)*CFrame.Angles(0,math.pi/2,0)
    knofe:FindFirstChild("Trail", true).Enabled = true
    local heck = Instance.new('BodyVelocity',knofe.Grab)
    heck.Velocity = (knofe.Grab.CFrame*CFrame.Angles(0,math.pi/-2,0)).lookVector*120
    local coru = coroutine.wrap(function()
        wait(0.45)
        if heck then
            heck:Destroy()
        end
    end)
    coru()
    local able = true
    knofe["big ass knife"].Touched:connect(function(hit)
        if hit.Parent and hit.Parent:FindFirstChildOfClass('Humanoid') and hit.Transparency < 1 and knofe.Grab.CanCollide == false and hit.Parent ~= me and hit.Parent.Parent ~= me then
            local thing = hit.Parent:FindFirstChildOfClass('Humanoid')
            local ree = hit.Parent
            if thing == nil then
                ree = hit.Parent.Parent
            end
            if ree:FindFirstChildOfClass('Humanoid').Health > 0 then
                knofe:FindFirstChild("Trail", true).Enabled = false
                game:GetService('Debris'):AddItem(knofe,5)
                tone = math.random(1, 3)
                local sound = Instance.new('Sound',knofe.Grab)
                if tone == 1 then sound.SoundId = "rbxassetid://220833967" end
                if tone == 2 then sound.SoundId = "rbxassetid://220833976" end
                if tone == 3 then sound.SoundId = "rbxassetid://220834000" end
                sound.PlaybackSpeed = 1
                sound:Play()
                for i, v in pairs(knofe:GetChildren()) do
                    if v:IsA('BasePart') then
                    v.CanCollide = true
                    v.Anchored = true
                    end
                end
                hit.Anchored = true
                if ree:FindFirstChildOfClass('Humanoid') and hit.Name == "Torso" or hit.Name == "Head" then
                    ree:FindFirstChildOfClass('Humanoid').Health = 0
                end
                wait()
                killz(ree,hit.Name,knofe)
            else
                knofe:FindFirstChild("Trail", true).Enabled = false
                heck.Velocity = Vector3.new(0,0,0)
                heck:Destroy()
                game:GetService('Debris'):AddItem(knofe,5)
                tone = math.random(1, 3)
                local sound = Instance.new('Sound',knofe.Grab)
                if tone == 1 then sound.SoundId = "rbxassetid://220833967" end
                if tone == 2 then sound.SoundId = "rbxassetid://220833976" end
                if tone == 3 then sound.SoundId = "rbxassetid://220834000" end
                sound.PlaybackSpeed = 1
                sound:Play()
                for i, v in pairs(knofe:GetChildren()) do
                    if v:IsA('BasePart') then
                    v.Anchored = false
                    end
                end
                hit.Anchored = true
                wait(0.001)
                hit.Anchored = false
                for i, v in pairs(knofe:GetChildren()) do
                    if v:IsA('BasePart') then
                    v.Anchored = false
                    end
                end
                if knofe then
                    local coru = coroutine.wrap(function()
                        if hit then
                            local uno = Instance.new('Part',workspace)
                            local dos = Instance.new('Part',workspace)
                            uno.CFrame = hit.CFrame
                            dos.CFrame = knofe["big ass knife"].CFrame
                            local weld = Instance.new('Weld',knofe["big ass knife"])
                            weld.Part0 = hit
                            weld.Part1 = knofe["big ass knife"]
                            weld.C0 = uno.CFrame:toObjectSpace(dos.CFrame)
                            uno:Destroy()
                            dos:Destroy()
                        end
                    end)
                    coru()
                end
            end
        elseif hit.Parent and hit.Parent ~= me and hit.Parent.Parent ~= me and hit.CanCollide and knofe.Grab.CanCollide == false then
            if hit.Transparency and (hit.Transparency<=0.285 or hit:GetMass()<=3000) then
                knofe:FindFirstChild("Trail", true).Enabled = false
                local sound = Instance.new('Sound',knofe.Grab)
                sound.SoundId = 'rbxassetid://267585646'
                sound:Play()
                for i,v in pairs(knofe:GetChildren()) do
                    if v:IsA('BasePart') then
                        v.Anchored = true
                    end
                end
                wait()
                heck.Velocity = Vector3.new(0,0,0)
                heck:Destroy()
                local uno = Instance.new('Part',workspace)
                            local dos = Instance.new('Part',workspace)
                            uno.CFrame = hit.CFrame
                            dos.CFrame = knofe["big ass knife"].CFrame
                            local weld = Instance.new('Weld',knofe["big ass knife"])
                            weld.Part0 = hit
                            weld.Part1 = knofe["big ass knife"]
                            weld.C0 = uno.CFrame:toObjectSpace(dos.CFrame)
                            uno:Destroy()
                            dos:Destroy()
                            for i,v in pairs(knofe:GetChildren()) do
                    if v:IsA('BasePart') then
                        v.Anchored = false
                    end
                end
                game:GetService('Debris'):AddItem(knofe,5)
                for i,v in pairs(knofe:GetChildren()) do
                    if v:IsA('BasePart') then
                    v.CanCollide = true
                    end
                end
            end
            if hit.Parent and hit.Transparency>0.285 and able == true and hit:GetMass()<3000 and hit.Parent:FindFirstChildOfClass('Humanoid') == nil and (hit.Parent.Parent == nil or hit.Parent.Parent:FindFirstChildOfClass('Humanoid') == nil) then
                knofe:FindFirstChild("Trail", true).Enabled = false
                able = false
                local sound = Instance.new('Sound',knofe.Grab)
                sound.SoundId = 'rbxassetid://144884907'
                sound:Play()
                local coru = coroutine.wrap(function()
                    start_fragmentation(knofe["big ass knife"].Position,1.25,knofe)
                end)
                coru()
            end
        end
    end)
    if finishnum == 1 then
    for i= 0,1,0.1 do
        if me:FindFirstChild('Right Arm') == nil or me:FindFirstChild('Torso') == nil or weld2 == nil then return end
        weld2.C0 = weld2.C0:lerp(CFrame.new(-1.5,0,0),i)
        wait(0.001)
    end
    else
        for i= 0,1,0.5 do
        if me:FindFirstChild('Right Arm') == nil or me:FindFirstChild('Torso') == nil or weld2 == nil then return end
        weld2.C0 = weld2.C0:lerp(CFrame.new(-1.5,0,0),i)
        wait(0.001)
    end
    end
    for i,v in pairs(obj1:GetChildren()) do
        if v:IsA('BasePart') then
        v.Transparency = 0
        end
    end
    weld2:Destroy()
    rightshoulderz:Clone().Parent = me.Torso
    end
    acting = false
    canClick = true
end
end)
doit()
end
 
function instasplode()
    local coru = coroutine.wrap(function()
        acting = true
        for i=1,1 do
        local weld2 = Instance.new('Weld',me["Right Arm"])
        weld2.Part0 = me["Right Arm"]
        weld2.Part1 = me["Torso"]
        weld2.C0 = CFrame.new(-1.5,0,0)
        if finishnum == 1 then
        for i = 0,1,0.05 do
            if me:FindFirstChild('Right Arm') == nil or me:FindFirstChild('Torso') == nil or weld2 == nil then return end
            weld2.C0 = weld2.C0:lerp(CFrame.new(-1.5,0.9,-0.5)*CFrame.Angles(-math.pi/0.75,-math.pi/8,0),i)
            wait(0.01) 
        end
        end
        weld2.C0 = CFrame.new(-1.5,0.9,-0.5)*CFrame.Angles(-math.pi/0.75,-math.pi/8,0)
        audio.SoundId = "rbxassetid://166083610"
        audio.PlaybackSpeed = 1
        audio.TimePosition = 0.1
        audio:Play()
        if finishnum == 1 then
        for i = 0,1,0.5 do
            if me:FindFirstChild('Right Arm') == nil or me:FindFirstChild('Torso') == nil or weld2 == nil then return end
            weld2.C0 = weld2.C0:lerp(CFrame.new(-1.5,1.2,0.1)*CFrame.Angles(math.pi/0.9,0,0),i)
            wait(0.001)
        end
        end
        weld2.C0 = CFrame.new(-1.5,1.2,0.1)*CFrame.Angles(math.pi/0.9,0,0)
        local knofe = obj1:Clone()
        for i,v in pairs(obj1:GetChildren()) do
            if v:IsA('BasePart') then
            v.Transparency = 1
            end
        end
        knofe.Parent = workspace
        knofe.Name = "Projectile"
        knofe.Grab.CFrame = CFrame.new(knofe.Grab.CFrame.p, mouse.Hit.p)*CFrame.Angles(0,math.pi/2,0)
        knofe:FindFirstChild("Trail", true).Enabled = false
        fireofjesUS = Instance.new("Fire", knofe.Grab)
        local heck = Instance.new('BodyVelocity',knofe.Grab)
        heck.Velocity = (knofe.Grab.CFrame*CFrame.Angles(0,math.pi/-2,0)).lookVector*120
        local coru = coroutine.wrap(function()
            wait(0.45)
            if heck then
                heck:Destroy()
            end
        end)
        coru()
        knofe["big ass knife"].Touched:connect(function(hit)
            if hit.Parent ~= me and hit.Parent.Parent ~= me and hit.Transparency < 1 and knofe.Grab.CanCollide == false then
                heck.Velocity = Vector3.new(0,0,0)
                heck:Destroy()
                for i,v in pairs(knofe:GetChildren()) do
                    if v:IsA('BasePart') then
                    v.CanCollide = true
                    end
                end
                local hum = hit.Parent:FindFirstChildOfClass('Humanoid')
                if hum == nil then
                    hum = hit.Parent.Parent:FindFirstChildOfClass('Humanoid')
                end
                if knofe then
                    local coru = coroutine.wrap(function()
                        if hit then
                            local uno = Instance.new('Part',workspace)
                            local dos = Instance.new('Part',workspace)
                            uno.CFrame = hit.CFrame
                            dos.CFrame = knofe["big ass knife"].CFrame
                            local weld = Instance.new('Weld',knofe["big ass knife"])
                            weld.Part0 = hit
                            weld.Part1 = knofe["big ass knife"]
                            weld.C0 = uno.CFrame:toObjectSpace(dos.CFrame)
                            uno:Destroy()
                            dos:Destroy()
                        end
                    end)
                    coru()
                end
                    local sound = Instance.new('Sound',knofe.Grab)
                    sound.Name = "BOOM"
                    sound.EmitterSize = 25
                    sound.SoundId = 'rbxassetid://476477344'
                    sound.Volume = 0.5
                    sound:Play()
                    local exppart = Instance.new("Part", game.Workspace)
                    exppart.Size = Vector3.new(0.2, 0.2, 0.2)
                    exppart.Anchored = true
                    exppart.CanCollide = false
                    exppart.CFrame = CFrame.new(knofe.Grab.CFrame.p)
                    exppart.Transparency = 1
                    local expaccent = Instance.new("ParticleEmitter", exppart)
                    expaccent.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 0)), ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 0, 0))})
                    expaccent.LightEmission = 0.2
                    expaccent.LightInfluence = 0.3
                    expaccent.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(1, 0)})
                    expaccent.Acceleration = Vector3.new(0, 30, 0)
                    expaccent.Drag = 15
                    expaccent.LockedToPart = false
                    expaccent.Lifetime = NumberRange.new(0.5, 1.5)
                    expaccent.Rate = 2000
                    expaccent.Speed = NumberRange.new(0,0)
                    expaccent.SpreadAngle = Vector2.new(360, 360)
                    expaccent:Clone().Parent = exppart
                    expaccent:Clone().Parent = exppart
                    local exp = Instance.new('Explosion',game.Workspace)
                    exp.Position = knofe["big ass knife"].Position
                    exp.ExplosionType = Enum.ExplosionType.NoCraters
                    exp.BlastRadius = 5
                    exp.Visible = false
                    exp.BlastPressure = 0
                    exp.DestroyJointRadiusPercent = 0
                    exp.Hit:connect(function(hit)
                        if hit.Parent and hit.Parent ~= me and hit.Parent.Name ~= "bitch ass knife" then
                            wait(0.001)
                            tgt = hit
                            local coru=coroutine.wrap(function(tgtt)
                                local fireofgods = Instance.new("Fire", tgtt)
                                fireofgods.Size = 0
                                fireofgods.Heat = 0
                                local fireofgodsaccent = expaccent:Clone()
                                fireofgodsaccent.Parent = hit
                                fireofgodsaccent.Rate = 0
                                fireofgodsaccent.Speed = NumberRange.new(5, 50)
                                fireofgodsaccent.SpreadAngle = Vector2.new(45, 45)
                                fireofgodsaccent.Acceleration = Vector3.new(0, 20, 0)
                               
                                while fireofgods.Size < 10 do
                                    fireofgods.Size = fireofgods.Size + 0.1
                                    fireofgods.Heat = fireofgods.Heat + 0.1
                                    fireofgodsaccent.Rate = fireofgodsaccent.Rate + 1
                                    wait()
                                end
                                if hit.Parent and hit.Parent:FindFirstChildOfClass('Humanoid') == nil and hit.Parent.Parent:FindFirstChildOfClass('Humanoid') == nil then
                                    hit:BreakJoints()
                                elseif hit.Parent and hit.Parent:IsA('Accessory') then
                                    for i,v in pairs(hit:GetChildren()) do
                                        if v:IsA('SpecialMesh') then
                                            v.TextureId = ""
                                        end
                                    end
                                end
                                hit.BrickColor = BrickColor.new("Black")
                                for i,v in pairs(hit.Parent:GetChildren()) do
                                    if v:IsA('Shirt') or v:IsA('Pants') then
                                        v:Destroy()
                                    end
                                end
                               
                                while fireofgods.Size > 5 do
                                    fireofgods.Size = fireofgods.Size - 0.1
                                    fireofgods.Heat = fireofgods.Heat - 0.1
                                    wait()
                                end
                                fireofgods:Destroy()
                                if hit.Parent then
                                    if hit.Parent:FindFirstChildOfClass('Humanoid') == nil and hit.Parent.Parent:FindFirstChildOfClass('Humanoid') == nil then
                                        local p = hit
                                        fragmentate(p.CFrame,p.Size,p.BrickColor,p.Position,0.01,p.BackSurface,p.BottomSurface,p.FrontSurface,p.LeftSurface,p.RightSurface,p.TopSurface,p.Transparency,p.Reflectance,p.Material)
                                        hit:Remove()
                                    elseif hit.Parent:FindFirstChildOfClass('Humanoid') ~= nil then
                                        print(hit.Name)
                                        if hit.Name == "Torso" or hit.Name == "Head" then
                                            print('ohhh YAAAA')
                                            hit.Parent:FindFirstChildOfClass('Humanoid').Health = 0
                                        end
                                        wait()
                                        killz(hit.Parent,hit.Name,nil,nil,false,false,true)
                                    end
                                end
                            end)
                            coru(tgt)
                        end
                    end)
                    local explosionaccenttimeout = coroutine.wrap(function()
                        wait(0.2)
                        for i, exploodn in pairs(exppart:GetChildren()) do
                            exploodn.Enabled = false
                        end
                        wait(2)
                        for i, exploodn in pairs(exppart:GetChildren()) do
                            exploodn:Remove()
                        end
                    end)
                    explosionaccenttimeout()
                    for i,v in pairs(knofe:GetChildren()) do
                        if v:IsA('BasePart') then
                        v.Transparency = 1
                        end
                    end
                    exp.AncestryChanged:connect(function() knofe:Destroy() end)
                coru()
            end
        end)
        if finishnum == 1 then
        for i= 0,1,0.1 do
            if me:FindFirstChild('Right Arm') == nil or me:FindFirstChild('Torso') == nil or weld2 == nil then return end
            weld2.C0 = weld2.C0:lerp(CFrame.new(-1.5,0,0),i)
            wait(0.001)
        end
        else
            wait(0.1)
        end
        weld2.C0 = CFrame.new(-1.5,0,0)
        for i,v in pairs(obj1:GetChildren()) do
            if v:IsA('BasePart') then
            v.Transparency = 0
            end
        end
        weld2:Destroy()
        rightshoulderz:Clone().Parent = me.Torso
        end
        acting = false
        canClick = true
    end)
    coru()
end
 
function fireworkit()
    local coru = coroutine.wrap(function()
        acting = true
        local ree = 1
        if finishnum > 1 then
            ree = 3
        end
        for i=1,ree do
        local weld2 = Instance.new('Weld',me["Right Arm"])
        weld2.Part0 = me["Right Arm"]
        weld2.Part1 = me["Torso"]
        weld2.C0 = CFrame.new(-1.5,0,0)
        weld2.C0 = CFrame.new(-1.5,0.9,-0.5)*CFrame.Angles(-math.pi/0.75,-math.pi/8,0)
        audio.SoundId = "rbxassetid://166083610"
        audio.PlaybackSpeed = 1
        audio.TimePosition = 0.1
        audio:Play()
        weld2.C0 = CFrame.new(-1.5,1.2,0.1)*CFrame.Angles(math.pi/0.9,0,0)
        local knofe = obj1:Clone()
        for i,v in pairs(obj1:GetChildren()) do
            if v:IsA('BasePart') then
            v.Transparency = 1
            end
        end
        local sound = Instance.new('Sound',knofe.Grab)
        sound.Volume = 0.25
        sound.EmitterSize = 200
        sound.MaxDistance = 300
        sound.SoundId = 'rbxassetid://551051176'
        sound:Play()
        knofe.Parent = workspace
        knofe.Name = "Projectile"
        knofe.Grab.CFrame = CFrame.new(knofe.Grab.CFrame.p, mouse.Hit.p)*CFrame.Angles(0,math.pi/2,0)
        local partic = Instance.new('ParticleEmitter',knofe.Grab)
        partic.Color = ColorSequence.new({ColorSequenceKeypoint.new(0,Color3.new(1,0,0)),ColorSequenceKeypoint.new(0.4,Color3.fromRGB(255,125,0)),ColorSequenceKeypoint.new(0.8,Color3.new(1,1,0)),ColorSequenceKeypoint.new(1,Color3.new(1,1,1))})
        partic.LightEmission = 0.5
        partic.LightInfluence = 0
        partic.Size = NumberSequence.new({NumberSequenceKeypoint.new(0,0.5),NumberSequenceKeypoint.new(1,0.15)})
        partic.Rotation = NumberRange.new(0,90)
        partic.SpreadAngle = Vector2.new(5,5)
        partic.Speed = NumberRange.new(20)
        partic.Texture = 'rbxassetid://603193846'
        partic.EmissionDirection = Enum.NormalId.Left
        partic.Lifetime = NumberRange.new(0.5,1)
        partic.Rate = 100
        local heck = Instance.new('BodyVelocity',knofe.Grab)
        heck.Velocity = (knofe.Grab.CFrame*CFrame.Angles(0,math.pi/-2,0)).lookVector*240
        local coru=coroutine.wrap(function()
        wait(1.2)
            sound:Destroy()
            local sound2 = Instance.new('Sound',workspace)
            sound2.SoundId = 'rbxassetid://138080762'
            sound2:Play()
            if heck then
                heck:Destroy()
            end
            for i,v in pairs(knofe:GetChildren()) do
                v.Anchored = true
            end
            partic.Enabled = false
            local colorscheme = math.random(1,4)
            --1 - red & orange
            --2 - blue & pink
            --3 - green & purple
            --4 - blue, red, white
            local colar1 = Color3.fromRGB(255,0,0)
            local colar2 = Color3.fromRGB(255,125,0)
            local colar3 = Color3.fromRGB(255,255,255)
            if colorscheme == 2 then
                colar1 = Color3.fromRGB(0,132,255)
                colar2 = Color3.fromRGB(243,105,255)
            elseif colorscheme == 3 then
                colar1 = Color3.fromRGB(76,255,0)
                colar2 = Color3.fromRGB(128,0,255)
            elseif colorscheme == 4 then
                colar2 = Color3.fromRGB(0,132,255)
            end
            local partic2 = Instance.new('ParticleEmitter',knofe.Grab)
            partic2.Color = ColorSequence.new({ColorSequenceKeypoint.new(0,colar1),ColorSequenceKeypoint.new(1,colar1)})
            partic2.LightEmission = 0.5
            partic2.LightInfluence = 0
            partic2.Size = NumberSequence.new({NumberSequenceKeypoint.new(0,0.5),NumberSequenceKeypoint.new(1,0.1)})
            partic2.Rotation = NumberRange.new(0,90)
            partic2.SpreadAngle = Vector2.new(180,180)
            partic2.Speed = NumberRange.new(20)
            partic2.Texture = 'rbxassetid://603193846'
            partic2.EmissionDirection = Enum.NormalId.Right
            partic2.Lifetime = NumberRange.new(2,2.5)
            partic2.Rate = 1000
            partic2.Drag = 1
            local partic3 = partic2:Clone()
            partic3.Color = ColorSequence.new({ColorSequenceKeypoint.new(0,colar2),ColorSequenceKeypoint.new(1,colar2)})
            partic3.Parent = knofe.Grab
            if colorscheme == 4 then
                local partic4 = partic2:Clone()
                partic4.Color = ColorSequence.new({ColorSequenceKeypoint.new(0,colar3),ColorSequenceKeypoint.new(1,colar3)})
                partic4.Parent = knofe.Grab
            end
            wait(1)
            for i,v in pairs(knofe.Grab:GetChildren()) do
                if v:IsA('ParticleEmitter') then
                    v.Enabled = false
                end
            end
            sound:Destroy()
            wait(2)
            knofe:Destroy()
        end)
        coru()
        wait(0.1)
        weld2.C0 = CFrame.new(-1.5,0,0)
        for i,v in pairs(obj1:GetChildren()) do
            if v:IsA('BasePart') then
            v.Transparency = 0
            end
        end
        weld2:Destroy()
        rightshoulderz:Clone().Parent = me.Torso
        end
        acting = false
        canClick = true
    end)
    coru()
end
 
function paralyze()
    local coru = coroutine.wrap(function()
        if paralyzed == true then return end
        paralyzed = true
        local arm = me["Right Arm"]
        local tors = grabbed.Torso
        local arm2 = me["Left Arm"]
        if arm:FindFirstChildOfClass('Weld') == nil or arm2:FindFirstChildOfClass('Weld') == nil then return end
        doing = true
        local weld2 = arm:FindFirstChildOfClass('Weld')
        local weld3 = arm2:FindFirstChildOfClass('Weld')
        local humanroot = me.HumanoidRootPart
        for i = 0,1,0.075 do
            weld2.C0 = weld2.C0:lerp(CFrame.new(-0.9, 0.80, -1.1)* CFrame.Angles(-2, 0, -1.5), i)
            weld3.C0 = weld3.C0:lerp(CFrame.new(0.8, 1, -0.5)* CFrame.Angles(-1.4, 0, 1.1), i)
            wait(0.01)
        end
        for i = 0,1,0.30 do
            weld2.C0 = weld2.C0:lerp(CFrame.new(-0.9, 0.80, -1.1)* CFrame.Angles(-0.75, 0, -1.75), i)
            weld3.C0 = weld3.C0:lerp(CFrame.new(0.8, 1, -0.5)* CFrame.Angles(-1.4, 0, 1.1), i)
            wait(0.01)
        end
        killz(grabbed,'Left Leg')
        killz(grabbed,'Left Arm')
        killz(grabbed,'Right Leg')
        killz(grabbed,'Right Arm')
       
        for i, v in pairs(grabbed:GetChildren()) do
            if v.Name == "Part" then
                v.CanCollide = false
            end
        end
       
        audio:Stop()
        audio.SoundId = "rbxassetid://2801263"
        tone = math.random(1, 3)
        if tone == 1 then audio.PlaybackSpeed = 0.8 audio.TimePosition = 0 end
        if tone == 2 then audio.PlaybackSpeed = 1 audio.TimePosition = 0 end
        if tone == 3 then audio.PlaybackSpeed = 1.2 audio.TimePosition = 0 end
        audio:Play()
       
        local bleedpart = Instance.new("Part", grabbed)
        bleedpart.Size = Vector3.new(0.2, 0.2, 0.2)
        bleedpart.Color = Color3.new(115/225, 115/225, 115/225)
        bleedpart.CanCollide = false
        bleedpart.Position = grabbed.Head.Position + Vector3.new(0, 1, 0)
        bleedpart.Transparency = 1
       
        local bleedpartweld = Instance.new("Weld", grabbed.Torso)
        bleedpartweld.Part0 = grabbed.Torso
        bleedpartweld.Part1 = bleedpart
        bleedpartweld.C0 = CFrame.Angles(-1, 0, -0.35) * CFrame.new(0, 1, 0.8)
        local cuntruu=coroutine.wrap(function()
            bleed(bleedpart)
        end)
        local thicc = coroutine.wrap(function()
            wait(3)
            bleedpart:Remove()
        end)
        cuntruu()
        thicc()
   
        for i = 0,1,0.075 do
            weld2.C0 = weld2.C0:lerp(CFrame.new(-0.9, 0.80, -1.1)* CFrame.Angles(-1.5, 0, -1.3), i)
            weld3.C0 = weld3.C0:lerp(CFrame.new(0.8, 1, -0.5)* CFrame.Angles(-1.5, 0, 1.1), i)
            wait(0.01)
        end
        acting = true
        canClick = true
        doing = false
    end)
    coru()
end
 
function explode()
    local coru = coroutine.wrap(function()
        acting = true
        for i=1,finishnum do
        local weld2 = Instance.new('Weld',me["Right Arm"])
        weld2.Part0 = me["Right Arm"]
        weld2.Part1 = me["Torso"]
        weld2.C0 = CFrame.new(-1.5,0,0)
        if finishnum == 1 then
        for i = 0,1,0.05 do
            if me:FindFirstChild('Right Arm') == nil or me:FindFirstChild('Torso') == nil or weld2 == nil then return end
            weld2.C0 = weld2.C0:lerp(CFrame.new(-1.5,0.9,-0.5)*CFrame.Angles(-math.pi/0.75,-math.pi/8,0),i)
            wait(0.01) 
        end
        end
        weld2.C0 = CFrame.new(-1.5,0.9,-0.5)*CFrame.Angles(-math.pi/0.75,-math.pi/8,0)
        audio.SoundId = "rbxassetid://166083610"
        audio.PlaybackSpeed = 1
        audio.TimePosition = 0.1
        audio:Play()
        if finishnum == 1 then
        for i = 0,1,0.5 do
            if me:FindFirstChild('Right Arm') == nil or me:FindFirstChild('Torso') == nil or weld2 == nil then return end
            weld2.C0 = weld2.C0:lerp(CFrame.new(-1.5,1.2,0.1)*CFrame.Angles(math.pi/0.9,0,0),i)
            wait(0.001)
        end
        end
        weld2.C0 = CFrame.new(-1.5,1.2,0.1)*CFrame.Angles(math.pi/0.9,0,0)
        local knofe = obj1:Clone()
        for i,v in pairs(obj1:GetChildren()) do
            if v:IsA('BasePart') then
            v.Transparency = 1
            end
        end
        knofe.Parent = workspace
        knofe.Name = "Projectile"
        knofe.Grab.CFrame = CFrame.new(knofe.Grab.CFrame.p, mouse.Hit.p)*CFrame.Angles(0,math.pi/2,0)
        knofe:FindFirstChild("Trail", true).Enabled = false
        local heck = Instance.new('BodyVelocity',knofe.Grab)
        heck.Velocity = (knofe.Grab.CFrame*CFrame.Angles(0,math.pi/-2,0)).lookVector*120
        local coru = coroutine.wrap(function()
            wait(0.45)
            if heck then
                heck:Destroy()
            end
        end)
        coru()
        knofe["big ass knife"].Touched:connect(function(hit)
            if hit.Parent ~= me and hit.Parent.Parent ~= me and hit.Transparency < 1 and knofe.Grab.CanCollide == false then
                heck.Velocity = Vector3.new(0,0,0)
                heck:Destroy()
                for i,v in pairs(knofe:GetChildren()) do
                    if v:IsA('BasePart') then
                    v.CanCollide = true
                    end
                end
                local hum = hit.Parent:FindFirstChildOfClass('Humanoid')
                if hum == nil then
                    hum = hit.Parent.Parent:FindFirstChildOfClass('Humanoid')
                end
                if hum then
                    tone = math.random(1, 3)
                    local sound = Instance.new('Sound',knofe.Grab)
                    if tone == 1 then sound.SoundId = "rbxassetid://220833967" end
                    if tone == 2 then sound.SoundId = "rbxassetid://220833976" end
                    if tone == 3 then sound.SoundId = "rbxassetid://220834000" end
                    sound.PlaybackSpeed = 1
                    sound:Play()
                else
                    local sound = Instance.new('Sound',knofe.Grab)
                    sound.SoundId = 'rbxassetid://267585646'
                    sound:Play()
                end
                if knofe then
                    local coru = coroutine.wrap(function()
                        if hit then
                            local uno = Instance.new('Part',workspace)
                            local dos = Instance.new('Part',workspace)
                            uno.CFrame = hit.CFrame
                            dos.CFrame = knofe["big ass knife"].CFrame
                            local weld = Instance.new('Weld',knofe["big ass knife"])
                            weld.Part0 = hit
                            weld.Part1 = knofe["big ass knife"]
                            weld.C0 = uno.CFrame:toObjectSpace(dos.CFrame)
                            uno:Destroy()
                            dos:Destroy()
                        end
                    end)
                    coru()
                end
                local coru = coroutine.wrap(function()
                    for i=1,15,0.7 do
                        local sound = Instance.new('Sound',knofe.Grab)
                        if knofe then
                            if knofe.serration.BrickColor == BrickColor.new('Really red') then
                                for i, v in pairs(knofe:GetChildren()) do
                                    if v.Name == "big ass knife" or v.Name == "serration" or v.Name == "knifetip1" or v.Name == "fricc" then
                                        v.BrickColor = BrickColor.new('Lily white')
                                        v.Material = Enum.Material.SmoothPlastic
                                    end
                                end
                            else
                                for i,v in pairs(knofe:GetChildren()) do
                                    if v.Name == "big ass knife" or v.Name == "serration" or v.Name == "knifetip1" or v.Name == "fricc" then
                                        v.BrickColor = BrickColor.new('Really red')
                                        v.Material = Enum.Material.Neon
                                        sound.SoundId = 'rbxassetid://300473653'
                                        sound.Volume = 0.75
                                        sound.TimePosition = 0.05
                                        sound.EmitterSize = 25
                                        sound.PlaybackSpeed = 1
                                        sound:Play()
                                    end
                                end
                            end
                            wait(1/i)
                            sound:Destroy()
                        end
                    end
                    local sound = Instance.new('Sound',knofe.Grab)
                    sound.Name = "BOOM"
                    sound.EmitterSize = 25
                    sound.SoundId = 'rbxassetid://12222084'
                    sound.TimePosition = 0.1
                    sound.Volume = 0.5
                    sound:Play()
                    local exppart = Instance.new("Part", game.Workspace)
                    exppart.Size = Vector3.new(0.2, 0.2, 0.2)
                    exppart.Anchored = true
                    exppart.CanCollide = false
                    exppart.CFrame = CFrame.new(knofe.Grab.CFrame.p)
                    exppart.Transparency = 1
                    local expaccent = Instance.new("ParticleEmitter", exppart)
                    expaccent.Color = ColorSequence.new({ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 0)), ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 0, 0))})
                    expaccent.LightEmission = 0.2
                    expaccent.LightInfluence = 0.3
                    expaccent.Size = NumberSequence.new({NumberSequenceKeypoint.new(0, 1), NumberSequenceKeypoint.new(1, 0)})
                    expaccent.Acceleration = Vector3.new(0, -8, 0)
                    expaccent.Drag = 15
                    expaccent.LockedToPart = true
                    expaccent.Lifetime = NumberRange.new(0.5, 1.5)
                    expaccent.Rate = 2000
                    expaccent.Speed = NumberRange.new(10, 150)
                    expaccent.SpreadAngle = Vector2.new(360, 360)
                   
                    local exp = Instance.new('Explosion',game.Workspace)
                    exp.Position = knofe["big ass knife"].Position
                    exp.ExplosionType = Enum.ExplosionType.NoCraters
                    exp.BlastRadius = 10
                    exp.BlastPressure = 100000
                    exp.DestroyJointRadiusPercent = 1
                    exp.Hit:connect(function(hit)
                        if hit.Parent and hit.Parent ~= me and hit.Parent:FindFirstChildOfClass('Humanoid') then
                            if hit.Parent:FindFirstChildOfClass('Humanoid') and hit.Name == "Torso" or hit.Name == "Head" then
                                hit.Parent:FindFirstChildOfClass('Humanoid').Health = 0
                            end
                            wait(0.001)
                            local coru=coroutine.wrap(function()
                            killz(hit.Parent,'Head',knofe,exp)
                            end)
                            coru()
                        elseif hit.Parent and hit.Parent ~= workspace and hit.Parent ~= me then
                            if hit.Parent.Name ~= "Projectile" then
                                hit.Parent:BreakJoints()
                            end
                        elseif hit.Parent and hit.Parent ~= me then
                            hit:BreakJoints()
                        end
                    end)
                    local explosionaccenttimeout = coroutine.wrap(function()
                        wait(0.2)
                        expaccent.Enabled = false
                        wait(2)
                        exppart:Remove()
                    end)
                    explosionaccenttimeout()
                    for i,v in pairs(knofe:GetChildren()) do
                        if v:IsA('BasePart') then
                        v.Transparency = 1
                        end
                    end
                    exp.AncestryChanged:connect(function() knofe:Destroy() end)
                end)
                coru()
            end
        end)
        if finishnum == 1 then
        for i= 0,1,0.1 do
            if me:FindFirstChild('Right Arm') == nil or me:FindFirstChild('Torso') == nil or weld2 == nil then return end
            weld2.C0 = weld2.C0:lerp(CFrame.new(-1.5,0,0),i)
            wait(0.001)
        end
        else
            wait(0.1)
        end
        weld2.C0 = CFrame.new(-1.5,0,0)
        for i,v in pairs(obj1:GetChildren()) do
            if v:IsA('BasePart') then
            v.Transparency = 0
            end
        end
        weld2:Destroy()
        rightshoulderz:Clone().Parent = me.Torso
        end
        acting = false
        canClick = true
    end)
    coru()
end
 
function release()
    if grabbed.Torso:FindFirstChild("TargetWeld") == nil or grabbed:FindFirstChildOfClass('Humanoid').Health <= 0 then return end
    targetweld = grabbed.Torso.TargetWeld
    local ree= grabbed:FindFirstChild("Left Arm")
    targetweld2 = nil
    if ree and ree:FindFirstChild("Weld") then
        targetweld2 = ree.Weld
    end
    for i, v in pairs(grabbed:GetChildren()) do
        if v.Name == "Part" then
            v.CanCollide = true
        end
    end
    paralyzed = false
    local doit = coroutine.wrap(function()
    local arm = me["Right Arm"]
    local tors = grabbed.Torso
    local arm2 = me["Left Arm"]
    if arm:FindFirstChildOfClass('Weld') == nil or arm2:FindFirstChildOfClass('Weld') == nil then return end
    doing = true
    local weld2 = arm:FindFirstChildOfClass('Weld')
    local weld3 = arm2:FindFirstChildOfClass('Weld')
    local humanroot = me.HumanoidRootPart
   
    if grabbed:FindFirstChildOfClass('Humanoid') then
        grabbed:FindFirstChildOfClass('Humanoid').PlatformStand = false
    end
   
    rightshoulderz:Clone().Parent = me.Torso
    leftshoulderz:Clone().Parent = me.Torso
    if grabbed:FindFirstChildOfClass('Humanoid') then
        grabbed:FindFirstChildOfClass('Humanoid').Name = "Humanoid"
        grabbed:FindFirstChildOfClass('Humanoid').JumpPower = 50
        grabbed:FindFirstChildOfClass('Humanoid').WalkSpeed = 16
        grabbed:FindFirstChildOfClass('Humanoid').PlatformStand = false
    end
    grabbed = nil
   
    if humanroot:FindFirstChild('Holder') then
        humanroot.Holder:Destroy()
    end
   
    for i = 0,1,0.1 do
        if me:FindFirstChild('Right Arm') == nil or me:FindFirstChild('Torso') == nil or weld2 == nil or weld3 == nil then return end
        weld2.C0 = weld2.C0:lerp(CFrame.new(-1.5,0,0),i)
        weld3.C0 = weld3.C0:lerp(CFrame.new(1.5,0,0),i)
        targetweld.C0 = targetweld.C0:lerp(CFrame.new(0, 1.5, 0)*CFrame.Angles(0, 0, 0), i)
        if targetweld2 then
            targetweld2.C0 = targetweld2.C0:lerp(CFrame.new(-1.5, 0, 0)*CFrame.Angles(0, 0, 0), i)
        end
        wait(0.01)
    end
   
    knifeweld.C1 = CFrame.fromEulerAnglesXYZ(1.55, math.rad(-90), 1.55) * CFrame.new(0, 0.95, 0.2)
    weld2:Destroy()
    weld3:Destroy()
    targetweld:Remove()
    if targetweld2 then
        targetweld2:Remove()
    end
    if rightshoulder then
    rightshoulder:Clone().Parent = tors
    end
    if leftshoulder then
    leftshoulder:Clone().Parent = tors
    end
    headweld:Clone().Parent = tors
    rightshoulderz:Clone().Parent = me.Torso
            leftshoulderz:Clone().Parent = me.Torso
    acting = false
    canClick = true
    doing = false
    end)
    doit()
end
 
function stabwithpassion()
    local doit = coroutine.wrap(function()
        if me:FindFirstChild('Right Arm') and me:FindFirstChild('Torso') and me:FindFirstChild('HumanoidRootPart') and me:FindFirstChild('Left Arm') then
            acting = true
            me:FindFirstChildOfClass('Humanoid').WalkSpeed = me:FindFirstChildOfClass('Humanoid').WalkSpeed + 10
            local arm = me["Right Arm"]
            local tors = me.Torso
            local arm2 = me["Left Arm"]
            local humanroot = me.HumanoidRootPart
            local weld = Instance.new('Weld',tors)
            weld.Part0 = tors
            weld.Part1 = humanroot
            weld.C0 = CFrame.new(0,0,0) * CFrame.Angles(0, 0, 0)
            local weld2 = Instance.new('Weld',arm)
            weld2.Part0 = arm
            weld2.Part1 = tors
            weld2.C0 = CFrame.new(-1.5,0,0) * CFrame.Angles(0, 0, 0)
            local weld3 = Instance.new('Weld',arm2)
            weld3.Part0 = arm2
            weld3.Part1 = tors
            weld3.C0 = CFrame.new(1.5,0,-0.3) * CFrame.Angles(0.3,0.1,0)
 
            for i = 0,1,0.15 do
                if me:FindFirstChild('Right Arm') == nil or me:FindFirstChild('Torso') == nil or weld == nil or weld2 == nil or humanroot == nil then return end
                weld.C0 = weld.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(0,math.rad(20),0),i)
                weld2.C0 = weld2.C0:lerp(CFrame.new(-1.2,1.3,0.4)*CFrame.Angles(0.5,0,-1.2),i)
                knifeweld.C1 = knifeweld.C1:lerp(CFrame.fromEulerAnglesXYZ(1.55, math.rad(90), -1.55) * CFrame.new(0, 0.95, 0), i)
                wait(0.01)
            end
            wait(0.001)
            trail.Enabled = true
            stabbing = true
            audio2.SoundId = 'rbxassetid://608537390'
            audio2:Play()
            for i = 0,1,0.2 do
                if me:FindFirstChild('Right Arm') == nil or me:FindFirstChild('Torso') == nil or weld == nil or weld2 == nil or humanroot == nil then return end
                weld.C0 = weld.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(0,math.rad(-45),0),i)
                weld2.C0 = weld2.C0:lerp(CFrame.new(-1.6,0.8,-1)*CFrame.Angles(math.rad(-90),0,-1),i)
                wait(0.01)
            end
            trail.Enabled = false
            wait(0.1)
            me:FindFirstChildOfClass('Humanoid').WalkSpeed = me:FindFirstChildOfClass('Humanoid').WalkSpeed - 10
            stabbing = false
            wait(0.001)
            for i = 0,1,0.075 do
                if me:FindFirstChild('Right Arm') == nil or me:FindFirstChild('Torso') == nil or weld == nil or weld2 == nil or humanroot == nil then return end
                weld.C0 = weld.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(0,0,0),i)
                weld2.C0 = weld2.C0:lerp(CFrame.new(-1.5,0,0)*CFrame.Angles(0,0,0),i)
                weld3.C0 = weld3.C0:lerp(CFrame.new(1.5,0,0)*CFrame.Angles(0,0,0),i)
                knifeweld.C1 = knifeweld.C1:lerp(CFrame.fromEulerAnglesXYZ(1.55, math.rad(-90), 1.55) * CFrame.new(0, 0.95, 0), i)
                wait(0.01)
            end
        weld:Destroy()
        weld2:Destroy()
        weld3:Destroy()
        torsojoint:Clone().Parent = humanroot
        rightshoulderz:Clone().Parent = me.Torso
        leftshoulderz:Clone().Parent = me.Torso
        canClick = true
        hit = false
        acting = false
        end
    end)
    doit()
end
 
function stab()
    local doit = coroutine.wrap(function()
        if me:FindFirstChild('Right Arm') and me:FindFirstChild('Torso') and me:FindFirstChild('HumanoidRootPart') and me:FindFirstChild('Left Arm') then
            acting = true
            me:FindFirstChildOfClass('Humanoid').WalkSpeed = me:FindFirstChildOfClass('Humanoid').WalkSpeed + 3
            local arm = me["Right Arm"]
            local tors = me.Torso
            local arm2 = me["Left Arm"]
            local humanroot = me.HumanoidRootPart
            local weld = Instance.new('Weld',tors)
            weld.Part0 = tors
            weld.Part1 = humanroot
            weld.C0 = CFrame.new(0,0,0) * CFrame.Angles(0, 0, 0)
            local weld2 = Instance.new('Weld',arm)
            weld2.Part0 = arm
            weld2.Part1 = tors
            weld2.C0 = CFrame.new(-1.5,0,0) * CFrame.Angles(0, 0, 0)
            local weld3 = Instance.new('Weld',arm2)
            weld3.Part0 = arm2
            weld3.Part1 = tors
            weld3.C0 = CFrame.new(1.5,0,-0.3) * CFrame.Angles(0.3,0.1,0)
 
            for i = 0,1,0.1 do
                if me:FindFirstChild('Right Arm') == nil or me:FindFirstChild('Torso') == nil or weld == nil or weld2 == nil or humanroot == nil then return end
                weld.C0 = weld.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(0,0.3,0),i)
                weld2.C0 = weld2.C0:lerp(CFrame.new(-1.2,1.3,0.4)*CFrame.Angles(0.5,0,-1.2),i)
                wait(0.01)
            end
            wait(0.001)
            trail.Enabled = true
            stabbing = true
            audio2.SoundId = 'rbxassetid://608537390'
            audio2:Play()
            for i = 0,1,0.25 do
                if me:FindFirstChild('Right Arm') == nil or me:FindFirstChild('Torso') == nil or weld == nil or weld2 == nil or humanroot == nil then return end
                weld.C0 = weld.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(0,-0.3,0),i)
                weld2.C0 = weld2.C0:lerp(CFrame.new(-1.6,0.8,0.5)*CFrame.Angles(-0.5,0,-0.5),i)
                wait(0.01)
            end
            trail.Enabled = false
            wait(0.1)
            me:FindFirstChildOfClass('Humanoid').WalkSpeed = me:FindFirstChildOfClass('Humanoid').WalkSpeed - 3
            for i = 0,1,0.25 do
                if me:FindFirstChild('Right Arm') == nil or me:FindFirstChild('Torso') == nil or weld == nil or weld2 == nil or humanroot == nil then return end
                weld.C0 = weld.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(0,0.3,0),i)
                weld2.C0 = weld2.C0:lerp(CFrame.new(-1.5,0.6,-0.3)*CFrame.Angles(0.5,0,-0.5),i)
                wait(0.01)
            end
            stabbing = false
            wait(0.001)
            for i = 0,1,0.05 do
                if me:FindFirstChild('Right Arm') == nil or me:FindFirstChild('Torso') == nil or weld == nil or weld2 == nil or humanroot == nil then return end
                weld.C0 = weld.C0:lerp(CFrame.new(0,0,0)*CFrame.Angles(0,0,0),i)
                weld2.C0 = weld2.C0:lerp(CFrame.new(-1.5,0,0)*CFrame.Angles(0,0,0),i)
                weld3.C0 = weld3.C0:lerp(CFrame.new(1.5,0,0)*CFrame.Angles(0,0,0),i)
                wait(0.01)
            end
        weld:Destroy()
        weld2:Destroy()
        weld3:Destroy()
        torsojoint:Clone().Parent = humanroot
        rightshoulderz:Clone().Parent = me.Torso
        leftshoulderz:Clone().Parent = me.Torso
        canClick = true
        hit = false
        acting = false
        end
    end)
    doit()
end
function hardrelease()
    rightshoulderz:Clone().Parent = me.Torso
    leftshoulderz:Clone().Parent = me.Torso
    if me:FindFirstChild('Right Arm') then
    for i,v in pairs(me["Right Arm"]:GetChildren()) do
        if v:IsA('Weld') then
            v:Destroy()
        end
    end
    end
    if me:FindFirstChild('Left Arm') then
    for i,v in pairs(me["Left Arm"]:GetChildren()) do
        if v:IsA('Weld') then
            v:Destroy()
        end
    end
    end
    acting = false
    canClick = true
    doing = false
    grabbed = nil
end
function unequip()
    local doit = coroutine.wrap(function()
    if me:FindFirstChild('Right Arm') and me:FindFirstChild('Torso') then
        acting = true
        local arm = me["Right Arm"]
        local arm2 = me["Left Arm"]
        local tors = me.Torso
        local weld = Instance.new('Weld',arm)
        weld.Part0 = arm
        weld.Part1 = tors
        weld.C0 = CFrame.new(-1.5,0,0)
        local weld2 = Instance.new("Weld", arm2)
        weld2.Part0 = arm2
        weld2.Part1 = tors
        weld2.C0 = CFrame.new(1.5, 0, 0)
        wait(0.001)
        trail.Enabled = true
        for i = 0,1,0.1 do
            if me:FindFirstChild('Right Arm') == nil or me:FindFirstChild('Torso') == nil or weld == nil then return end
            weld.C0 = weld.C0:lerp(CFrame.new(-0.2,0.2,-0.5)*CFrame.Angles(0,-3.1,0.9),i)
            weld2.C0 = weld2.C0:lerp(CFrame.new(1.5, 0.6, 0) * CFrame.Angles(0,0,0.5),i)
            wait(0.001)
        end
        trail.Enabled = false
        wait(0.25)
        for i = 0,1,0.1 do
            if me:FindFirstChild('Right Arm') == nil or me:FindFirstChild('Torso') == nil or weld == nil then return end
            weld.C0 = weld.C0:lerp(CFrame.new(-1.5,0,0),i)
            weld2.C0 = weld2.C0:lerp(CFrame.new(1.5, 0, 0), i)
            wait(0.01)
        end
        weld:Destroy()
        weld2:Remove()
        if tors ~= nil then
            rightshoulderz:Clone().Parent = me.Torso
            leftshoulderz:Clone().Parent = me.Torso
        end
        acting = false
    end
    end)
    doit()
end
 
mouse.KeyDown:connect(function(key)
    if usable == true then
    if key == "z" then
        if active == false and acting == false then
            active = true
            if playergui:FindFirstChild('Notification') then playergui.Notification:Destroy() end
            notify("KNIFE EQUIPPED",false)
            audio:Stop()
            audio.SoundId = 'rbxassetid://608618332'
            equip()
            wait(0.6)
            audio:Play()
            knifeweld.Part0 = me["Right Arm"]
            knifeweld.C1 = CFrame.fromEulerAnglesXYZ(1.55, math.rad(-90), 1.55) * CFrame.new(0, 0.95, 0)
        elseif acting == false then
            active = false
            if playergui:FindFirstChild('Notification') then playergui.Notification:Destroy() end
            audio:Stop()
            audio.SoundId = 'rbxassetid://608538233'
            unequip()
            notify("KNIFE UNEQUIPPED",false)
            wait(0.3)
            audio:Play()
            knifeweld.Part0 = me.Torso
            knifeweld.C1 = CFrame.Angles(0,math.rad(90),0) * CFrame.new(1, 0.8, 0.55)
            canClick = true
        end
    elseif key == "f" then
        if mode == 'kill' or active == false then return end
        mode = "kill"
        if playergui:FindFirstChild('Notification') then playergui.Notification:Destroy() end
        notify("MODE || KILL || [F]",false)
    elseif key == "e" then
        if mode == 'throw' or active == false then return end
        mode = "throw"
        if playergui:FindFirstChild('Notification') then playergui.Notification:Destroy() end
        notify("MODE || PUSH || [E]",false)
    elseif key == "q" then
        if mode == 'release' or active == false then return end
        mode = "release"
        if playergui:FindFirstChild('Notification') then playergui.Notification:Destroy() end
        notify("MODE || RELEASE || [Q]",false)
    elseif key == "x" then
        if mode == 'stab' or active == false or acting == true then return end
        mode = "stab"
        if playergui:FindFirstChild('Notification') then playergui.Notification:Destroy() end
        notify("MODE || STAB || [X]",false)
    elseif key == "c" then
        if mode == 'fling' or active == false or acting == true then return end
        mode = "fling"
        if playergui:FindFirstChild('Notification') then playergui.Notification:Destroy() end
        notify("MODE || THROW || [C]",false)
    elseif key == "b" then
        if mode == 'instasplode' or active == false or acting == true then return end
        mode = "instasplode"
        if playergui:FindFirstChild('Notification') then playergui.Notification:Destroy() end
        notify("MODE || MOLOTOV || [B]",false)
    elseif key == "r" then
        if mode == 'paralyze' or active == false then return end
        mode = "paralyze"
        if playergui:FindFirstChild('Notification') then playergui.Notification:Destroy() end
        notify("MODE || PARALYZE || [R]",false)
    elseif key == "v" then
        if mode == 'explode' or active == false or acting == true then return end
        mode = "explode"
        if playergui:FindFirstChild('Notification') then playergui.Notification:Destroy() end
        notify("MODE || EXPLODE || [V]",false)
    elseif key == "k" then
        if mode == 'suicide' or active == false or acting == true then return end
        mode = "suicide"
        if playergui:FindFirstChild('Notification') then playergui.Notification:Destroy() end
        notify("MODE || SUICIDE || [K]",false)
    elseif key == "h" then
        if mode == 'firework' or active == false or acting == true then return end
        mode = "firework"
        if playergui:FindFirstChild('Notification') then playergui.Notification:Destroy() end
        notify("MODE || FIREWORK || [H]",false)
    elseif key == "g" then
        if mode == 'finish' or active == false then return end
        mode = "finish"
        if playergui:FindFirstChild('Notification') then playergui.Notification:Destroy() end
        local welp = "ON"
        if finishnum == 1 then
            welp = "OFF"
        end
        notify("MODE || FINISH || [G] || "..welp,false)
    elseif key == "n" then
        if playergui:FindFirstChild('Notification') then playergui.Notification:Destroy() end
        if zombiemode == false then
            notify("ZOMBIE MODE ON || [N]",false)
            zombiemode = true
        else
            notify("ZOMBIE MODE OFF || [N]",false)
            zombiemode = false
        end
    elseif key == "m" then
        if finishnum == 1 then
            finishnum = 15
            if playergui:FindFirstChild('Notification') then playergui.Notification:Destroy() end
            notify("PSYCHOPATH MODE ON || [M]",false)
            if cancolorfilter then
            local Sp00kyGui = Instance.new("ScreenGui")
            local ImageLabel = Instance.new("ImageLabel")
 
            -- Properties
 
            Sp00kyGui.Parent = playergui
            Sp00kyGui.Name = "REEEEEEEE"
 
            ImageLabel.Parent = Sp00kyGui
            ImageLabel.BackgroundColor3 = Color3.new(1, 1, 1)
            ImageLabel.BackgroundTransparency = 1
            ImageLabel.Size = UDim2.new(1, 0, 1, 0)
            ImageLabel.Image = "rbxassetid://74443700"
            ImageLabel.ImageColor3 = Color3.new(1, 0, 0)
            end
            if canbackgroundmusic == true then
                local sound = Instance.new('Sound',playergui)
                sound.Name = 'PSYCHOPAAAATH'
                sound.SoundId = 'rbxassetid://220875210'
                sound.Looped = true
                sound.Volume = 0.5
                sound:Play()
            end
        else
            finishnum = 1
            if playergui:FindFirstChild('Notification') then playergui.Notification:Destroy() end
            notify("PSYCHOPATH MODE OFF || [M]",false)
            for i,v in pairs(playergui:GetChildren()) do
                if v.Name == "REEEEEEEE" then
                    v:Destroy()
                end
            end
            local thisniggarighthere = playergui:FindFirstChild('PSYCHOPAAAATH')
            if thisniggarighthere then thisniggarighthere:Destroy() end
        end
    end
    end
end)
 
mouse.Button1Down:connect(function()
    if active == false or usable == false then return end
    if canClick == true and acting == false then
        if mode == "stab" and finishnum == 1 then
            canClick = false
            stab()
        elseif mode == "stab" and finishnum == 15 then
            canClick = false
            stabwithpassion()
        elseif mode == "fling" then
            canClick = false
            fling()
        elseif mode == "explode" then
            canClick = false
            explode()
        elseif mode == "instasplode" then
            canClick = false
            instasplode()
        elseif mode == "finish" then
            canClick = false
            finish()
        elseif mode == "suicide" then
            canClick = false
            kysnigga()
        elseif mode == "firework" then
            canClick = false
            fireworkit()
        else
            canClick = false
            grab()
        end
    else
        if grabbed ~= nil and doing == false then
            if mode == "release" then
                if acting == true and grabbed:FindFirstChildOfClass('Humanoid') and grabbed:FindFirstChildOfClass('Humanoid').Health > 0 then
                release()
                else
                hardrelease()
                end
            elseif mode == "kill" then
                if acting == true and grabbed:FindFirstChildOfClass('Humanoid') and grabbed:FindFirstChildOfClass('Humanoid').Health > 0 then
                kill()
                else
                hardrelease()
                end
            elseif mode == "paralyze" then
                if acting == true and grabbed:FindFirstChildOfClass('Humanoid') and grabbed:FindFirstChildOfClass('Humanoid').Health > 0 then
                paralyze()
                else
                hardrelease()
                end
            elseif mode == "throw" then
                if acting == true and grabbed:FindFirstChildOfClass('Humanoid') and grabbed:FindFirstChildOfClass('Humanoid').Health > 0 then
                throw()
                else
                hardrelease()
                end
            elseif mode == "explode" then
                if acting == true and grabbed:FindFirstChildOfClass('Humanoid') and grabbed:FindFirstChildOfClass('Humanoid').Health > 0 then
                throw()
                else
                hardrelease()
                end
            end
        end
    end
end)
 
knife.Touched:connect(function(hitz)
    if hitz.Parent and hitz.Parent:FindFirstChildOfClass("Humanoid") and hitz.Parent:FindFirstChild('Torso') and acting == true then
        if mode == "stab" and stabbing == true and hit == false then
            hit = true
            tone = math.random(1, 3)
            audio:Stop()
            if tone == 1 then audio.SoundId = "rbxassetid://220833967" end
            if tone == 2 then audio.SoundId = "rbxassetid://220833976" end
            if tone == 3 then audio.SoundId = "rbxassetid://220834000" end
            audio.PlaybackSpeed = 1
            audio:Play()
            killz(hitz.Parent,'Left Leg')
            killz(hitz.Parent,'Left Arm')
            killz(hitz.Parent,'Right Leg')
            killz(hitz.Parent,'Right Arm')
        elseif mode == "finish" and finishing == true then
            print('PSYCHOPATH MODE REEEEEEEEEEEEEEEE')
            tone = math.random(1, 3)
            audio:Stop()
            if tone == 1 then audio.SoundId = "rbxassetid://220833967" end
            if tone == 2 then audio.SoundId = "rbxassetid://220833976" end
            if tone == 3 then audio.SoundId = "rbxassetid://220834000" end
            audio.PlaybackSpeed = 1
            audio:Play()
            if hit == false then
                hitz.Parent:FindFirstChildOfClass('Humanoid').Health = 0
                wait()
                killz(hitz.Parent,'Head',nil,false,true)
            end
            hit = true
        elseif grabbed == nil and grabbing == true and hit == false then
            if hitz.Parent:FindFirstChildOfClass("Humanoid").Health > 0 and hitz.Parent:FindFirstChild('Torso') and hitz.Parent.Torso:FindFirstChild('Neck') then
            grabbed = hitz.Parent
            local weldz = Instance.new('Weld',point)
            weldz.Name = "Holder"
            weldz.Part0 = point
            weldz.Part1 = hitz.Parent.Torso
            weldz.C0 = CFrame.new(0,0,-1.2)
            end
        end
    end
end)
 
player.CharacterAdded:connect(function()
    usable = false
    for i,v in pairs(playergui:GetChildren()) do
        if v.Name == "REEEEEEEE" or v.Name == 'PSYCHOPAAAATH' then
            v:Destroy()
        end
    end
end)
while usable do
    local coru = coroutine.wrap(function()
        for i,v in pairs(knifeparts) do
            local function try()
                if v[1].Parent ~= v[2] then
                    v[1].Parent = v[2]
                end
            end
            pcall(try)
        end
    if grabbed ~= nil then
        if grabbed:FindFirstChildOfClass('Humanoid') and grabbed:FindFirstChildOfClass('Humanoid').Health > 0 then
            for i,v in pairs(grabbed:GetChildren()) do
                if v:IsA('Tool') then
                    local model = Instance.new('Model',workspace)
                    v.Parent = model
                    model:TranslateBy(Vector3.new(3,0,0))
                end
            end
            grabbed:FindFirstChildOfClass('Humanoid').Name = "Hoomanoid"
            grabbed:FindFirstChildOfClass('Humanoid').JumpPower = 0
            grabbed:FindFirstChildOfClass('Humanoid').WalkSpeed = 0
            grabbed:FindFirstChildOfClass('Humanoid').PlatformStand = true
            grabweld = grabbed.Torso:FindFirstChild("TargetWeld")
            if grabweld ~= nil then return end
            grabbed:FindFirstChildOfClass('Humanoid').PlatformStand = true
            if grabbed.Torso:FindFirstChild('Left Shoulder') then
            leftshoulder = grabbed.Torso["Left Shoulder"]:Clone()
            end
            if grabbed.Torso:FindFirstChild('Right Shoulder') then
            rightshoulder = grabbed.Torso["Right Shoulder"]:Clone()
            end
            headweld = grabbed.Torso["Neck"]:Clone()
            local targetweld = Instance.new('Weld',grabbed.Torso)
            targetweld.Part0 = grabbed.Torso
            targetweld.Part1 = grabbed.Head
            targetweld.Name = "TargetWeld"
            targetweld.C0 = CFrame.new(0,1.5,0) * CFrame.Angles(0, 0, 0)
            if grabbed:FindFirstChild('Left Arm') then
            local targetweld2 = Instance.new('Weld',grabbed["Left Arm"])
            targetweld2.Part0 = grabbed.Torso
            targetweld2.Part1 = grabbed["Left Arm"]
            targetweld2.C0 = CFrame.new(-1.5,0,0) * CFrame.Angles(0, 0, 0)
            end
           
            for i = 0,1,0.1 do
                if me:FindFirstChild("Left Arm") == nil or me:FindFirstChild("Torso") == nil or targetweld == nil then return end
                targetweld.C0 = targetweld.C0:lerp(CFrame.new(0, 1.5, 0)*CFrame.Angles(0.25, 0, 0), i)
                if targetweld2 then
                    targetweld2.C0 = targetweld2.C0:lerp(CFrame.new(-1.5, 0.5, 0)*CFrame.Angles(0, 0, -0.55), i)
                end
                wait(0.001)
            end
        end
    end
    end)
    coru()
    wait()
end
 
end
local coru=coroutine.wrap(function()
nub()
end)
coru()
 
player.CharacterAppearanceLoaded:connect(function()
    local coru =coroutine.wrap(function()
        nub()
    end)
    coru()
end)
 
while true do
    local coru=coroutine.wrap(function()
    if grabbed then
        v:FindFirstChildOfClass('Humanoid').Jump = false
        v:FindFirstChildOfClass('Humanoid').Sit = false
        v:FindFirstChildOfClass('Humanoid').JumpPower = 0
        v:FindFirstChildOfClass('Humanoid').PlatformStand = true
        v:FindFirstChildOfClass('Humanoid').Name = "No escape."
    end
    for i,v in pairs(rekt) do
        if v and v:FindFirstChildOfClass('Humanoid') then
            for a,c in pairs(v:GetChildren()) do
                if c:IsA('Tool') then
                    local model = Instance.new('Model',workspace)
                    c.Parent = model
                    model:TranslateBy(Vector3.new(3,0,0))
                end
            end
            v:FindFirstChildOfClass('Humanoid').Jump = false
            v:FindFirstChildOfClass('Humanoid').Sit = false
            v:FindFirstChildOfClass('Humanoid').JumpPower = 0
            v:FindFirstChildOfClass('Humanoid').PlatformStand = true
            v:FindFirstChildOfClass('Humanoid').Name = "No escape."
            local thing = getplr(v)
            if thing then
                thing.CameraMinZoomDistance = 3
            end
        else
            local thing = getplr(v)
            if thing then
                thing.CameraMinZoomDistance = 0.5
            end
            table.remove(rekt,i)
        end
    end
    end)
    coru()
    local coru2 = coroutine.wrap(function()
        if curpart then
            curpoint = curpart.CFrame.p
        end
        if lastgui then
            lastgui:Destroy()
            lastgui = nil
        end
        if curpoint then
            lastgui = Instance.new('BillboardGui',player.PlayerGui)
            lastgui.AlwaysOnTop = true
            lastgui.MaxDistance = 0
            lastgui.Size = UDim2.new(5,0,5,0)
            if curpart == nil then
                lastgui.Adornee = workspace
                lastgui.StudsOffsetWorldSpace = curpoint
            else
                lastgui.Adornee = curpart
            end
            local cross = Instance.new('ImageLabel',lastgui)
            cross.BackgroundTransparency = 1
            cross.Size = UDim2.new(1,0,1,0)
            cross.Image = 'rbxassetid://316279304'
            for i,v in pairs(zombies) do
                if v:FindFirstChildOfClass('Humanoid') then
                    v:FindFirstChildOfClass('Humanoid').WalkToPoint = curpoint
                end
            end
        else
            for i,v in pairs(zombies) do
                if v:FindFirstChildOfClass('Humanoid') and v:FindFirstChild('Head') then
                    v:FindFirstChildOfClass('Humanoid').WalkToPoint = v.Head.Position
                end
            end
        end
    end)
    coru2()
    wait()
end
end)

FLEESP.Name = "FLE ESP"
FLEESP.Parent = main
FLEESP.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
FLEESP.Position = UDim2.new(0.531380773, 0, 0.399288148, 0)
FLEESP.Size = UDim2.new(0, 200, 0, 50)
FLEESP.Font = Enum.Font.SourceSans
FLEESP.Text = "Fle Esp"
FLEESP.TextColor3 = Color3.fromRGB(255, 255, 255)
FLEESP.TextSize = 14.000
FLEESP.MouseButton1Down:connect(function()
--- GUI Was Made By ROCKY Hacks :)
--- Credit For The Scripts Goes To Their Real Owner(s)
--- ENOJY!!!
local FleeTheFacilityGUI = Instance.new("ScreenGui")
local OpenFrame = Instance.new("Frame")
local Open = Instance.new("ImageButton")
local OpenLabel = Instance.new("TextLabel")
local Click = Instance.new("ImageButton")
local MainFrame = Instance.new("ImageLabel")
local Label = Instance.new("TextLabel")
local PlayersToggleButton = Instance.new("TextButton")
local ComputersToggleButton = Instance.new("TextButton")
local PodsToggleButton = Instance.new("TextButton")
local ExitDoorsToggleButton = Instance.new("TextButton")
local DoorsToggleButton = Instance.new("TextButton")
local AirVentsToggleButton = Instance.new("TextButton")
local ReloadESP = Instance.new("TextButton")
local HackingFailToggle = Instance.new("TextButton")
local Running = Instance.new("ImageButton")
local Close = Instance.new("TextButton")
local Credit = Instance.new("TextLabel")
local blur = Instance.new("BlurEffect")
--Properties:
FleeTheFacilityGUI.Name = "FleeTheFacilityGUI "
FleeTheFacilityGUI.Parent = game.CoreGui
FleeTheFacilityGUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

blur.Parent = game.Lighting
blur.Enabled = false

OpenFrame.Name = "OpenFrame"
OpenFrame.Parent = FleeTheFacilityGUI
OpenFrame.BackgroundColor3 = Color3.new(1, 1, 1)
OpenFrame.BackgroundTransparency = 1
OpenFrame.Position = UDim2.new(0, 0, 0.609708726, 0)
OpenFrame.Size = UDim2.new(0, 100, 0, 100)

Open.Name = "Open"
Open.Parent = OpenFrame
Open.BackgroundColor3 = Color3.new(0.101961, 0.737255, 0.611765)
Open.BackgroundTransparency = 1
Open.BorderSizePixel = 0
Open.Position = UDim2.new(0.128758907, 0, 0.290485531, 0)
Open.Size = UDim2.new(0, 74, 0, 50)
Open.Image = "rbxassetid://1285673399"
Open.ImageColor3 = Color3.new(0.101961, 0.737255, 0.611765)
Open.ScaleType = Enum.ScaleType.Slice
Open.SliceCenter = Rect.new(8, 8, 247, 247)
Open.MouseButton1Down:connect(function()
	Running.Visible = true
	blur.Enabled = false
	Open.Position = UDim2.new(0.129, 0, 0.32, 0)
	Click.Position = UDim2.new(0.129, 0, 0.37, 0)
	wait(0.1)
	Open.Position = UDim2.new(0.128758907, 0, 0.27048552, 0)
	Click.Position = UDim2.new(0.128758907, 0, 0.330485493, 0)
	wait(0.13)
	OpenFrame.Visible = false
	Running:TweenPosition(UDim2.new(0.549, 0, 0.322, 0), 'Out', 'Quint', 7)
	wait(4)
	Credit.TextTransparency = 0.9
	wait(0.1)
	Credit.TextTransparency = 0.8
	wait(0.1)
	Credit.TextTransparency = 0.7
	wait(0.1)
	Credit.TextTransparency = 0.6
	wait(0.1)
	Credit.TextTransparency = 0.5
	wait(0.1)
	Credit.TextTransparency = 0.4
	wait(0.1)
	Credit.TextTransparency = 0.3
	wait(0.1)
	Credit.TextTransparency = 0.2
	wait(0.1)
	Credit.TextTransparency = 0.1
	wait(0.1)
	Credit.TextTransparency = 0
	wait(3)
	blur.Enabled = false
	Running.Position = UDim2.new(-0.120437965, 0, 0.322330087, 0)
	Credit.TextTransparency = 1
	MainFrame:TweenPosition(UDim2.new(0.421, 0, 0.315, 0), 'Out', 'Bounce', 3)
end)

OpenLabel.Name = "OpenLabel"
OpenLabel.Parent = Open
OpenLabel.AnchorPoint = Vector2.new(0, 0.5)
OpenLabel.BackgroundTransparency = 1
OpenLabel.Position = UDim2.new(0.108108111, 0, 0.5, 0)
OpenLabel.Size = UDim2.new(0.783783793, 0, 1, 0)
OpenLabel.Font = Enum.Font.SourceSans
OpenLabel.Text = "Open"
OpenLabel.TextColor3 = Color3.new(1, 1, 1)
OpenLabel.TextScaled = true
OpenLabel.TextSize = 14
OpenLabel.TextWrapped = true

Click.Name = "Click"
Click.Parent = OpenFrame
Click.BackgroundColor3 = Color3.new(0.901961, 0.494118, 0.133333)
Click.BackgroundTransparency = 1
Click.BorderSizePixel = 0
Click.Position = UDim2.new(0.128758922, 0, 0.360485554, 0)
Click.Size = UDim2.new(0, 74, 0, 50)
Click.ZIndex = 0
Click.Image = "rbxassetid://1285673399"
Click.ImageColor3 = Color3.new(0.0862745, 0.627451, 0.521569)
Click.ScaleType = Enum.ScaleType.Slice
Click.SliceCenter = Rect.new(8, 8, 247, 247)

MainFrame.Name = "MainFrame "
MainFrame.Parent = FleeTheFacilityGUI
MainFrame.BackgroundColor3 = Color3.new(1, 1, 1)
MainFrame.BackgroundTransparency = 1
MainFrame.Position = UDim2.new(0.416, 0, 1, 0)
MainFrame.Size = UDim2.new(0, 253, 0, 231)
MainFrame.Image = "rbxassetid://2260429633"
MainFrame.ImageColor3 = Color3.new(0.101961, 0.737255, 0.611765)
MainFrame.ScaleType = Enum.ScaleType.Slice
MainFrame.SliceCenter = Rect.new(12, 12, 13, 13)
MainFrame.Active = true
MainFrame.Draggable = true

Label.Name = "Label"
Label.Parent = MainFrame
Label.BackgroundColor3 = Color3.new(0.101961, 0.737255, 0.611765)
Label.BorderSizePixel = 0
Label.Size = UDim2.new(0, 253, 0, 31)
Label.Font = Enum.Font.Cartoon
Label.Text = "Flee The Facility"
Label.TextColor3 = Color3.new(1, 1, 1)
Label.TextScaled = true
Label.TextSize = 14
Label.TextWrapped = true

PlayersToggleButton.Name = "PlayersToggleButton"
PlayersToggleButton.Parent = MainFrame
PlayersToggleButton.BackgroundColor3 = Color3.new(0.0862745, 0.627451, 0.521569)
PlayersToggleButton.BorderSizePixel = 0
PlayersToggleButton.Position = UDim2.new(0, 0, 0.140106991, 0)
PlayersToggleButton.Size = UDim2.new(0, 253, 0, 20)
PlayersToggleButton.Font = Enum.Font.Cartoon
PlayersToggleButton.Text = "Players : OFF"
PlayersToggleButton.TextColor3 = Color3.new(1, 0, 0)
PlayersToggleButton.TextScaled = true
PlayersToggleButton.TextSize = 14
PlayersToggleButton.TextWrapped = true

ComputersToggleButton.Name = "ComputersToggleButton "
ComputersToggleButton.Parent = MainFrame
ComputersToggleButton.BackgroundColor3 = Color3.new(0.0862745, 0.627451, 0.521569)
ComputersToggleButton.BorderSizePixel = 0
ComputersToggleButton.Position = UDim2.new(0, 0, 0.239983425, 0)
ComputersToggleButton.Size = UDim2.new(0, 253, 0, 20)
ComputersToggleButton.Font = Enum.Font.Cartoon
ComputersToggleButton.Text = "Computers : OFF"
ComputersToggleButton.TextColor3 = Color3.new(1, 0, 0)
ComputersToggleButton.TextScaled = true
ComputersToggleButton.TextSize = 14
ComputersToggleButton.TextWrapped = true

PodsToggleButton.Name = "PodsToggleButton "
PodsToggleButton.Parent = MainFrame
PodsToggleButton.BackgroundColor3 = Color3.new(0.0862745, 0.627451, 0.521569)
PodsToggleButton.BorderSizePixel = 0
PodsToggleButton.Position = UDim2.new(0, 0, 0.347258002, 0)
PodsToggleButton.Size = UDim2.new(0, 253, 0, 20)
PodsToggleButton.Font = Enum.Font.Cartoon
PodsToggleButton.Text = " Freeze Pods : OFF"
PodsToggleButton.TextColor3 = Color3.new(1, 0, 0)
PodsToggleButton.TextScaled = true
PodsToggleButton.TextSize = 14
PodsToggleButton.TextWrapped = true

ExitDoorsToggleButton.Name = "ExitDoorsToggleButton "
ExitDoorsToggleButton.Parent = MainFrame
ExitDoorsToggleButton.BackgroundColor3 = Color3.new(0.0862745, 0.627451, 0.521569)
ExitDoorsToggleButton.BorderSizePixel = 0
ExitDoorsToggleButton.Position = UDim2.new(0, 0, 0.454532653, 0)
ExitDoorsToggleButton.Size = UDim2.new(0, 253, 0, 20)
ExitDoorsToggleButton.Font = Enum.Font.Cartoon
ExitDoorsToggleButton.Text = "Exit Doors : OFF"
ExitDoorsToggleButton.TextColor3 = Color3.new(1, 0, 0)
ExitDoorsToggleButton.TextScaled = true
ExitDoorsToggleButton.TextSize = 14
ExitDoorsToggleButton.TextWrapped = true

DoorsToggleButton.Name = "DoorsToggleButton "
DoorsToggleButton.Parent = MainFrame
DoorsToggleButton.BackgroundColor3 = Color3.new(0.0862745, 0.627451, 0.521569)
DoorsToggleButton.BorderSizePixel = 0
DoorsToggleButton.Position = UDim2.new(0, 0, 0.562179506, 0)
DoorsToggleButton.Size = UDim2.new(0, 253, 0, 20)
DoorsToggleButton.Font = Enum.Font.Cartoon
DoorsToggleButton.Text = " Doors : OFF"
DoorsToggleButton.TextColor3 = Color3.new(1, 0, 0)
DoorsToggleButton.TextScaled = true
DoorsToggleButton.TextSize = 14
DoorsToggleButton.TextWrapped = true

AirVentsToggleButton.Name = "AirVentsToggleButton "
AirVentsToggleButton.Parent = MainFrame
AirVentsToggleButton.BackgroundColor3 = Color3.new(0.0862745, 0.627451, 0.521569)
AirVentsToggleButton.BorderSizePixel = 0
AirVentsToggleButton.Position = UDim2.new(0, 0, 0.680179238, 0)
AirVentsToggleButton.Size = UDim2.new(0, 253, 0, 20)
AirVentsToggleButton.Font = Enum.Font.Cartoon
AirVentsToggleButton.Text = " Air Vents : OFF"
AirVentsToggleButton.TextColor3 = Color3.new(1, 0, 0)
AirVentsToggleButton.TextScaled = true
AirVentsToggleButton.TextSize = 14
AirVentsToggleButton.TextWrapped = true

ReloadESP.Name = "ReloadESP "
ReloadESP.Parent = MainFrame
ReloadESP.BackgroundColor3 = Color3.new(0.0862745, 0.627451, 0.521569)
ReloadESP.BorderSizePixel = 0
ReloadESP.Position = UDim2.new(0, 0, 0.89453572, 0)
ReloadESP.Size = UDim2.new(0, 253, 0, 20)
ReloadESP.Font = Enum.Font.Cartoon
ReloadESP.Text = "ESP - Click on this on each game"
ReloadESP.TextColor3 = Color3.new(1, 1, 1)
ReloadESP.TextScaled = true
ReloadESP.TextSize = 14
ReloadESP.TextWrapped = true

HackingFailToggle.Name = "HackingFailToggle "
HackingFailToggle.Parent = MainFrame
HackingFailToggle.BackgroundColor3 = Color3.new(0.0862745, 0.627451, 0.521569)
HackingFailToggle.BorderSizePixel = 0
HackingFailToggle.Position = UDim2.new(0, 0, 0.792651713, 0)
HackingFailToggle.Size = UDim2.new(0, 253, 0, 20)
HackingFailToggle.Font = Enum.Font.Cartoon
HackingFailToggle.Text = " Never Fail Hacking : OFF"
HackingFailToggle.TextColor3 = Color3.new(1, 0, 0)
HackingFailToggle.TextScaled = true
HackingFailToggle.TextSize = 14
HackingFailToggle.TextWrapped = true

Running.Name = "Running"
Running.Parent = FleeTheFacilityGUI
Running.BackgroundColor3 = Color3.new(1, 1, 1)
Running.BackgroundTransparency = 1
Running.BorderSizePixel = 0
Running.Position = UDim2.new(-0.120437965, 0, 0.322330087, 0)
Running.Size = UDim2.new(0, 132, 0, 155)
Running.Image = "rbxassetid://2844713159"

Credit.Name = "Credit"
Credit.Parent = FleeTheFacilityGUI
Credit.BackgroundColor3 = Color3.new(1, 1, 1)
Credit.BackgroundTransparency = 1
Credit.Position = UDim2.new(0.304744512, 0, 0.407766998, 0)
Credit.Size = UDim2.new(0, 331, 0, 67)
Credit.ZIndex = 0
Credit.Font = Enum.Font.Cartoon
Credit.Text = "Made By : Pro Hacks"
Credit.TextColor3 = Color3.new(1, 1, 1)
Credit.TextScaled = true
Credit.TextSize = 14
Credit.TextTransparency = 1
Credit.TextWrapped = true

Close.Name = "Close"
Close.Parent = MainFrame
Close.BackgroundColor3 = Color3.new(1, 1, 1)
Close.BackgroundTransparency = 1
Close.BorderSizePixel = 0
Close.Size = UDim2.new(0, 25, 0, 32)
Close.Font = Enum.Font.Cartoon
Close.Text = "X"
Close.TextColor3 = Color3.new(1, 0, 0)
Close.TextScaled = true
Close.TextSize = 14
Close.TextWrapped = true
Close.MouseButton1Down:connect(function()
	MainFrame:TweenPosition(UDim2.new(0.416, 0, 2, 0), 'Out', 'Bounce', 3)
	OpenFrame.Visible = true
end)

players = false
computers = false
pods = false
exitdoors = false
doors = false
vents = false

neverfailhack = false

--- DONT TOUCH!!
PlayersToggleButton.MouseButton1Down:connect(function()
if players == false then
players = true
PlayersToggleButton.Text = "Players: ON"
PlayersToggleButton.TextColor3 = Color3.fromRGB(0,255,0)
else
players = false
PlayersToggleButton.Text = "Players: OFF"
PlayersToggleButton.TextColor3 = Color3.fromRGB(255,0,0) 
end
end)

ComputersToggleButton.MouseButton1Down:connect(function()
if computers == false then
computers = true
ComputersToggleButton.Text = "Computers: ON"
ComputersToggleButton.TextColor3 = Color3.fromRGB(0,255,0)
else
computers = false
ComputersToggleButton.Text = "Computers: OFF"
ComputersToggleButton.TextColor3 = Color3.fromRGB(255,0,0) 
end
end)

PodsToggleButton.MouseButton1Down:connect(function()
if pods == false then
pods = true
PodsToggleButton.Text = "Freeze Pods: ON"
PodsToggleButton.TextColor3 = Color3.fromRGB(0,255,0)
else
pods = false
PodsToggleButton.Text = "Freeze Pods: OFF"
PodsToggleButton.TextColor3 = Color3.fromRGB(255,0,0) 
end
end)

ExitDoorsToggleButton.MouseButton1Down:connect(function()
if exitdoors == false then
exitdoors = true
ExitDoorsToggleButton.Text = "Exit Doors: ON"
ExitDoorsToggleButton.TextColor3 = Color3.fromRGB(0,255,0)
else
exitdoors = false
ExitDoorsToggleButton.Text = "Exit Doors: OFF"
ExitDoorsToggleButton.TextColor3 = Color3.fromRGB(255,0,0) 
end
end)

DoorsToggleButton.MouseButton1Down:connect(function()
if doors == false then
doors = true
DoorsToggleButton.Text = "Doors: ON"
DoorsToggleButton.TextColor3 = Color3.fromRGB(0,255,0)
else
doors = false
DoorsToggleButton.Text = "Doors: OFF"
DoorsToggleButton.TextColor3 = Color3.fromRGB(255,0,0) 
end
end)

AirVentsToggleButton.MouseButton1Down:connect(function()
if vents == false then
vents = true
AirVentsToggleButton.Text = "Air Vents: ON"
AirVentsToggleButton.TextColor3 = Color3.fromRGB(0,255,0)
else
vents = false
AirVentsToggleButton.Text = "Air Vents: OFF"
AirVentsToggleButton.TextColor3 = Color3.fromRGB(255,0,0) 
end
end)

HackingFailToggle.MouseButton1Down:connect(function()
if neverfailhack == false then
neverfailhack = true
HackingFailToggle.Text = "Never fail hacking: ON"
HackingFailToggle.TextColor3 = Color3.fromRGB(0,255,0)
else
neverfailhack = false
HackingFailToggle.Text = "Never fail hacking: OFF"
HackingFailToggle.TextColor3 = Color3.fromRGB(255,0,0) 
end
end)

ReloadESP.MouseButton1Down:connect(function()
game.Lighting.FogEnd = 10000000

if workspace:findFirstChild("ESP") then
workspace.ESP:remove()
end

if workspace:findFirstChild("ESPComputer") then
workspace.ESPComputer:remove()
end

if workspace:findFirstChild("ESPPod") then
workspace.ESPPod:remove()
end

if workspace:findFirstChild("ESPExitDoor") then
workspace.ESPExitDoor:remove()
end

if workspace:findFirstChild("ESPDoors") then
workspace.ESPDoors:remove()
end

if workspace:findFirstChild("ESPVents") then
workspace.ESPVents:remove()
end


function GetSizeOfObject(Obj)
if Obj:IsA("BasePart") then
return Obj.Size
elseif Obj:IsA("Model") then
return Obj:GetExtentsSize()
end
end

local ESP = Instance.new("Folder",workspace)
ESP.Name = "ESP"



function CreateESPPart(BodyPart,r,g,b)
local ESPPartparent = BodyPart
local Box = Instance.new("BoxHandleAdornment")
Box.Size = GetSizeOfObject(ESPPartparent) + Vector3.new(0.1, 0.1, 0.1)
Box.Name = "ESPPart"
Box.Adornee = ESPPartparent
Box.Color3 = Color3.fromRGB(r,g,b)
Box.AlwaysOnTop = true
Box.ZIndex = 5
Box.Transparency = 0.4
Box.Parent = ESP
if BodyPart.Parent.Name == game.Players.LocalPlayer.Name then
Box:remove()
spawn (function()
while true do
wait(0.1)
if BodyPart ~= nil then
Box:remove()
end
end
end)
end
end


local player = game.Players:GetChildren()
for i =1, #player do
local bodyparts = player[i].Character:GetChildren()
for i =1, #bodyparts do
if bodyparts[i].ClassName == "Part" then
if bodyparts[i].Parent:findFirstChild("BeastPowers") then
CreateESPPart(bodyparts[i],255,0,0)
else
CreateESPPart(bodyparts[i],170,170,255)
end
end
end
end


local ESPPC = Instance.new("Folder",workspace)
ESPPC.Name = "ESPComputer"

local ESPPod = Instance.new("Folder",workspace)
ESPPod.Name = "ESPPod"

local ESPExitDoor = Instance.new("Folder",workspace)
ESPExitDoor.Name = "ESPExitDoor"

local ESPDoors = Instance.new("Folder",workspace)
ESPDoors.Name = "ESPDoors"

local ESPVents = Instance.new("Folder",workspace)
ESPVents.Name = "ESPVents"


local map = workspace:findFirstChild(tostring(game.ReplicatedStorage.CurrentMap.Value))
local children = map:GetChildren()
for i =1, #children do
if children[i].Name == "ComputerTable" then 
local Box = Instance.new("BoxHandleAdornment")
Box.Size = GetSizeOfObject(children[i].Screen) + Vector3.new(-0.5, -0.5, -0.5)
Box.Name = "ESPPart"
Box.Adornee = children[i].Screen
spawn (function()
while true do
wait(0.1)
Box.Color3 = children[i].Screen.Color
end
end)
Box.AlwaysOnTop = true
Box.ZIndex = 5
Box.Transparency = 0.4
Box.Parent = ESPPC
end
if children[i].Name == "FreezePod" then 
local Box = Instance.new("BoxHandleAdornment")
Box.Size = GetSizeOfObject(children[i].BasePart) + Vector3.new(0.1, 5, 0.1)
Box.Name = "ESPPart"
Box.Adornee = children[i].BasePart
Box.Color3 = Color3.fromRGB(0,0,255)
Box.AlwaysOnTop = true
Box.ZIndex = 5
Box.Transparency = 0.8
Box.Parent = ESPPod
end
if children[i].Name == "ExitDoor" then 
local Box = Instance.new("BoxHandleAdornment")
Box.Size = GetSizeOfObject(children[i].ExitDoorTrigger) + Vector3.new(-1, 5, -1)
Box.Name = "ESPPart"
Box.Adornee = children[i].ExitDoorTrigger
Box.Color3 = Color3.fromRGB(255,255,0)
Box.AlwaysOnTop = true
Box.ZIndex = 5
Box.Transparency = 0.8
Box.Parent = ESPExitDoor
end
if children[i].Name == "SingleDoor" then 
local Box = Instance.new("BoxHandleAdornment")
if children[i].Door:findFirstChild("DoorBoard") then
Box.Size = GetSizeOfObject(children[i].Door.DoorBoard) + Vector3.new(0.1, 0.1, 0.1)
Box.Name = "ESPPart"
Box.Adornee = children[i].Door.DoorBoard
Box.Color3 = Color3.fromRGB(204,142,105)
Box.AlwaysOnTop = true
Box.ZIndex = 5
Box.Transparency = 0.8
Box.Parent = ESPDoors
end
end
if children[i].Name == "DoubleDoor" then 
local Box = Instance.new("BoxHandleAdornment")
if children[i].DoorL:findFirstChild("DoorBoard") then
Box.Size = GetSizeOfObject(children[i].DoorL.DoorBoard) + Vector3.new(0.1, 0.1, 0.1)
Box.Name = "ESPPart"
Box.Adornee = children[i].DoorL.DoorBoard
Box.Color3 = Color3.fromRGB(204,142,105)
Box.AlwaysOnTop = true
Box.ZIndex = 5
Box.Transparency = 0.8
Box.Parent = ESPDoors
end
end
if children[i].Name == "DoubleDoor" then 
local Box = Instance.new("BoxHandleAdornment")
if children[i].DoorR:findFirstChild("DoorBoard") then
Box.Size = GetSizeOfObject(children[i].DoorR.DoorBoard) + Vector3.new(0.1, 0.1, 0.1)
Box.Name = "ESPPart"
Box.Adornee = children[i].DoorR.DoorBoard
Box.Color3 = Color3.fromRGB(204,142,105)
Box.AlwaysOnTop = true
Box.ZIndex = 5
Box.Transparency = 0.8
Box.Parent = ESPDoors
end
end
if children[i].Name == "SingleDoor" then 
local Box = Instance.new("BoxHandleAdornment")
if children[i].Door:findFirstChild("DoorBoard") == false then
Box.Size = GetSizeOfObject(children[i].Door.Part) + Vector3.new(0.1, 0.1, 0.1)
Box.Name = "ESPPart"
Box.Adornee = children[i].Door.Part
Box.Color3 = Color3.fromRGB(204,142,105)
Box.AlwaysOnTop = true
Box.ZIndex = 5
Box.Transparency = 0.8
Box.Parent = ESPDoors
end
end
if children[i].Name == "DoubleDoor" then 
local Box = Instance.new("BoxHandleAdornment")
if children[i].DoorR:findFirstChild("DoorBoard") == false then
Box.Size = GetSizeOfObject(children[i].DoorL.Part) + Vector3.new(0.1, 0.1, 0.1)
Box.Name = "ESPPart"
Box.Adornee = children[i].DoorL.Part
Box.Color3 = Color3.fromRGB(204,142,105)
Box.AlwaysOnTop = true
Box.ZIndex = 5
Box.Transparency = 0.8
Box.Parent = ESPDoors
end
end
if children[i].Name == "DoubleDoor" then 
local Box = Instance.new("BoxHandleAdornment")
if children[i].DoorR:findFirstChild("DoorBoard") == false then
Box.Size = GetSizeOfObject(children[i].DoorR.Part) + Vector3.new(0.1, 0.1, 0.1)
Box.Name = "ESPPart"
Box.Adornee = children[i].DoorR.Part
Box.Color3 = Color3.fromRGB(204,142,105)
Box.AlwaysOnTop = true
Box.ZIndex = 5
Box.Transparency = 0.8
Box.Parent = ESPDoors
end
end

if children[i].Name == "AirVent" then 
local Box = Instance.new("BoxHandleAdornment")
Box.Size = GetSizeOfObject(children[i].Part) + Vector3.new(4, 0.1, 4)
Box.Name = "ESPPart"
Box.Adornee = children[i].Part
Box.Color3 = Color3.fromRGB(100,100,100)
Box.AlwaysOnTop = true
Box.ZIndex = 5
Box.Transparency = 0.8
Box.Parent = ESPVents
end
end

if players == false then
workspace.ESP:remove()
end

if computers == false then
workspace.ESPComputer:remove()
end

if pods == false then
workspace.ESPPod:remove()
end

if exitdoors == false then
workspace.ESPExitDoor:remove()
end

if doors == false then
workspace.ESPDoors:remove()
end

if vents == false then
workspace.ESPVents:remove()
end
end)

spawn (function()
while true do
wait()
if neverfailhack == true then
game.ReplicatedStorage.RemoteEvent:FireServer("SetPlayerMinigameResult",true)
end
end
end)
end)

FleTp.Name = "Fle Tp"
FleTp.Parent = main
FleTp.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
FleTp.Position = UDim2.new(0.0606694557, 0, 0.684576273, 0)
FleTp.Size = UDim2.new(0, 200, 0, 50)
FleTp.Font = Enum.Font.SciFi
FleTp.Text = "Fle Tp"
FleTp.TextColor3 = Color3.fromRGB(255, 255, 255)
FleTp.TextSize = 14.000
FleTp.MouseButton1Down:connect(function()
loadstring(game:HttpGet("https://pastebin.com/raw/mFnVACZ1",true))()
end)

JailbreakAutoRob.Name = "Jailbreak Auto Rob"
JailbreakAutoRob.Parent = main
JailbreakAutoRob.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
JailbreakAutoRob.BorderColor3 = Color3.fromRGB(255, 0, 255)
JailbreakAutoRob.Position = UDim2.new(0.53073442, 0, 0.684305072, 0)
JailbreakAutoRob.Size = UDim2.new(0, 200, 0, 50)
JailbreakAutoRob.Font = Enum.Font.SciFi
JailbreakAutoRob.Text = "Jailbreak Auto Rob"
JailbreakAutoRob.TextColor3 = Color3.fromRGB(255, 255, 255)
JailbreakAutoRob.TextSize = 14.000
JailbreakAutoRob.MouseButton1Down:connect(function()
loadstring(game:GetObjects("rbxassetid://1461971147")[1].Source)()
end)

Openmain.Name = "Openmain"
Openmain.Parent = ScreenGui
Openmain.BackgroundColor3 = Color3.fromRGB(85, 85, 255)
Openmain.Position = UDim2.new(0, 0, 0.29880479, 0)
Openmain.Size = UDim2.new(0, 158, 0, 40)
Openmain.Active = true
Openmain.Draggable = true

Open.Name = "Open"
Open.Parent = Openmain
Open.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Open.BorderColor3 = Color3.fromRGB(0, 0, 0)
Open.Size = UDim2.new(0, 158, 0, 40)
Open.Font = Enum.Font.SciFi
Open.Text = "Open"
Open.TextColor3 = Color3.fromRGB(85, 85, 255)
Open.TextSize = 14.000
Open.MouseButton1Down:connect(function()
Openmain.Visible = false
main.Visible = true
end)
